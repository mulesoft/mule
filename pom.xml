<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <!-- Version -->
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.mule</groupId>
        <artifactId>mule-plugin-mgmt-parent-pom</artifactId>
        <version>4.9.0-SNAPSHOT</version>
    </parent>

    <groupId>org.mule.runtime</groupId>
    <artifactId>mule</artifactId>
    <packaging>pom</packaging>
    <version>4.9.0-SNAPSHOT</version>

    <!-- Organization -->
    <organization>
        <name>MuleSoft, Inc.</name>
        <url>http://www.mulesoft.com</url>
    </organization>

    <!-- Project -->
    <name>Mule Kernel</name>
    <description>
        Mule is the runtime engine of Anypoint™ Platform. It is the industry’s only unified platform that combines data and application integration across legacy systems, SaaS applications, and APIs with hybrid deployment options for maximum flexibility.
    </description>
    <url>https://developer.mulesoft.com/</url>
    <inceptionYear>2003</inceptionYear>
    <licenses>
        <license>
            <name>CPAL v1.0</name>
            <url>http://www.mulesoft.com/CPAL</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>canoasan</id>
            <name>Matias Baldini</name>
            <email>matias.baldini@mulesoft.com</email>
            <roles>
                <role>Project Manager</role>
            </roles>
        </developer>
        <developer>
            <id>dfeist</id>
            <name>Daniel Feist</name>
        </developer>
        <developer>
            <id>afelisatti</id>
            <name>Ana Felisatti</name>
        </developer>
        <developer>
            <id>marianogonzalez</id>
            <name>Mariano Gonzalez</name>
        </developer>
        <developer>
            <id>aiannucci</id>
            <name>Alejandro Iannucci</name>
        </developer>
        <developer>
            <id>pablokraan</id>
            <name>Pablo Kraan</name>
        </developer>
        <developer>
            <id>pablolagreca</id>
            <name>Pablo La Greca</name>
        </developer>
        <developer>
            <id>anosenzo</id>
            <name>Alejandro Nosenzo</name>
        </developer>
        <developer>
            <id>elrodro83</id>
            <name>Rodrigo Merino</name>
        </developer>
        <developer>
            <id>gsfernandes</id>
            <name>Guillermo Fernandes</name>
        </developer>
        <developer>
            <id>alepulver</id>
            <name>Alejandro Pulver</name>
        </developer>
        <developer>
            <id>mbuchwald</id>
            <name>Martin Buchwald</name>
        </developer>
        <developer>
            <id>alegmarra</id>
            <name>Alejandro Garcia Marra</name>
        </developer>
        <developer>
            <id>estebanwasinger</id>
            <name>Esteban Wasinger</name>
        </developer>
        <developer>
            <id>juandesi</id>
            <name>Juan Desimoni</name>
        </developer>
        <developer>
            <id>ndinu</id>
            <name>Nicolas Di Nucci</name>
        </developer>
        <developer>
            <id>fsgonz</id>
            <name>Fabian Gonzalez</name>
        </developer>
        <developer>
            <id>lucianoRM</id>
            <name>Luciano Raineri Marchina</name>
        </developer>
    </developers>
    <contributors>
        <!-- Refer to https://github.com/mulesoft/mule/graphs/contributors -->
    </contributors>
    <issueManagement>
        <system>jira</system>
        <url>https://www.mulesoft.org/jira/projects/MULE/issues/</url>
    </issueManagement>

    <!-- Build -->
    <scm>
        <connection>scm:git:git://github.com/mulesoft/mule.git</connection>
        <developerConnection>scm:git:git@github.com:mulesoft/mule.git</developerConnection>
        <url>https://github.com/mulesoft/mule</url>
    </scm>

    <modules>
        <module>errors</module>
        <module>runtime-extension-model</module>
        <module>core</module>
        <module>core-tests</module>
        <module>modules</module>
        <module>tests</module>
    </modules>

    <properties>
        <javaVersion>17</javaVersion>
        <javaReleaseVersion>${javaVersion}</javaReleaseVersion>
        <javaModuleName>${project.groupId}.${project.artifactId}</javaModuleName>
        <javaTestModuleName>${javaModuleName}.test</javaTestModuleName>
        <mule.termination.log.path.env.variable>${java.io.tmpdir}/termination_log_set_by_env_property</mule.termination.log.path.env.variable>

        <!-- Properties that can be overriden in submodules -->
        <skipExportTests>true</skipExportTests>

        <!-- Properties that can be used to enable/disable parts of the build via cmd line or profiles -->
        <skipVerifications>false</skipVerifications>
        <skipInstalls>false</skipInstalls>
        <skipNoSnapshotsEnforcerPluginRule>true</skipNoSnapshotsEnforcerPluginRule>

        <!--
            The above project.url will not be picked up in the manifest,
            instead a module artifact id is erroneously substituted.
         -->
        <productUrl>https://developer.mulesoft.com/</productUrl>
        <dev.list>mule-esb@mulesoft.com</dev.list>

        <muleBomVersion>4.9.0-SNAPSHOT</muleBomVersion>
        <muleMavenClientBomVersion>2.4.0-SNAPSHOT</muleMavenClientBomVersion>

        <weaveVersion>2.9.0-SNAPSHOT</weaveVersion>

        <!-- Mule Snapshot Dependencies -->
        <mulePropertiesApiVersion>1.5.0-SNAPSHOT</mulePropertiesApiVersion>
        <muleExtensionsApiVersion>1.9.0-SNAPSHOT</muleExtensionsApiVersion>
        <muleConnectivityApiVersion>1.1.0-SNAPSHOT</muleConnectivityApiVersion>
        <muleHttpPolicyApiVersion>1.9.0-SNAPSHOT</muleHttpPolicyApiVersion>
        <mulePolicyApiVersion>1.9.0-SNAPSHOT</mulePolicyApiVersion>
        <muleApiVersion>1.9.0-SNAPSHOT</muleApiVersion>
        <muleMetadataModelVersion>1.9.0-SNAPSHOT</muleMetadataModelVersion>
        <metadataModelApiVersion>${muleMetadataModelVersion}</metadataModelApiVersion>

        <licensePath>LICENSE_HEADER_CPAL.txt</licensePath>
        <licenseYear>2023</licenseYear>

        <muleAnnotationsApiVersion>1.8.0-SNAPSHOT</muleAnnotationsApiVersion>
        <mule.module.maven.plugin.version>1.9.0-SNAPSHOT</mule.module.maven.plugin.version>
        <mule.extensions.maven.plugin.version>1.9.0-SNAPSHOT</mule.extensions.maven.plugin.version>
        <mule.app.plugins.maven.plugin.version>1.9.0-SNAPSHOT</mule.app.plugins.maven.plugin.version>
        <mule.jmh.elasticsearch.maven.plugin.version>1.0.0-SNAPSHOT</mule.jmh.elasticsearch.maven.plugin.version>

        <formatterConfigPath>formatter.xml</formatterConfigPath>
        <oldMuleArtifactVersion>4.8.0-SNAPSHOT</oldMuleArtifactVersion>
        <revapi.checkDependencies>false</revapi.checkDependencies>
        <revapi.failOnUnresolvedArtifacts>true</revapi.failOnUnresolvedArtifacts>
        <skipMuleModuleMojos>false</skipMuleModuleMojos>
        <skipRevapiCheck>${skipMuleModuleMojos}</skipRevapiCheck>
        <mule.module.maven.plugin.fillOptionalPackages>false</mule.module.maven.plugin.fillOptionalPackages>
        
        <surefire.args.base>-XX:+TieredCompilation ${surefire.args.encoding} ${surefire.args.aspectj} ${surefire.args.jacoco}</surefire.args.base>
        <!-- TODO W-13145677 Make the add-opens specific to 'org.mule.test.unit' instead of ALL-UNNAMED --> 
        <surefire.test.unit.open.args>
            -XX:+IgnoreUnrecognizedVMOptions
            --add-opens=java.base/java.lang=ALL-UNNAMED
            --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
            ${surefire.args.base}
        </surefire.test.unit.open.args>
        <!-- Emulate the behaviour in standalone, where slf4j is loaded in the boot layer -->
        <surefire.slf4j.module.args>
            -XX:+IgnoreUnrecognizedVMOptions
            --module-path=${org.slf4j:slf4j-api:jar}
            --add-modules=org.slf4j
            ${surefire.test.unit.open.args}
        </surefire.slf4j.module.args>

        <gmavenPluginVersion>2.1.0</gmavenPluginVersion>
        <!-- this groovy version is to be used during the build process or for tests, not bundled in the distro -->
        <groovyVersionBuild>4.0.11</groovyVersionBuild>
        <assembly.verifier.version>2.0.0</assembly.verifier.version>
        <mule.maven.plugin.version>4.2.0</mule.maven.plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.mule</groupId>
                <artifactId>mule-runtime-bom</artifactId>
                <version>${muleBomVersion}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mule</groupId>
                <artifactId>mule-tests-bom</artifactId>
                <version>${muleBomVersion}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- NOT the service (with mule-service classifier) -->
            <!-- this raw jar is used in unit tests only -->
            <dependency>
                <groupId>org.mule.services</groupId>
                <artifactId>mule-service-weave</artifactId>
                <version>${weaveVersion}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <downloadUrl>http://www.mulesoft.org/display/MULE/Download</downloadUrl>
        <repository>
            <id>mule-releases</id>
            <name>Mule Release Repository</name>
            <url>https://repository-master.mulesoft.org/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>mule-snapshots</id>
            <name>Mule Snapshot Repository</name>
            <url>https://repository-master.mulesoft.org/nexus/content/repositories/snapshots</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>mule</id>
            <name>Mule Repository</name>
            <url>https://repository.mulesoft.org/nexus/content/repositories/public/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>mule-plugin</id>
            <name>Mule Repository</name>
            <url>https://repository.mulesoft.org/nexus/content/repositories/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <defaultGoal>install</defaultGoal>

        <!--
            Specify versions of the plugins used in child poms here.
            Do NOT put any configuration for plugins here. Global plugin
            configuration should go into the <plugins> section.
        -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <configuration>
                        <skip>${skipInstalls}</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <configuration>
                        <doclint>none</doclint>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code.formatter</groupId>
                    <artifactId>formatter-maven-plugin</artifactId>
                    <configuration>
                        <compilerCompliance>${javaVersion}</compilerCompliance>
                        <compilerSource>${javaVersion}</compilerSource>
                        <compilerTargetPlatform>${javaVersion}</compilerTargetPlatform>
                        <configFile>${basedir}/${formatterConfigPath}</configFile>
                        <configJsFile>${basedir}/${formatterConfigPath}</configJsFile>
                        <aggregator>false</aggregator>
                        <executionRoot>true</executionRoot>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${javaVersion}</source>
                        <target>${javaVersion}</target>
                        <release>${javaReleaseVersion}</release>
                        <testSource>${javaVersion}</testSource>
                        <testTarget>${javaVersion}</testTarget>
                        <testRelease>${javaReleaseVersion}</testRelease>
                        <parameters>true</parameters>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>analyze-dependencies-for-extension</id>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <phase>none</phase>
                            <configuration>
                                <failOnWarning>true</failOnWarning>
                                <verbose>true</verbose>
                                <ignoredUsedUndeclaredDependencies>
                                    <!-- Mule dependencies are ignored -->
                                    <ignoredUsedUndeclaredDependency>org.mule*</ignoredUsedUndeclaredDependency>
                                    <!-- Testing dependencies are ignored -->
                                    <ignoredUsedUndeclaredDependency>org.hamcrest</ignoredUsedUndeclaredDependency>
                                    <ignoredUsedUndeclaredDependency>org.mockito</ignoredUsedUndeclaredDependency>
                                    <ignoredUsedUndeclaredDependency>junit:junit</ignoredUsedUndeclaredDependency>
                                    <ignoredUsedUndeclaredDependency>commons-logging:commons-logging</ignoredUsedUndeclaredDependency>
                                    <ignoredUsedUndeclaredDependency>org.apache.ftpserver:ftpserver-core</ignoredUsedUndeclaredDependency>
                                    <ignoredUsedUndeclaredDependency>io.qameta.allure</ignoredUsedUndeclaredDependency>

                                    <!-- Logging related artifacts are exposed by the BOOTSTRAP ClassLoader -->
                                    <ignoredUsedUndeclaredDependency>org.slf4j:slf4j-api</ignoredUsedUndeclaredDependency>
                                </ignoredUsedUndeclaredDependencies>
                                <ignoredUnusedDeclaredDependencies>
                                    <!-- Don't need to worry about this -->
                                    <ignoredUnusedDeclaredDependency>:::</ignoredUnusedDeclaredDependency>
                                </ignoredUnusedDeclaredDependencies>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- The maven-jar-plugin generates the MANIFEST.MF for all modules
                    where <packaging>jar</packaging> is used. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-test-jar</id>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                            <configuration>
                                <skip>${skipExportTests}</skip>
                                <skipIfEmpty>true</skipIfEmpty>
                                <archive>
                                    <manifestEntries>
                                        <Automatic-Module-Name>${javaTestModuleName}</Automatic-Module-Name>
                                    </manifestEntries>
                                </archive>
                            </configuration>
                        </execution>
                        <execution>
                            <id>default-jar</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <configuration>
                                <archive>
                                    <manifestEntries>
                                        <Automatic-Module-Name>${javaModuleName}</Automatic-Module-Name>
                                    </manifestEntries>
                                </archive>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <archive>
                            <!--
                                Disabled for http://mule.mulesoft.org/jira/browse/MULE-1153
                                and http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4408526
                             -->
                            <index>false</index>
                            <!-- List dependencies in the MANIFEST.MF -->
                            <manifest>
                                <!-- Note that we do not generate a classpath into the manifest, since doing so
                                     significantly slows down compilations that use the jar -->
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <!-- Custom Entries -->
                            <manifestEntries>
                                <!-- include repository revision from buildnumber plugin -->
                                <Build-Revision>${buildNumber}</Build-Revision>
                                <Build-Date>${timestamp}</Build-Date>
                                <Dev-List-Email>${dev.list}</Dev-List-Email>
                                <Supported-Jdks>[${javaVersion},18)</Supported-Jdks>
                                <Recommended-Jdks>[${javaVersion},18)</Recommended-Jdks>
                                <More-Info>For more information go to ${productUrl}</More-Info>
                                <Support>Get commercial support: ${project.organization.url}/support</Support>
                                <Description>Mule Runtime and Integration Platform</Description>
                                <License>CPAL v1.0 http://www.mulesoft.com/CPAL/</License>
                                <Vendor-Url>${project.organization.url}</Vendor-Url>
                                <Product-Url>${productUrl}</Product-Url>
                                <Build-Date>${mvn.timestamp.yyyy-MM-dd-HH:mm:ss}</Build-Date>
                                <Git-tags>${git.tags}</Git-tags>
                                <Git-branch>${git.branch}</Git-branch>
                                <Git-remote-origin-url>${git.remote.origin.url}</Git-remote-origin-url>
                                <Git-commit-id>${git.commit.id}</Git-commit-id>
                                <Git-commit-id-describe>${git.commit.id.describe}</Git-commit-id-describe>
                                <Git-commit-time>${git.commit.time}</Git-commit-time>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>
                        <workingDirectory>${project.build.directory}</workingDirectory>
                        <trimStackTrace>false</trimStackTrace>
                        <excludes>
                            <!-- Surefire should be able to detect that classes are abstract but it seems it isn't -->
                            <exclude>**/Abstract*.*</exclude>
                            <!-- Our tests never start with Test* but we have a lot of test helpers that match -->
                            <exclude>**/Test*.java</exclude>
                            <!-- exclude inner classes -->
                            <exclude>**/*$*</exclude>
                        </excludes>
                        <systemPropertyVariables>
                            <!-- Just propagate this variable due to surefire will not do this when forked vm for tests -->
                            <mule.freePortFinder.lockPath>${java.io.tmpdir}/mule/freePortFinder</mule.freePortFinder.lockPath>
                            <maven.projectVersion>${project.version}</maven.projectVersion>
                        </systemPropertyVariables>
                        <environmentVariables>
                            <MULE_TERMINATION_LOG_PATH>${mule.termination.log.path.env.variable}</MULE_TERMINATION_LOG_PATH>
                        </environmentVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <configuration>
                        <!-- Exclude alternate versions for multi-release modules-->
                        <excludes>
                            <exclude>META-INF/**/*</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.mule.tools</groupId>
                    <artifactId>mule-assembly-verifier</artifactId>
                    <version>${assembly.verifier.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <configuration>
                        <header>${licensePath}</header>
                        <properties>
                            <year>${licenseYear}</year>
                        </properties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.mule.runtime.plugins</groupId>
                    <artifactId>mule-plugin-maven-plugin</artifactId>
                    <version>${mule.app.plugins.maven.plugin.version}</version>
                    <extensions>true</extensions>
                </plugin>
                <plugin>
                    <groupId>org.mule.tools.maven</groupId>
                    <artifactId>mule-module-maven-plugin</artifactId>
                    <version>${mule.module.maven.plugin.version}</version>
                </plugin>
                <!-- This is used in test poms -->
                <!-- It is declared here so that version upgrading bots keep the version property up to date -->
                <plugin>
                    <groupId>org.mule.tools.maven</groupId>
                    <artifactId>mule-maven-plugin</artifactId>
                    <version>${mule.maven.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.3.1,)</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.mule.tools.maven</groupId>
                <artifactId>mule-module-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>analyze</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>analyze</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipMuleModuleMojos}</skip>
                    <fillOptionalPackages>${mule.module.maven.plugin.fillOptionalPackages}</fillOptionalPackages>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.revapi</groupId>
                <artifactId>revapi-maven-plugin</artifactId>
                <configuration>
                    <skip>${skipRevapiCheck}</skip>
                    <oldVersion>${oldMuleArtifactVersion}</oldVersion>
                    <checkDependencies>${revapi.checkDependencies}</checkDependencies>
                    <failOnUnresolvedArtifacts>{revapi.failOnUnresolvedArtifacts}</failOnUnresolvedArtifacts>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <!--
                 Needed for checkstyle to find the license header file from the classpath.
                 CAVEAT: you cannot build the site without mule-buildtools present in
                 your local repository.

                 For plugin config see below in reporting section
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.mule</groupId>
                        <artifactId>mule-buildtools</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
            </plugin>
            <plugin>
                <!-- Aggregate sources artifact must be explicitly required from the maven command -->
                <!-- Attempting to generate it automatically by configuring the execution here will cause issues when adding new modules -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-test-sources</id>
                        <goals>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependencies</report>
                            <report>index</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <id>aggregate</id>
                        <inherited>false</inherited>
                        <reports>
                            <report>aggregate-no-fork</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <minmemory>128m</minmemory>
                    <maxmemory>512m</maxmemory>
                    <charset>ISO-8859-1</charset>
                    <encoding>ISO-8859-1</encoding>
                    <source>${javaVersion}</source>
                    <doclint>none</doclint>
                    <!-- Link to the external online JavaDoc -->
                    <links>
                        <link>http://docs.oracle.com/javase/7/docs/api/</link>
                        <link>http://java.sun.com/j2ee/sdk_1.3/techdocs/api/</link>
                        <link>http://jakarta.apache.org/commons/beanutils/commons-beanutils-1.9.4/docs/api/</link>
                        <link>http://jakarta.apache.org/commons/collections/api-3.2/</link>
                        <link>http://jakarta.apache.org/httpcomponents/httpclient-3.x/apidocs/</link>
                        <link>http://jakarta.apache.org/commons/io/api-1.2/</link>
                        <link>http://jakarta.apache.org/commons/lang/api-2.1/</link>
                        <link>http://jakarta.apache.org/commons/pool/apidocs/</link>
                        <link>http://logging.apache.org/log4j/2.x/log4j-api/apidocs/</link>
                        <link>http://www.slf4j.org/api/</link>
                        <link>http://junit.sourceforge.net/javadoc/</link>
                    </links>
                    <groups>
                        <group>
                            <title>Mule Core</title>
                            <packages>org.mule.runtime.core.*</packages>
                        </group>
                        <group>
                            <title>Modules (not part of the Mule core)</title>
                            <packages>org.mule.runtime.module.*:org.mule.runtime.core.components.*</packages>
                        </group>
                        <group>
                            <title>Testing Framework</title>
                            <packages>org.mule.tck.*:org.mule.functional.*</packages>
                        </group>
                        <group>
                            <title>Tools</title>
                            <packages>org.mule.tools.*</packages>
                        </group>
                    </groups>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <profiles>
        <profile>
            <id>testJdkWithoutXmlModule</id>
            <activation>
                <!-- This profile cannot be activated based on the jdk because the jdk on which this has to be activated or not -->
                <!-- is the one used to run the tests, not the one used to run Maven. -->
                <property>
                    <name>!testJdkWithXmlModule</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <configuration>
                                <additionalClasspathElements>
                                    <!-- Add this to the classpath so it is available when running tests with jvm8 -->
                                    <!-- but it does not interfere with the module system --> 
                                    <!-- (it has colliding packages with java.xml module) when running with java11+ -->
                                    <additionalClasspathElement>${settings.localRepository}/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar</additionalClasspathElement>
                                </additionalClasspathElements>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>get-xml-apis</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>get</goal>
                                </goals>
                                <configuration>
                                    <artifact>xml-apis:xml-apis:1.4.01</artifact>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>yourkit-agent</id>
            <properties>
                <!-- When using this profile, the location of the YourKit agent has to be provided with a vm argument -->
                <!-- A typical agent location in OSX is like: -->
                <!-- -Dyourkit.agent.path=/Applications/YourKit-Java-Profiler-2019.8.app/Contents/Resources/bin/mac/libyjpagent.dylib -->
                <surefire.args>-agentpath:'${yourkit.agent.path}'=disablestacktelemetry,exceptions=disable,probe_disable=*,listen=all ${surefire.args.base}</surefire.args>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <properties>
                <skipVerifications>false</skipVerifications>
                <skipInstalls>false</skipInstalls>
                <skipGpg>false</skipGpg>
                <skipNoSnapshotsEnforcerPluginRule>false</skipNoSnapshotsEnforcerPluginRule>
            </properties>
            <build>
                <defaultGoal>deploy</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <configuration>
                            <gpgArguments>
                                <arg>--pinentry-mode</arg>
                                <arg>loopback</arg>
                            </gpgArguments>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release-dry-run</id>
            <properties>
                <skipNoSnapshotsEnforcerPluginRule>false</skipNoSnapshotsEnforcerPluginRule>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
