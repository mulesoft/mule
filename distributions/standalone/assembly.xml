<!-- Assembly descriptor for the full Mule distribution. -->
<assembly>
    <id>full</id>
    <formats>
        <format>zip</format>
        <format>tar.gz</format>
    </formats>

    <fileSets>
        <fileSet>
            <directory>src/main/resources</directory>
            <outputDirectory></outputDirectory>
            <excludes>
                <exclude>**/IGNORE</exclude>
                <exclude>bin/**</exclude>
                <exclude>lib/boot/exec/**</exclude>
            </excludes>
        </fileSet>

        <!-- Make binary files executable. -->
        <fileSet>
            <directory>src/main/resources/bin</directory>
            <outputDirectory>bin</outputDirectory>
            <fileMode>755</fileMode>
            <includes>
                <include>launcher</include>
                <include>mule</include>
                <include>setup_local_instance.sh</include>
            </includes>
        </fileSet>
        <fileSet>
            <directory>src/main/resources/bin</directory>
            <outputDirectory>bin</outputDirectory>
            <fileMode>644</fileMode>
            <includes>
                <include>*.groovy</include>
                <include>*.bat</include>
                <include>*.conf</include>
                <include>*.txt</include>
            </includes>
        </fileSet>
        <fileSet>
            <directory>src/main/resources/lib/boot/exec</directory>
            <outputDirectory>lib/boot/exec</outputDirectory>
            <fileMode>755</fileMode>
            <excludes>
                <exclude>*.txt</exclude>
            </excludes>
            <includes>
                <include>*</include>
            </includes>
        </fileSet>
        <fileSet>
            <directory>src/main/resources/lib/boot/exec</directory>
            <outputDirectory>lib/boot/exec</outputDirectory>
            <fileMode>644</fileMode>
            <includes>
                <include>*.txt</include>
            </includes>
        </fileSet>

        <!-- Copy javadocs (the build must be run with -DperformRelease=true) -->
        <fileSet>
            <directory>../../target/site/apidocs</directory>
            <outputDirectory>docs/api</outputDirectory>
            <fileMode>0644</fileMode>
        </fileSet>

        <!-- Copy source bundle (the build must be run with -DperformRelease=true) -->
        <fileSet>
            <directory>target</directory>
            <outputDirectory>src</outputDirectory>
            <includes>
                <include>mule-*-src.zip</include>
            </includes>
        </fileSet>

        <fileSet>
            <directory>${project.build.directory}/plugins</directory>
            <outputDirectory>plugins</outputDirectory>
        </fileSet>
    </fileSets>

    <!--
    ============================
        Libraries
    ============================
    -->

    <!-- TODO: Update to use wildcards once this issue is fixed:
   http://jira.codehaus.org/browse/MASSEMBLY-220 -->
    <dependencySets>

        <!-- Bootstrap -->
        <dependencySet>
            <outputDirectory>lib/boot</outputDirectory>
            <useStrictFiltering>true</useStrictFiltering>
            <includes>
                <include>org.mule.modules:mule-module-reboot</include>
                <include>commons-cli:commons-cli</include>
                <include>tanukisoft:wrapper</include>
                <include>org.slf4j:slf4j-api</include>
                <include>org.apache.logging.log4j:log4j-api</include>
                <include>org.apache.logging.log4j:log4j-core</include>
                <include>org.apache.logging.log4j:log4j-slf4j-impl</include>
                <include>org.apache.logging.log4j:log4j-1.2-api</include>
                <include>org.apache.logging.log4j:log4j-jcl</include>
                <include>org.apache.logging.log4j:log4j-jul</include>
                <include>org.slf4j:jcl-over-slf4j</include>
                <include>com.lmax:disruptor</include>
            </includes>
        </dependencySet>

        <!-- Mule libraries -->
        <dependencySet>
            <outputDirectory>lib/mule</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>
            <useStrictFiltering>true</useStrictFiltering>
            <includes>
                <!-- Mule API -->
                <include>org.mule:mule-api</include>
                <!--Metadata API-->
                <include>org.mule:mule-metadata-model-api</include>
                <include>org.mule:mule-metadata-model-java</include>
                <include>org.mule:mule-metadata-model-persistence</include>
                <!-- extensions API -->
                <include>org.mule.extensions:mule-extensions-api</include>
                <include>org.mule.extensions:mule-extensions-api-persistence</include>
                <include>org.mule.extensions:mule-extensions-api-xml-dsl</include>
                <include>org.mule.extensions:mule-extensions-api-dsql</include>
                <!-- Core -->
                <include>org.mule:mule-core</include>
                <!-- Modules -->
                <include>org.mule.modules:mule-module-artifact</include>
                <include>org.mule.modules:mule-module-launcher</include>
                <include>org.mule.modules:mule-module-deployment</include>
                <include>org.mule.modules:mule-module-deployment-impl</include>
                <include>org.mule.modules:mule-module-deployment-model</include>
                <include>org.mule.modules:mule-module-dsl-api</include>
                <include>org.mule.modules:mule-module-service</include>
                <include>org.mule.modules:mule-module-container</include>
                <include>org.mule.modules:mule-module-builders</include>
                <include>org.mule.modules:mule-module-cxf</include>
                <include>org.mule.modules:mule-module-extensions-support</include>
                <include>org.mule.modules:mule-module-extensions-spring-support</include>
                <include>org.mule.modules:mule-module-http</include>
                <include>org.mule.modules:mule-module-jaas</include>
                <include>org.mule.modules:mule-module-jbossts</include>
                <include>org.mule.modules:mule-module-json</include>
                <include>org.mule.modules:mule-module-management</include>
                <include>org.mule.modules:mule-module-oauth</include>
                <include>org.mule.modules:mule-module-pgp</include>
                <include>org.mule.modules:mule-module-repository</include>
                <include>org.mule.modules:mule-module-scripting</include>
                <include>org.mule.modules:mule-module-scripting-jruby</include>
                <include>org.mule.modules:mule-module-schedulers</include>
                <include>org.mule.modules:mule-module-spring-config</include>
                <include>org.mule.modules:mule-module-spring-security</include>
                <include>org.mule.modules:mule-module-sockets</include>
                <include>org.mule.modules:mule-module-tls</include>
                <include>org.mule.modules:mule-module-tomcat</include>
                <include>org.mule.modules:mule-module-tooling-support</include>
                <include>org.mule.modules:mule-module-xml</include>
                <include>org.mule.transports:mule-transport-sockets</include>

                <!-- Shared libs -->
                <include>org.mule.common:mule-common</include>
                <include>org.mule.mvel:mule-mvel2</include>
            </includes>
            <excludes>
                <exclude>*:zip:*</exclude>
            </excludes>
        </dependencySet>

        <!-- Mule Services -->
        <dependencySet>
            <outputDirectory>services</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>
            <useStrictFiltering>true</useStrictFiltering>
            <includes>
                <include>org.mule.services:mule-service-scheduler</include>
            </includes>
        </dependencySet>
        
        <!-- 3rd-party libraries -->
        <dependencySet>
            <outputDirectory>lib/opt</outputDirectory>
            <useStrictFiltering>true</useStrictFiltering>

            <!-- Since we don't define any "includes" here, this will suck in the whole
    universe of transitive dependencies.  Therefore, we need to explicitly
    _exclude_ all libs which should _not_ go into this directory (usually
    because they are already in a different directory). -->
            <excludes>
                <!--Mule API-->
                <exclude>org.mule:mule-api</exclude>
                <!--Metadata API-->
                <exclude>org.mule:mule-metadata-model-api</exclude>
                <exclude>org.mule:mule-metadata-model-java</exclude>
                <exclude>org.mule:mule-metadata-model-persistence</exclude>
                <!--extensions API-->
                <exclude>org.mule.extensions:mule-extensions-api</exclude>
                <exclude>org.mule.extensions:mule-extensions-api-persistence</exclude>
                <exclude>org.mule.extensions:mule-extensions-api-xml-dsl</exclude>
                <exclude>org.mule.extensions:mule-extensions-api-dsql</exclude>
                <!-- lib/mule -->
                <exclude>org.mule.common:mule-common</exclude>
                <exclude>org.mule.mvel:mule-mvel2</exclude>
                <exclude>org.mule:mule-core</exclude>
                <exclude>org.mule.extensions:mule-extensions-all</exclude>
                <exclude>org.mule.services:mule-services-all</exclude>
                <exclude>org.mule.modules:mule-modules-all</exclude>
                <exclude>org.mule.modules:mule-module-artifact</exclude>
                <exclude>org.mule.modules:mule-module-builders</exclude>
                <exclude>org.mule.modules:mule-module-cxf</exclude>
                <exclude>org.mule.modules:mule-module-extensions-support</exclude>
                <exclude>org.mule.modules:mule-module-extensions-spring-support</exclude>
                <exclude>org.mule.modules:mule-module-http</exclude>
                <exclude>org.mule.modules:mule-module-http-ext</exclude>
                <exclude>org.mule.modules:mule-module-email</exclude>
                <exclude>org.mule.modules:mule-module-wsc</exclude>
                <exclude>org.mule.modules:mule-module-jaas</exclude>
                <exclude>org.mule.modules:mule-module-jbossts</exclude>
                <exclude>org.mule.modules:mule-module-json</exclude>
                <exclude>org.mule.modules:mule-module-container</exclude>
                <exclude>org.mule.modules:mule-module-launcher</exclude>
                <exclude>org.mule.modules:mule-module-deployment</exclude>
                <exclude>org.mule.modules:mule-module-deployment-impl</exclude>
                <exclude>org.mule.modules:mule-module-deployment-model</exclude>
                <exclude>org.mule.modules:mule-module-dsl-api</exclude>
                <exclude>org.mule.modules:mule-module-service</exclude>
                <exclude>org.mule.modules:mule-module-management</exclude>
                <exclude>org.mule.modules:mule-module-oauth</exclude>
                <exclude>org.mule.modules:mule-module-pgp</exclude>
                <exclude>org.mule.modules:mule-module-reboot</exclude>
                <exclude>org.mule.modules:mule-module-repository</exclude>
                <exclude>org.mule.modules:mule-module-scripting</exclude>
                <exclude>org.mule.modules:mule-module-scripting-jruby</exclude>
                <exclude>org.mule.modules:mule-module-schedulers</exclude>
                <exclude>org.mule.modules:mule-module-spring-config</exclude>
                <exclude>org.mule.modules:mule-module-spring-security</exclude>
                <exclude>org.mule.modules:mule-module-sockets</exclude>
                <exclude>org.mule.modules:mule-module-tls</exclude>
                <exclude>org.mule.modules:mule-module-tomcat</exclude>
                <exclude>org.mule.modules:mule-module-tooling-support</exclude>
                <exclude>org.mule.modules:mule-module-xml</exclude>
                <exclude>org.mule.transports:mule-transport-sockets</exclude>

                <!-- lib/plugins (these artifacts are zip type) -->
                <exclude>*:zip:*</exclude>

                <!-- mule-tests-functional dependencies -->
                <exclude>org.apache.ftpserver:ftpserver-core</exclude>
                <exclude>org.apache.ftpserver:ftplet-api</exclude>
                <exclude>org.apache.sshd:sshd-core</exclude>
                <exclude>org.apache.mina:mina-core</exclude>

                <!-- lib/user -->
                <exclude>junit:junit</exclude>
                <exclude>xmlunit:xmlunit</exclude>
                <exclude>org.mule.tests:mule-tests-functional</exclude>
                <exclude>org.mule.tests:mule-tests-runner</exclude>
                <exclude>org.mule.tests:mule-tests-unit</exclude>

                <!-- lib/boot -->
                <exclude>commons-cli:commons-cli</exclude>
                <exclude>tanukisoft:wrapper</exclude>
                <exclude>org.slf4j:slf4j-api</exclude>
                <exclude>org.apache.logging.log4j:log4j-api</exclude>
                <exclude>org.apache.logging.log4j:log4j-core</exclude>
                <exclude>org.apache.logging.log4j:log4j-slf4j-impl</exclude>
                <exclude>org.apache.logging.log4j:log4j-1.2-api</exclude>
                <exclude>org.apache.logging.log4j:log4j-jcl</exclude>
                <exclude>org.apache.logging.log4j:log4j-jul</exclude>
                <exclude>org.slf4j:jcl-over-slf4j</exclude>
                <exclude>commons-logging:commons-logging</exclude>
                <exclude>com.lmax:disruptor</exclude>

                <!-- lib/endorsed -->
                <exclude>xml-apis:xml-apis</exclude>
                <exclude>xerces:xercesImpl</exclude>
                <exclude>xalan:serializer</exclude>
                <exclude>xalan:xalan</exclude>

                <!-- Distributed separately in profiler pack -->
                <exclude>com.yourkit:yjp-controller-api-redist</exclude>

            </excludes>
        </dependencySet>

        <!-- Mule testing framework -->
        <dependencySet>
            <outputDirectory>lib/user</outputDirectory>
            <useStrictFiltering>true</useStrictFiltering>
            <scope>test</scope>
            <includes>
                <include>junit:junit</include>
                <include>xmlunit:xmlunit</include>
                <include>org.mule.tests:mule-tests-functional</include>
                <include>org.mule.tests:mule-tests-runner</include>
                <include>org.mule.tests:mule-tests-unit</include>
            </includes>
        </dependencySet>

        <!--
            These XML dependencies end up in the "endorsed" directory
            and must be excluded from other dependencySets, otherwise
            the inclusions here will cause other artifacts to pull them
            in as well. If that happens, the MAVP blacklisting mechanism
            should kick in, since only jars in the endorsed directory are
            explicitly blacklisted by full path.
        -->
        <dependencySet>
            <outputDirectory>lib/endorsed</outputDirectory>
            <useStrictFiltering>true</useStrictFiltering>
            <includes>
                <include>xml-apis:xml-apis</include>
                <include>xerces:xercesImpl</include>
                <include>xalan:serializer</include>
                <include>xalan:xalan</include>
            </includes>
        </dependencySet>
    </dependencySets>
</assembly>
