<archetype>
    <!-- allows us to update an existing project if the archetype is run from the project directory -->
    <allowPartial>true</allowPartial>
    <id>maven-archetype-mule-transport</id>
    <variables>
        <variable>
            <name>newProject</name>
            <description>Are you creating a new transport? [y] or [n]
(rather than updating an existing one)</description>
            <defvalue>y</defvalue>
            <variables>
                <variable>
                    <name>description</name>
                    <description>Provide a description of what the transport does:</description>
                    <defvalue></defvalue>
                </variable>
                <variable>
                    <name>muleVersion</name>
                    <description>Which version of Mule is this transport targeted at?</description>
                    <defvalue>${muleVersion}</defvalue>
                </variable>
                <variable>
                    <name>forgeRepo</name>
                    <description>Will this example be hosted in the MuleForge Maven repository? [y] or [n]</description>
                    <defvalue>y</defvalue>
                </variable>
                <variable>
                    <name>hasReceiver</name>
                    <description>Can the transport receive inbound requests? [y] or [n]</description>
                    <defvalue>n</defvalue>

                    <variables>
                        <variable>
                            <name>isPollingReceiver</name>
                            <description>Does the Message Receiver need to poll the underlying resource? [y] or [n]
                            </description>
                            <defvalue>n</defvalue>
                        </variable>

                        <variable>
                            <name>inboundTransformer</name>
                            <!--
                                Indentation matters here! Do not indent the second line as this will cause
                                odd indentation when actually running the archetype.
                            -->
                            <description>If this transport will have a default inbound transformer, enter the name of the
transformer? (i.e. JmsMessageToObject)
                            </description>
                            <defvalue>n</defvalue>
                        </variable>
                    </variables>
                </variable>

                <variable>
                    <name>hasDispatcher</name>
                    <description>Can the transport dispatch outbound requests? [y] or [n]</description>
                    <defvalue>n</defvalue>

                    <variables>
                        <variable>
                            <name>outboundTransformer</name>
                            <!--
                                Indentation matters here! Do not indent the second line as this will cause
                                odd indentation when actually running the archetype.
                            -->
                            <description>If this transport will have a default outbound transformer, enter the name of the
transformer? (i.e. ObjectToJmsMessage)
                            </description>
                            <defvalue>n</defvalue>
                        </variable>
                    </variables>
                </variable>

                <variable>
                    <name>hasCustomMessageFactory</name>
                    <description>Does the transport need a custom MuleMessageFactory? [y] or [n]
(This is usually only required if the underlying transport has an API that has a
message object i.e. JMSMessage or HttpServletRequest)</description>
                    <defvalue>n</defvalue>
                </variable>

                <variable>
                    <name>endpointBuilder</name>
                    <!--
                        Indentation matters here! Do not indent the second line as this will cause
                        odd indentation when actually running the archetype.
                    -->
                    <description>What type of endpoints does this transport use?
                    - [r]esource endpoints (i.e. jms://my.queue)
                    - [u]rl endpoints (i.e. http://localhost:1234/context/foo?param=1)
                    - [s]ocket endpoints (i.e. tcp://localhost:1234)
                    - [c]ustom - parse your own
                    </description>
                    <defvalue>r</defvalue>
                </variable>
                <variable>
                    <name>transports</name>
                    <description>
Which Mule transports do you want to include in this project? If you intend
extending a transport you should add it here:

(options: ajax, ejb, file, ftp, http, https, imap, imaps, jbpm, jdbc,
          jetty, jetty-ssl, jms, jnp, multicast, pop3, pop3s, quartz, rmi,
          servlet, smtp, smtps, ssl, tls, stdio, tcp, udp, vm, xmpp):

                    </description>
                    <defvalue>vm</defvalue>
                </variable>
                <variable>
                    <name>modules</name>
                    <description>
Which Mule modules do you want to include in this project? The client is added
for testing:

(options: annotations, atom, boot, builders, client, cxf, guice,
          jaas, jbossts, jersey, json, management, pgp, rss, scripting,
          spring-extras, spring-security, sxc, xml):

                    </description>
                    <defvalue>client</defvalue>
                </variable>
            </variables>
        </variable>
        <variable>
            <name>hasRequestor</name>
            <description>Can the transport request individual messages from the underlying resource?
[y] or [n]</description>
            <defvalue>n</defvalue>
        </variable>

        <variable>
            <name>hasTransactions</name>
            <description>Does this transport support transactions? [y] or [n]</description>
            <defvalue>n</defvalue>

            <variables>
                <variable>
                    <name>hasCustomTransactions</name>
                    <!--
                        Indentation matters here! Do not indent the second line as this will cause
                        odd indentation when actually running the archetype.
                    -->
                    <description>Does this transport use a non-JTA Transaction manager? [y] or [n]
(i.e. needs to wrap proprietary transaction management)
                    </description>
                    <defvalue>n</defvalue>
                </variable>
            </variables>
        </variable>
        <variable>
            <name>hasCustomSchema</name>
            <description>Will this transport have a custom schema for configuring the transport in Xml?
[y] or [n]</description>
            <defvalue>y</defvalue>
        </variable>
        <variable>
            <name>hasBootstrap</name>
            <description>Will this module make objects available in the Registry as soon as it's loaded?
[y] or [n]</description>
            <defvalue>n</defvalue>
        </variable>
    </variables>

    <templates>
        <!-- the template README should be run first since it sets up other variables and is always included -->
        <template>
            <file>README.vm</file>
            <output>MULE-README.txt</output>
            <dependsOnVar>newProject=y</dependsOnVar>
        </template>
        <template>
            <file>README.vm</file>
            <output>MULE-UPDATE-README.txt</output>
            <dependsOnVar>newProject=n</dependsOnVar>
        </template>
        <template>
            <file>pom.vm</file>
            <output>pom.xml</output>
            <dependsOnVar>newProject=y</dependsOnVar>
        </template>
        <template>
            <file>assembly.xml.vm</file>
            <output>assembly.xml</output>
            <dependsOnVar>newProject=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/resources/META-INF/services/org/mule/transport/csd.vm</file>
            <output>src/main/resources/META-INF/services/org/mule/transport/${ModuleNameLower}.properties</output>
            <dependsOnVar>newProject=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/java/org/mule/transport/Messages.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/i18n/${ModuleName}Messages.java
            </output>
            <dependsOnVar>newProject=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/resources/META-INF/services/org/mule/i18n/messages.vm</file>
            <output>src/main/resources/META-INF/services/org/mule/i18n/${ModuleNameLower}-messages.properties
            </output>
            <dependsOnVar>newProject=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/resources/META-INF/services/org/mule/config/registry-bootstrap.properties.vm</file>
            <output>src/main/resources/META-INF/services/org/mule/config/registry-bootstrap.properties</output>
            <dependsOnVar>hasBootstrap=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/resources/META-INF/spring.handlers.vm</file>
            <output>src/main/resources/META-INF/spring.handlers</output>
            <dependsOnVar>hasCustomSchema=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/resources/META-INF/spring.schemas.vm</file>
            <output>src/main/resources/META-INF/spring.schemas</output>
            <dependsOnVar>hasCustomSchema=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/resources/META-INF/schema.vm</file>
            <output>src/main/resources/META-INF/mule-${ModuleNameLower}.xsd</output>
            <dependsOnVar>hasCustomSchema=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/java/org/mule/transport/Connector.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}Connector.java
            </output>
            <dependsOnVar>newProject=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/java/org/mule/transport/config/NamespaceHandler.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/config/${ModuleName}NamespaceHandler.java
            </output>
            <dependsOnVar>hasCustomSchema=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/java/org/mule/transport/MuleMessageFactory.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}MuleMessageFactory.java
            </output>
            <dependsOnVar>hasCustomMessageFactory=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/java/org/mule/transport/MessageDispatcher.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}MessageDispatcher.java
            </output>
            <dependsOnVar>hasDispatcher=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/java/org/mule/transport/MessageDispatcherFactory.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}MessageDispatcherFactory.java
            </output>
            <dependsOnVar>hasDispatcher=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/java/org/mule/transport/MessageReceiver.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}MessageReceiver.java
            </output>
            <dependsOnVar>hasReceiver=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/java/org/mule/transport/MessageRequester.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}MessageRequester.java
            </output>
            <dependsOnVar>hasRequestor=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/java/org/mule/transport/MessageRequesterFactory.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}MessageRequesterFactory.java
            </output>
            <dependsOnVar>hasRequestor=y</dependsOnVar>
        </template>
        <template>
            <file>src/main/java/org/mule/transport/TransactedMessageReceiver.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}TransactedMessageReceiver.java
            </output>
            <dependsOnVar>hasTransactions=y</dependsOnVar>
        </template>

        <template>
            <file>src/main/java/org/mule/transport/TransactionFactory.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}TransactionFactory.java
            </output>
            <dependsOnVar>hasCustomTransactions=y</dependsOnVar>
        </template>

        <template>
            <file>src/main/java/org/mule/transport/Transaction.vm</file>
            <output>
                src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}Transaction.java
            </output>
            <dependsOnVar>hasCustomTransactions=y</dependsOnVar>
        </template>

        <template>
            <file>src/main/java/org/mule/transport/InboundTransformer.vm</file>
            <output>src/main/java/org/mule/transport/${ModuleNameLower}/transformers/${inboundTransformer}.java
            </output>
            <dependsOnVar>inboundTransformer!=n</dependsOnVar>
        </template>

        <template>
            <file>src/main/java/org/mule/transport/OutboundTransformer.vm</file>
            <output>src/main/java/org/mule/transport/${ModuleNameLower}/transformers/${outboundTransformer}.java
            </output>
            <dependsOnVar>outboundTransformer!=n</dependsOnVar>
        </template>

        <template>
            <file>src/main/java/org/mule/transport/EndpointURIBuilder.vm</file>
            <output>src/main/java/org/mule/transport/${ModuleNameLower}/${ModuleName}EndpointURIBuilder.java</output>
            <dependsOnVar>endpointBuilder=c</dependsOnVar>
        </template>

        <!-- Test Cases -->
        <template>
            <file>src/test/java/org/mule/transport/ConnectorFactoryTestCase.vm</file>
            <output>
                src/test/java/org/mule/transport/${ModuleNameLower}/${ModuleName}ConnectorFactoryTestCase.java
            </output>
            <dependsOnVar>newProject=y</dependsOnVar>
        </template>
        <template>
            <file>src/test/java/org/mule/transport/ConnectorTestCase.vm</file>
            <output>
                src/test/java/org/mule/transport/${ModuleNameLower}/${ModuleName}ConnectorTestCase.java
            </output>
            <dependsOnVar>newProject=y</dependsOnVar>
        </template>
        <template>
            <file>src/test/java/org/mule/transport/EndpointTestCase.vm</file>
            <output>
                src/test/java/org/mule/transport/${ModuleNameLower}/${ModuleName}EndpointTestCase.java
            </output>
            <dependsOnVar>newProject=y</dependsOnVar>
        </template>
        <template>
            <file>src/test/java/org/mule/transport/MuleMessageFactoryTestCase.vm</file>
            <output>
                src/test/java/org/mule/transport/${ModuleNameLower}/${ModuleName}MuleMessageFactoryTestCase.java
            </output>
            <dependsOnVar>hasCustomMessageFactory=y</dependsOnVar>
        </template>
        <template>
            <file>src/test/java/org/mule/transport/config/NamespaceHandlerTestCase.vm</file>
            <output>
                src/test/java/org/mule/transport/${ModuleNameLower}/config/${ModuleName}NamespaceHandlerTestCase.java
            </output>
            <dependsOnVar>hasCustomSchema=y</dependsOnVar>
        </template>
        <template>
            <file>src/test/resources/namespace-config.xml.vm</file>
            <output>
                src/test/resources/${ModuleNameLower}-namespace-config.xml
            </output>
            <dependsOnVar>hasCustomSchema=y</dependsOnVar>
        </template>
        <template>
            <file>src/test/java/org/mule/transport/MessageReceiverTestCase.vm</file>
            <output>
                src/test/java/org/mule/transport/${ModuleNameLower}/${ModuleName}MessageReceiverTestCase.java
            </output>
            <dependsOnVar>hasReceiver=y</dependsOnVar>
        </template>
        <template>
            <file>src/test/java/org/mule/transport/TransformersTestCase.vm</file>
            <output>
                src/test/java/org/mule/transport/${ModuleNameLower}/transformers/${ModuleName}TransformersTestCase.java
            </output>
            <dependsOnVar>inboundTransformer!=n</dependsOnVar>
        </template>
        <template>
            <file>src/test/java/org/mule/transport/TransformersTestCase.vm</file>
            <output>
                src/test/java/org/mule/transport/${ModuleNameLower}/transformers/${ModuleName}TransformersTestCase.java
            </output>
            <dependsOnVar>outboundTransformer!=n</dependsOnVar>
        </template>
    </templates>
</archetype>

