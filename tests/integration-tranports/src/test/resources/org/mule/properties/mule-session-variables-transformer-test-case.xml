<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:transports="http://www.mulesoft.org/schema/mule/transports"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/transports http://www.mulesoft.org/schema/mule/transports/current/mule-transports.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <transports:mutator-transformer name="addSessionVariable">
        <transports:set-session-variable variableName="sesVarKey" value="sesVarValue" />
    </transports:mutator-transformer>

    <transports:mutator-transformer name="addSessionVariableName">
        <transports:set-session-variable variableName="sesVarKeyName" value="sesVarKey" />
    </transports:mutator-transformer>

    <transports:mutator-transformer name="addSessionVariable2">
        <transports:set-session-variable variableName="invVarKey2" value="invVarValue2" />
    </transports:mutator-transformer>

    <transports:mutator-transformer name="addAnotherSessionVariable">
        <transports:set-session-variable variableName="anotherSessionVarKey" value="anotherSessionVarValue" />
    </transports:mutator-transformer>

    <transports:mutator-transformer name="addInvocationVariable">
        <set-variable variableName="invVarKey" value="invVarValue" />
    </transports:mutator-transformer>

    <transports:mutator-transformer name="addInvocationVariable2">
        <set-variable variableName="invVarKey2" value="invVarValue2" />
    </transports:mutator-transformer>

    <transports:mutator-transformer name="setSessVarGlobal">
        <transports:set-session-variable variableName="#[sessionVars.sesVarKey]" value="#[flowVars.invVarKey]"/>
    </transports:mutator-transformer>

    <transports:mutator-transformer name="remSessVarGlobal">
        <transports:remove-session-variable variableName="sesVarKey" />
    </transports:mutator-transformer>

    <flow name="addSessionVariableFlow" processingStrategy="synchronous">
        <transports:set-session-variable variableName="prop" value="#['some value']"/>
        <test:assert expression="#[sessionVars.prop == 'some value']"/>
    </flow>

    <flow name="addSessionVariableUsingExpressionKeyFlow" processingStrategy="synchronous">
        <transformer ref="addSessionVariable"/>
        <transformer ref="addInvocationVariable"/>
        <transformer ref="setSessVarGlobal"/>
        <test:assert expression="#[sessionVars.sesVarValue == 'invVarValue']"/>
    </flow>

    <flow name="addVariableWithParsedStringKeyFlow" processingStrategy="synchronous">
        <transformer ref="addSessionVariable"/>
        <transformer ref="addInvocationVariable"/>
        <transports:set-session-variable variableName="-#[sessionVars.sesVarKey]-" value="-#[flowVars.invVarKey]-"/>
        <test:assert expression="#[sessionVars['-sesVarValue-'] == '-invVarValue-']"/>
    </flow>

    <flow name="removeSessionVariableFlow" processingStrategy="synchronous">
        <transformer ref="addSessionVariable"/>
        <transformer ref="remSessVarGlobal"/>
        <test:assert expression="#[sessionVars.sesVarKey == null]"/>
    </flow>

    <flow name="removeSessionVariableUsingExpressionFlow" processingStrategy="synchronous">
        <transformer ref="addSessionVariable"/>
        <transformer ref="addSessionVariableName"/>
        <transports:remove-session-variable variableName="#[sessionVars.sesVarKeyName]"/>
        <test:assert expression="#[sessionVars.sesVarKey == null]"/>
    </flow>
    
    <flow name="removeSessionVariableUsingParsedStringFlow" processingStrategy="synchronous">
        <transformer ref="addSessionVariable"/>
        <transformer ref="addSessionVariableName"/>
        <transports:remove-session-variable variableName="ses#['Var']key"/>
        <test:assert expression="#[sessionVars.sesVarKey == null]"/>
    </flow>

    <flow name="removeSessionVariableUsingRegexFlow" processingStrategy="synchronous">
        <transformer ref="addSessionVariable"/>
        <transformer ref="addSessionVariable2"/>
        <transformer ref="addAnotherSessionVariable"/>
        <transports:remove-session-variable variableName="ses*"/>
        <test:assert expression="#[sessionVars.sesPropKey == null]"/>
        <test:assert expression="#[sessionVars.sesPropKey2 == null]"/>
        <test:assert expression="#[sessionVars.anotherSessionVarKey != null]"/>
    </flow>
    
    <flow name="removeAllSessionVariablesFlow" processingStrategy="synchronous">
        <transformer ref="addSessionVariable"/>
        <transformer ref="addSessionVariable2"/>
        <transformer ref="addAnotherSessionVariable"/>
        <transports:remove-session-variable variableName="*" />
        <test:assert expression="#[sessionVars.invPropKey == null]"/>
        <test:assert expression="#[sessionVars.invPropKey2 == null]"/>
        <test:assert expression="#[sessionVars.anotherSessionVarKey == null]"/>
    </flow>

</mule>
