<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <spring:bean name="counter" class="java.util.concurrent.atomic.AtomicInteger" />

    <flow name="poll-until-successfulFlow" initialState="stopped">
        <poll>
            <fixed-frequency-scheduler frequency="30000000" startDelay="1000"/>
            <set-payload value="dummy"/>
        </poll>
        <until-successful maxRetries="5" millisBetweenRetries="100" synchronous="true">
            <processor-chain>
                <test:invocation-counter name="untilSuccessful"/>
                <test:component throwException="true"/>
            </processor-chain>
        </until-successful>
        <rollback-exception-strategy>
            <test:invocation-counter name="exceptionStrategy"/>
        </rollback-exception-strategy>
    </flow>


</mule>