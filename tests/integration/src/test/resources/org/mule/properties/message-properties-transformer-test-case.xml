<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
    xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <message-properties-transformer name="addOutboundProperty">
        <add-message-property key="outPropKey" value="outPropValue"/>
    </message-properties-transformer>

    <message-properties-transformer name="addOutboundPropertyName">
        <add-message-property key="outPropKeyName" value="outPropKey"/>
    </message-properties-transformer>

    <message-properties-transformer name="addOutboundProperty2">
        <add-message-property key="outPropKey2" value="outPropValue2"/>
    </message-properties-transformer>

    <message-properties-transformer scope="invocation" name="addInvocationProperty">
        <add-message-property key="invPropKey" value="invPropValue"/>
    </message-properties-transformer>

    <set-property name="setPropGlobal" propertyName="prop" value="#['some value']"/>

    <remove-property name="remPropGlobal" propertyName="out*" />

    <copy-properties name="copyPropGlobal" propertyName="#['inbPropKey']"/>

    <scripting:transformer name="addInboundProperty">
        <scripting:script engine="groovy">
            message.setProperty('inbPropKey','inbPropValue',org.mule.PropertyScope.INBOUND);
            message
        </scripting:script>
    </scripting:transformer>

    <scripting:transformer name="addInboundProperty2">
        <scripting:script engine="groovy">
            message.setProperty('inbPropKey2','inbPropValue2',org.mule.PropertyScope.INBOUND);
            message
        </scripting:script>
    </scripting:transformer>

    <flow name="addProperty" processingStrategy="synchronous">
        <transformer ref="setPropGlobal"/>
        <test:assert expression="#[message.outboundProperties['prop'].equals('some value')]"/>
    </flow>
    
    <flow name="addPropertyUsingExpressionKey" processingStrategy="synchronous">
        <transformer ref="addOutboundProperty"/>
        <transformer ref="addInvocationProperty"/>
        <set-property propertyName="#[message.outboundProperties.outPropKey]" value="#[flowVars.invPropKey]"/>
        <test:assert expression="#[message.outboundProperties['outPropValue'].equals('invPropValue')]"/>
    </flow>

    <flow name="removeProperty" processingStrategy="synchronous">
        <transformer ref="addOutboundProperty"/>
        <remove-property propertyName="outPropKey" />
        <test:assert expression="#[message.outboundProperties['outPropKey'] == null]"/>
    </flow>

    <flow name="removePropertyUsingExpression" processingStrategy="synchronous">
        <transformer ref="addOutboundProperty"/>
        <transformer ref="addOutboundPropertyName"/>
        <remove-property propertyName="#[message.outboundProperties.outPropKeyName]" />
        <test:assert expression="#[message.outboundProperties['outPropKey'] == null]"/>
    </flow>
    
    <flow name="removePropertyUsingRegex" processingStrategy="synchronous">
        <transformer ref="addOutboundProperty"/>
        <transformer ref="addOutboundProperty2"/>
        <transformer ref="remPropGlobal"/>
        <test:assert expression="#[message.outboundProperties['outPropKey'] == null]"/>
        <test:assert expression="#[message.outboundProperties['outPropKey2'] == null]"/>
    </flow>
    
    <flow name="removeAllProperties" processingStrategy="synchronous">
        <transformer ref="addOutboundProperty"/>
        <transformer ref="addOutboundProperty2"/>
        <remove-property propertyName="*" />
        <test:assert expression="#[message.outboundProperties['outPropKey'] == null]"/>
        <test:assert expression="#[message.outboundProperties['outPropKey2'] == null]"/>
    </flow>

    <flow name="copyProperties">
        <transformer ref="addInboundProperty"/>
        <transformer ref="addInboundProperty2"/>
        <copy-properties propertyName="inbPropKey"/>
        <test:assert expression="#[message.outboundProperties['inbPropKey'].equals('inbPropValue')]"/>
        <test:assert expression="#[message.outboundProperties['inbPropKey2'] == null]"/>
    </flow>

    <flow name="copyPropertiesUsingExpression">
        <transformer ref="addInboundProperty"/>
        <transformer ref="addInboundProperty2"/>
        <transformer ref="copyPropGlobal"/>
        <test:assert expression="#[message.outboundProperties['inbPropKey'].equals('inbPropValue')]"/>
    </flow>

    <flow name="copyAllProperties">
        <transformer ref="addInboundProperty"/>
        <transformer ref="addInboundProperty2"/>
        <copy-properties propertyName="*"/>
        <test:assert expression="#[message.outboundProperties['inbPropKey'].equals('inbPropValue')]"/>
        <test:assert expression="#[message.outboundProperties['inbPropKey2'].equals('inbPropValue2')]"/>
    </flow>

</mule>
