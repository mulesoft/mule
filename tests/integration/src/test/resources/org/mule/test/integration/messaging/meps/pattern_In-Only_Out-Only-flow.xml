<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:mule="http://www.mulesoft.org/schema/mule/core"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <!--// START SNIPPET: full-config -->
    <description>
        Receives a message from another party and the result of the service invocation is returned. If the
        service returns null a message with a NullPayload payload is returned.

        MEP TODO: If a message does not originate from the service an exception should be thrown.
    </description>

    <flow name="In-Only_Out-Only-Service">
        <script:component>
            <script:script engine="groovy">
                if (message.getInboundProperty("foo")!=null)
                    return "foo header received"
                else
                    return "foo header not received"
            </script:script>
        </script:component>
        
        <async>
            <mule:wildcard-filter pattern="* header received"/>            
            <test:queue name="received"/>
        </async>
        <async>
            <mule:wildcard-filter pattern="* header not received"/>            
            <test:queue name="notReceived"/>
        </async>
    </flow>
    
    <!--// END SNIPPET: full-config -->
</mule>
