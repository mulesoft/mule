<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:httpn="http://www.mulesoft.org/schema/mule/httpn"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <httpn:listener-config name="listenerConfig">
        <httpn:listener-connection host="localhost" port="${port}"/>
    </httpn:listener-config>
    <httpn:request-config name="requestConfig">
        <httpn:request-connection host="localhost" port="${port}"/>
    </httpn:request-config>

    <spring:bean name="ProcessorPathAssertingProcessor" class="org.mule.test.construct.FlowRefTestCase$ProcessorPathAssertingProcessor" scope="prototype" />
    <spring:bean name="NonBlockingFlow1SensingProcessor" class="org.mule.tck.SensingNullRequestResponseMessageProcessor" scope="singleton" />
    <spring:bean name="NonBlockingFlow2SensingProcessor" class="org.mule.tck.SensingNullRequestResponseMessageProcessor" scope="singleton" />
    <spring:bean name="NonBlockingToQueuedAsyncFlow1SensingProcessor" class="org.mule.tck.SensingNullRequestResponseMessageProcessor" scope="singleton" />
    <spring:bean name="NonBlockingToQueuedAsyncFlow2SensingProcessor" class="org.mule.tck.SensingNullRequestResponseMessageProcessor" scope="singleton" />
    <spring:bean name="NonBlockingToAsyncFlow1SensingProcessor" class="org.mule.tck.SensingNullRequestResponseMessageProcessor" scope="singleton" />
    <spring:bean name="NonBlockingToAsyncFlow2SensingProcessor" class="org.mule.tck.SensingNullRequestResponseMessageProcessor" scope="singleton" />
    <spring:bean name="NonBlockingToSyncFlow1SensingProcessor" class="org.mule.tck.SensingNullRequestResponseMessageProcessor" scope="singleton" />
    <spring:bean name="NonBlockingToSyncFlow2SensingProcessor" class="org.mule.tck.SensingNullRequestResponseMessageProcessor" scope="singleton" />

    <flow name="flow1">
        <flow-ref name="sub-flow" />
        <flow-ref name="sub-flow" />
    </flow>

    <sub-flow name="sub-flow">
        <append-string-transformer message="1" />
        <append-string-transformer message="2" />
        <flow-ref name="composite1" />

        <append-string-transformer message="a" />
        <append-string-transformer message="b" />
        <append-string-transformer message="c" />
        <append-string-transformer message="3" />

    </sub-flow>

    <sub-flow name="composite1">

        <append-string-transformer message="x" />
        <append-string-transformer message="y" />
        <append-string-transformer message="z" />
    </sub-flow>

    <flow name="flow2">
        <flow-ref name="sub-flow-#[letter]" />
    </flow>

    <sub-flow name="sub-flow-A">
        <append-string-transformer message="A" />
    </sub-flow>

    <sub-flow name="sub-flow-B">
        <append-string-transformer message="B" />
    </sub-flow>

    <sub-flow name="sub-flow-C">
        <choice>
            <when expression="#[true]">
                <append-string-transformer message="A" />
            </when>
            <otherwise>
                <append-string-transformer message="B" />
            </otherwise>
        </choice>
    </sub-flow>

    <sub-flow name="sub-flow-SG">
        <scatter-gather>
            <append-string-transformer message="A" />
            <append-string-transformer message="B" />
        </scatter-gather>
    </sub-flow>

    <flow name="flow3">
        <flow-ref name="sub-flow-#[letter]" />
        <flow-ref name="sub-flow-#[letter]" />
    </flow>

    <sub-flow name="sub-flow-J">
        <processor ref="ProcessorPathAssertingProcessor" />
    </sub-flow>

    <flow name="NonBlockingFlow1" processingStrategy="non-blocking">
        <httpn:listener config-ref="listenerConfig" path="nonBlockingFlowRefBasic"/>
        <processor ref="NonBlockingFlow1SensingProcessor" />
        <flow-ref name="NonBlockingFlow2"/>
    </flow>
    <flow name="NonBlockingFlow2">
        <processor ref="NonBlockingFlow2SensingProcessor" />
        <httpn:request config-ref="requestConfig" path="echo" method="POST"/>
    </flow>

    <flow name="NonBlockingToAsyncFlow1" processingStrategy="non-blocking">
        <httpn:listener config-ref="listenerConfig" path="nonBlockingFlowRefToAsyncFlow"/>
        <processor ref="NonBlockingToAsyncFlow1SensingProcessor" />
        <flow-ref name="NonBlockingToAsyncFlow2"/>
    </flow>
    <flow name="NonBlockingToAsyncFlow2" processingStrategy="asynchronous">
        <processor ref="NonBlockingToAsyncFlow2SensingProcessor"/>
        <httpn:request config-ref="requestConfig" path="echo" method="POST"/>
    </flow>

    <flow name="NonBlockingToSyncFlow1" processingStrategy="non-blocking">
        <httpn:listener config-ref="listenerConfig" path="nonBlockingFlowRefToSyncFlow"/>
        <processor ref="NonBlockingToSyncFlow1SensingProcessor" />
        <flow-ref name="NonBlockingToSyncFlow2"/>
    </flow>
    <flow name="NonBlockingToSyncFlow2" processingStrategy="synchronous">
        <processor ref="NonBlockingToSyncFlow2SensingProcessor"/>
        <httpn:request config-ref="requestConfig" path="echo" method="POST"/>
    </flow>

    <flow name="NonBlockingExceptionFlow1" processingStrategy="non-blocking">
        <httpn:listener config-ref="listenerConfig" path="nonBlockingFlowRefErrorHandling"/>
        <flow-ref name="NonBlockingExceptionFlow2"/>
    </flow>
    <flow name="NonBlockingExceptionFlow2">
        <test:component throwException="true"/>
        <error-handler>
            <on-error-continue>
                <set-payload value="ERROR"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="httpEcho">
        <httpn:listener config-ref="listenerConfig" path="echo"/>
        <echo-component/>
    </flow>

</mule>
