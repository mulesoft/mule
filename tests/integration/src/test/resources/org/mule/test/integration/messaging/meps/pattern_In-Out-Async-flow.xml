<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd


       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <!--// START SNIPPET: full-config -->
    <description>
        A request is made from a party but the result of the request is returned on another channel as specified either
        as a MULE_REPLY_TO header or a reply to destination understood by the transport being used i.e. JMSReplyTo.
    </description>

    <jms:activemq-connector name="jmsConnector"/>

    <jms:endpoint queue="test.inbound" name="inboundEndpoint" exchange-pattern="request-response"/>

    <flow name="In-Out-Async-Service">
        <inbound-endpoint ref="inboundEndpoint"/>
        <script:component>
            <script:script engine="groovy">
                message.setProperty("foo", "bar", org.mule.api.transport.PropertyScope.OUTBOUND);
                return "got it!"
            </script:script>
        </script:component>
        <!-- Mule will now read the ReplyTo header on the message and send the response there. -->
    </flow>
    <!--// END SNIPPET: full-config -->
</mule>
