<?xml version="1.0" encoding="utf-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <vm:endpoint path="foo" exchange-pattern="request-response" name="foo"/>


    <flow name="echo">
        <inbound-endpoint ref="foo"/>
        <static-component>
            <return-data>foo</return-data>
        </static-component>
    </flow>


    <flow name="pollWithoutWatermark">
        <poll frequency="1000">
            <processor-chain>
                <set-payload value="pollWithoutWatermark"/>
                <outbound-endpoint ref="foo"/>
            </processor-chain>
        </poll>
        <component class="org.mule.test.integration.watermark.WatermarkPollingTestCase$FooComponent"/>
    </flow>

    <flow name="nameNotDefinedWatermarkObjectStoreFlow" processingStrategy="synchronous">
        <poll frequency="1000">
            <watermark variable="test1" default-expression="#[string:noKey]"/>
            <outbound-endpoint ref="foo"/>
        </poll>
        <logger message="Executed With watermark"/>
    </flow>

    <flow name="changeWatermarkWihtNotDefinedWatermarkObjectStoreFlow" processingStrategy="synchronous">
        <poll frequency="1000">
            <watermark variable="test2" default-expression="#[string:noKey]"/>
            <outbound-endpoint ref="foo"/>
        </poll>
        <set-variable variableName="test2" value="keyPresent"/>
        <logger level="ERROR" message="Executed With watermark #[test2]"/>
    </flow>


    <flow name="usingWatermarkFlow" processingStrategy="synchronous">
        <poll frequency="1000">
            <watermark variable="test3" default-expression="#[string:noKey]"/>
            <outbound-endpoint ref="foo"/>
        </poll>
        <set-payload value="#[test3]"/>
        <set-variable variableName="test3" value="keyPresent"/>
        <component class="org.mule.test.integration.watermark.WatermarkPollingTestCase$FooComponent"/>
    </flow>

    <flow name="watermarkWithKeyAsAnExpression" processingStrategy="synchronous">
        <poll frequency="1000">
            <watermark variable="#['test4']" default-expression="#[string:noKey]"/>
            <outbound-endpoint ref="foo"/>
        </poll>
        <set-variable variableName="test4" value="keyPresent"/>
    </flow>


    <flow name="watermarkWithUpdateExpression" processingStrategy="synchronous">
        <poll frequency="1000">
            <watermark variable="test5" default-expression="#[string:noKey]" update-expression="#[payload]"/>
            <outbound-endpoint ref="foo"/>
        </poll>
        <set-payload value="#[string:valueUpdated]"/>
        <set-variable variableName="test5" value="keyPresent"/>
        <component class="org.mule.test.integration.watermark.WatermarkPollingTestCase$FooComponent"/>
    </flow>


    <flow name="watermarkWithAnnotations" processingStrategy="synchronous">
        <poll frequency="1000">
            <watermark variable="test6" default-expression="#[string:noKey]" doc:name="watermark"/>
            <outbound-endpoint ref="foo"/>
        </poll>
        <set-payload value="#[string:valueUpdated]"/>
    </flow>

    <flow name="watermarkWithAsyncProcessing">
        <poll frequency="1000">
            <watermark variable="test6" default-expression="#[string:noKey]"/>
            <outbound-endpoint ref="foo"/>
        </poll>
        <set-payload value="#[string:valueUpdated]"/>
        <set-variable variableName="test6" value="keyPresent"/>
        <component class="org.mule.test.integration.watermark.WatermarkPollingTestCase$FooComponent"/>
    </flow>

    <flow name="failingFlowWithWatermark" processingStrategy="synchronous">
        <poll frequency="1000">
            <watermark variable="test6" default-expression="#[string:noKey]" update-expression="#[payload]"/>
            <outbound-endpoint ref="foo"/>
        </poll>
        <set-payload value="#[string:valueUpdated]"/>
        <set-payload value="#[sing:valueU]"/>
        <set-variable variableName="test6" value="keyPresent"/>
        <component class="org.mule.test.integration.watermark.WatermarkPollingTestCase$FooComponent"/>
    </flow>

    <flow name="failingFlowCachedExceptionWatermark" processingStrategy="synchronous">
        <poll frequency="1000">
            <watermark variable="test7" default-expression="#[string:noKey]"/>
            <outbound-endpoint ref="foo"/>
        </poll>
        <set-payload value="#[sing:valueU]"/>
        <component class="org.mule.test.integration.watermark.WatermarkPollingTestCase$FooComponent"/>
        <catch-exception-strategy>
            <logger level="ERROR" message="FAILED"/>
            <set-variable variableName="test7" value="catchedException"/>
            <logger level="ERROR" message="#[test7]"/>
        </catch-exception-strategy>

    </flow>

    <spring:bean name="pollStopper" class="org.mule.test.integration.watermark.WatermarkPollingTestCase$PollStopper"/>


</mule>