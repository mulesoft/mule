<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <custom-processor name="ProcessorB" class="org.mule.tck.testmodels.mule.TestMessageProcessor">
        <spring:property name="label" value="B"/>
    </custom-processor>
    <custom-processor name="ProcessorG" class="org.mule.tck.testmodels.mule.TestMessageProcessor">
        <spring:property name="label" value="G"/>
    </custom-processor>
    <append-string-transformer name="TransformerB" message=":B"/>
    <append-string-transformer name="TransformerD" message=":D"/>
    <append-string-transformer name="TransformerF" message=":F"/>
    <append-string-transformer name="TransformerH" message=":H"/>

    <flow name="synchronousOutbound">
        <vm:inbound-endpoint path="in1" exchange-pattern="request-response">
            <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                <spring:property name="label" value="A"/>
            </custom-processor>
            <message-filter>
                <wildcard-filter pattern="*:A"/>
            </message-filter>
            <processor ref="ProcessorB"/>
            <response>
                <append-string-transformer message=":C"/>
                <message-filter>
                    <wildcard-filter pattern="*:G:H*"/>
                </message-filter>
                <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                    <spring:property name="label" value="D"/>
                </custom-processor>
            </response>
        </vm:inbound-endpoint>
        <test:component appendString=":service1"/>
        <vm:outbound-endpoint path="service2" exchange-pattern="request-response">
            <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                <spring:property name="label" value="E"/>
            </custom-processor>
            <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                <spring:property name="label" value="F"/>
            </custom-processor>
            <response>
                <processor ref="ProcessorG"/>
                <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                    <spring:property name="label" value="H"/>
                </custom-processor>
            </response>
        </vm:outbound-endpoint>
    </flow>

    <flow name="asynchronousOutbound">
        <vm:inbound-endpoint path="in2" exchange-pattern="request-response">
            <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                <spring:property name="label" value="A"/>
            </custom-processor>
            <processor ref="ProcessorB"/>
            <response>
                <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                    <spring:property name="label" value="C"/>
                </custom-processor>
                <transformer ref="TransformerD"/>
            </response>
        </vm:inbound-endpoint>
        <test:component appendString=":service1"/>
        <vm:outbound-endpoint path="out2" exchange-pattern="one-way">
            <message-filter>
                <wildcard-filter pattern="*:service1"/>
            </message-filter>
            <append-string-transformer message=":E"/>
            <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                <spring:property name="label" value="F"/>
            </custom-processor>
            <!-- These processors should get ignored because the endpoint is asynchronous -->
            <response>
                <processor ref="ProcessorG"/>
                <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                    <spring:property name="label" value="H"/>
                </custom-processor>
            </response>
        </vm:outbound-endpoint>
    </flow>

    <flow name="echoService">
        <vm:inbound-endpoint path="service2" exchange-pattern="request-response"/>
        <test:component appendString=":service2"/>
    </flow>

    <flow name="legacyAttributes">
        <vm:inbound-endpoint path="in3" exchange-pattern="request-response" transformer-refs="TransformerB"
                             responseTransformer-refs="TransformerD">
            <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                <spring:property name="label" value="A"/>
            </custom-processor>
            <message-filter>
                <wildcard-filter pattern="*:A"/>
            </message-filter>
            <response>
                <append-string-transformer message=":C"/>
                <message-filter>
                    <wildcard-filter pattern="*:G:H*"/>
                </message-filter>
            </response>
        </vm:inbound-endpoint>
        <test:component appendString=":service1"/>
        <vm:outbound-endpoint path="service2" exchange-pattern="request-response" transformer-refs="TransformerF"
                              responseTransformer-refs="TransformerH">
            <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                <spring:property name="label" value="E"/>
            </custom-processor>
            <response>
                <processor ref="ProcessorG"/>
            </response>
        </vm:outbound-endpoint>
    </flow>

    <flow name="routers">
        <vm:inbound-endpoint path="in4" exchange-pattern="one-way">
            <wire-tap>
                <vm:outbound-endpoint path="wiretap1" exchange-pattern="one-way">
                    <append-string-transformer message=" (tapped)"/>
                </vm:outbound-endpoint>
            </wire-tap>
            <custom-splitter class="org.mule.test.integration.endpoints.CommaSplitter"/>
            <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                <spring:property name="label" value="A"/>
            </custom-processor>
            <processor ref="ProcessorB"/>
        </vm:inbound-endpoint>
        <test:component appendString=":service1"/>
        <vm:outbound-endpoint path="out4" exchange-pattern="one-way">
            <wire-tap>
                <vm:outbound-endpoint path="wiretap2" exchange-pattern="one-way">
                    <append-string-transformer message=" (tapped)"/>
                </vm:outbound-endpoint>
            </wire-tap>
            <message-filter>
                <wildcard-filter pattern="*:service1"/>
            </message-filter>
            <append-string-transformer message=":E"/>
            <custom-processor class="org.mule.tck.testmodels.mule.TestMessageProcessor">
                <spring:property name="label" value="F"/>
            </custom-processor>
        </vm:outbound-endpoint>
    </flow>
</mule>
