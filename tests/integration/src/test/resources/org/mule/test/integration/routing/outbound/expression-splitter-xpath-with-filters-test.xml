<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <vm:connector name="vm"/>

    <flow name="Distributor">
        <vm:inbound-endpoint path="distributor.queue" exchange-pattern="request-response">
            <mulexml:xml-to-dom-transformer returnClass="org.dom4j.Document"/>
        </vm:inbound-endpoint>
        <splitter evaluator="xpath" expression="/Foo/Bar/*">
            <vm:outbound-endpoint path="service1.queue" exchange-pattern="one-way">
                <expression-filter evaluator="xpath" expression="/ = 'One'"/>
            </vm:outbound-endpoint>
            <vm:outbound-endpoint path="service2.queue" exchange-pattern="one-way">
                <expression-filter evaluator="xpath" expression="/ = 'Two'"/>
            </vm:outbound-endpoint>
            <vm:outbound-endpoint path="service3.queue" exchange-pattern="one-way">
                <expression-filter evaluator="xpath" expression="/ = 'Three'"/>
            </vm:outbound-endpoint>
        </splitter>
    </flow>

    <flow name="ServiceOne">
        <vm:inbound-endpoint path="service1.queue" exchange-pattern="one-way"/>
        <vm:outbound-endpoint path="service1.out" exchange-pattern="one-way">
            <mulexml:dom-to-xml-transformer returnClass="java.lang.String"/>
        </vm:outbound-endpoint>
    </flow>

    <flow name="ServiceTwo">
        <vm:inbound-endpoint path="service2.queue" exchange-pattern="one-way"/>
        <vm:outbound-endpoint path="service2.out" exchange-pattern="one-way">
            <mulexml:dom-to-xml-transformer returnClass="java.lang.String"/>
        </vm:outbound-endpoint>
    </flow>

    <flow name="ServiceThree">
        <vm:inbound-endpoint path="service3.queue" exchange-pattern="one-way"/>
        <vm:outbound-endpoint path="service3.out" exchange-pattern="one-way">
            <mulexml:dom-to-xml-transformer returnClass="java.lang.String"/>
        </vm:outbound-endpoint>
    </flow>

</mule>
