<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:https="http://www.mulesoft.org/schema/mule/https"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
      xmlns:json="http://www.mulesoft.org/schema/mule/json"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
       http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
       http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
       http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">

    <http:listener-config name="listenerConfig1" host="localhost" port="${port1}"/>
    <http:listener-config name="listenerConfig2" host="localhost" port="${port2}"/>


    <flow name="alwaysRollback">
      <vm:inbound-endpoint path="in">
          <vm:transaction action="ALWAYS_BEGIN"/>
      </vm:inbound-endpoint>
      <test:component throwException="true"/>
      <rollback-exception-strategy/>
    </flow>

    <flow name="rollbackWithComponent">
      <vm:inbound-endpoint path="in5">
          <vm:transaction action="ALWAYS_BEGIN"/>
      </vm:inbound-endpoint>
      <test:component throwException="true"/>
      <rollback-exception-strategy>
        <script:component>
            <script:script engine="groovy">
                return "$payload Rolled Back"
            </script:script>
        </script:component>
      </rollback-exception-strategy>
    </flow>

    <flow name="fullyDefinedRollbackExceptionStrategyWithComponent">
        <vm:inbound-endpoint path="in6" exchange-pattern="request-response"/>
        <append-string-transformer message=" apt1"/>
        <test:component throwException="true"/>
        <rollback-exception-strategy maxRedeliveryAttempts="${shortMaxRedelivery}">
            <append-string-transformer message=" apt2"/>
            <append-string-transformer message=" apt3"/>
            <on-redelivery-attempts-exceeded>
                <append-string-transformer message=" apt4"/>
		        <script:component>
		            <script:script engine="groovy">
		                return "$payload groovified"
		            </script:script>
		        </script:component>
            </on-redelivery-attempts-exceeded>
        </rollback-exception-strategy>
    </flow>

    <flow name="httpRollbackOnly">
        <http:listener path="*" config-ref="listenerConfig1"/>
        <test:component throwException="true"/>
        <rollback-exception-strategy/>
    </flow>

    <flow name="httpWithRedeliveryExhausted">
        <http:listener path="*" config-ref="listenerConfig2"/>
        <test:component throwException="true"/>
        <rollback-exception-strategy maxRedeliveryAttempts="${shortMaxRedelivery}">
            <on-redelivery-attempts-exceeded>
                <append-string-transformer message=" consumed successfully"/>
            </on-redelivery-attempts-exceeded>
        </rollback-exception-strategy>
    </flow>

    <flow name="fullyDefinedRollbackExceptionStrategy">
        <vm:inbound-endpoint path="in2" exchange-pattern="request-response"/>
        <append-string-transformer message=" apt1"/>
        <test:component throwException="true"/>
        <rollback-exception-strategy maxRedeliveryAttempts="${shortMaxRedelivery}">
            <append-string-transformer message=" apt2"/>
            <append-string-transformer message=" apt3"/>
            <on-redelivery-attempts-exceeded>
                <append-string-transformer message=" apt4"/>
                <append-string-transformer message=" apt5"/>
            </on-redelivery-attempts-exceeded>
        </rollback-exception-strategy>
    </flow>

    <flow name="redeliveryPolicyRedefinition">
        <vm:inbound-endpoint path="in3">
            <idempotent-redelivery-policy idExpression="#[payload:]" useSecureHash="false"/>
            <vm:transaction action="ALWAYS_BEGIN"/>
        </vm:inbound-endpoint>
        <test:component throwException="true"/>
        <rollback-exception-strategy/>
    </flow>

    <flow name="inboundEndpointMaxRedeliveryTakesPrecendence">
        <vm:inbound-endpoint path="in4">
            <idempotent-redelivery-policy maxRedeliveryCount="4"/>
            <vm:transaction action="ALWAYS_BEGIN"/>
        </vm:inbound-endpoint>
        <test:component throwException="true"/>
        <rollback-exception-strategy maxRedeliveryAttempts="7"/>
    </flow>

    <flow name="rollbackExceptionStrategyCatchMessageRedeliveryDespiteChoiceConfiguration">
        <vm:inbound-endpoint path="in7">
            <vm:transaction action="ALWAYS_BEGIN"/>
        </vm:inbound-endpoint>
        <test:component throwException="true" exceptionToThrow="java.io.IOException"/>
        <choice-exception-strategy>
            <rollback-exception-strategy when="#[exception.causedBy(java.io.IOException)]" maxRedeliveryAttempts="2">
                <on-redelivery-attempts-exceeded>
                    <custom-processor class="org.mule.test.integration.exceptions.RollbackExceptionStrategyTestCase$CallMessageProcessor"/>
                </on-redelivery-attempts-exceeded>
            </rollback-exception-strategy>
            <catch-exception-strategy/>
        </choice-exception-strategy>
    </flow>
    
</mule>
