<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:httpn="http://www.mulesoft.org/schema/mule/httpn"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
      xmlns:json="http://www.mulesoft.org/schema/mule/json"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
       http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd
       http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">

    <httpn:listener-config name="listenerConfig">
        <httpn:listener-connection host="localhost" port="${port1}"/>
    </httpn:listener-config>
    <httpn:listener-config name="listenerConfigHttps">
        <httpn:listener-connection host="localhost" port="${port3}" protocol="HTTPS">
            <tls:context>
                <tls:key-store path="ssltest-keystore.jks" keyPassword="changeit" password="changeit" />
            </tls:context>
        </httpn:listener-connection>
    </httpn:listener-config>

    <flow name="httpContinueProcessingActualMessage">
        <httpn:listener path="service" config-ref="listenerConfig"/>
        <json:json-to-object-transformer returnClass="org.mule.test.integration.exceptions.OnErrorContinueTestCase$NewsRequest"/>
        <custom-processor class="org.mule.test.integration.exceptions.OnErrorContinueTestCase$LoadNewsProcessor"/>
        <test:component throwException="true"/>
        <error-handler>
            <on-error-continue>
                <custom-processor class="org.mule.test.integration.exceptions.OnErrorContinueTestCase$NewsErrorProcessor"/>
                <json:object-to-json-transformer/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="httpsContinueProcessingActualMessage">
        <httpn:listener config-ref="listenerConfigHttps" path="httpsservice"/>
        <json:json-to-object-transformer returnClass="org.mule.test.integration.exceptions.OnErrorContinueTestCase$NewsRequest"/>
        <custom-processor class="org.mule.test.integration.exceptions.OnErrorContinueTestCase$LoadNewsProcessor"/>
        <test:component throwException="true"/>
        <error-handler>
            <on-error-continue>
                <custom-processor class="org.mule.test.integration.exceptions.OnErrorContinueTestCase$NewsErrorProcessor"/>
                <json:object-to-json-transformer/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="continueProcessingActualMessage">
        <json:json-to-object-transformer returnClass="org.mule.test.integration.exceptions.OnErrorContinueTestCase$NewsRequest"/>
        <custom-processor class="org.mule.test.integration.exceptions.OnErrorContinueTestCase$LoadNewsProcessor"/>
        <test:component throwException="true"/>
        <error-handler>
            <on-error-continue>
                <custom-processor class="org.mule.test.integration.exceptions.OnErrorContinueTestCase$NewsErrorProcessor"/>
                <json:object-to-json-transformer/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="catchWithComponent">
      <test:component throwException="true"/>
      <error-handler>
        <on-error-continue>
            <script:component>
                <script:script engine="groovy">
                    return "$payload Caught"
                </script:script>
            </script:component>
        </on-error-continue>
       </error-handler>
    </flow>

    <flow name="fullyDefinedCatchExceptionStrategyWithComponent">
        <append-string-transformer message=" apt1"/>
        <test:component throwException="true"/>
        <error-handler>
            <on-error-continue>
                <append-string-transformer message=" apt2"/>
                <script:component>
                    <script:script engine="groovy">
                        return "$payload groovified"
                    </script:script>
                </script:component>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="onErrorTypeMatch">
        <append-string-transformer message=" apt1"/>
        <custom-processor class="org.mule.test.integration.exceptions.OnErrorContinueTestCase$FailingProcessor"/>
        <error-handler>
            <on-error-continue type="EXPRESSION">
                <append-string-transformer message=" nope"/>
            </on-error-continue>
            <on-error-continue type="CONNECTIVITY">
                <append-string-transformer message=" apt2"/>
            </on-error-continue>
            <on-error-continue type="ANY">
                <append-string-transformer message=" nope2"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="onErrorTypeMatchAny">
        <append-string-transformer message=" apt1"/>
        <test:component throwException="true"/>
        <error-handler>
            <on-error-continue type="EXPRESSION">
                <append-string-transformer message=" nope"/>
            </on-error-continue>
            <on-error-continue type="ANY">
                <append-string-transformer message=" apt2"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="onErrorTypeMatchSeveral">
        <choice>
            <when expression="#[payload]">
                <append-string-transformer message=" apt1"/>
                <custom-processor class="org.mule.test.integration.exceptions.OnErrorContinueTestCase$FailingProcessor"/>
            </when>
            <otherwise>
                <append-string-transformer message=" apt1"/>
                <expression-transformer expression="#[payload.nope]"/>
            </otherwise>
        </choice>
        <error-handler>
            <on-error-continue type="TRANSFORMATION, CONNECTIVITY">
                <append-string-transformer message=" apt2"/>
            </on-error-continue>
            <on-error-continue type="ANY">
                <append-string-transformer message=" nope"/>
            </on-error-continue>
        </error-handler>
    </flow>

</mule>
