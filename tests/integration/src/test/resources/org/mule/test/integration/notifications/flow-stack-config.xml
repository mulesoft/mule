<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <spring:beans>
        <spring:bean id="flowStackAsserter" name="flowStackAsserter" class="org.mule.tck.util.FlowTraceUtils$FlowStackAsserter" scope="prototype" />
        <spring:bean id="flowStackAsyncAsserter" name="flowStackAsyncAsserter" class="org.mule.tck.util.FlowTraceUtils$FlowStackAsyncAsserter" scope="prototype" />
    </spring:beans>


    <sub-flow name="subFlow">
        <processor ref="flowStackAsserter"/>
    </sub-flow>
    
    <flow name="flow">
        <processor ref="flowStackAsserter"/>
    </flow>

    <flow name="flowStatic">
        <flow-ref name="flow"/>
    </flow>

    <flow name="subFlowStatic">
        <flow-ref name="subFlow"/>
    </flow>

    <flow name="flowDynamic">
        <flow-ref name="#[mel:'flow']"/>
    </flow>

    <flow name="subFlowDynamic">
        <flow-ref name="#[mel:'subFlow']"/>
    </flow>

    <flow name="secondFlowStatic">
        <flow-ref name="flow"/>
        <flow-ref name="flow"/>
    </flow>

    <flow name="secondSubFlowStatic">
        <flow-ref name="subFlow"/>
        <flow-ref name="subFlow"/>
    </flow>

    <flow name="secondFlowDynamic">
        <flow-ref name="#[mel:'flow']"/>
        <flow-ref name="#[mel:'flow']"/>
    </flow>

    <flow name="secondSubFlowDynamic">
        <flow-ref name="#[mel:'subFlow']"/>
        <flow-ref name="#[mel:'subFlow']"/>
    </flow>

    <!-- Async -->
    
    <sub-flow name="subFlowInAsync">
        <processor ref="flowStackAsyncAsserter"/>
    </sub-flow>
    
    <flow name="flowInAsync">
        <processor ref="flowStackAsyncAsserter"/>
    </flow>
    
    <flow name="flowStaticWithAsync">
        <async>
            <flow-ref name="flowInAsync"/>
        </async>
    </flow>

    <flow name="subFlowStaticWithAsync">
        <async>
            <flow-ref name="subFlowInAsync"/>
        </async>
    </flow>

    <flow name="flowDynamicWithAsync">
        <async>
            <flow-ref name="#[mel:'flowInAsync']"/>
        </async>
    </flow>

    <flow name="subFlowDynamicWithAsync">
        <async>
            <flow-ref name="#[mel:'subFlowInAsync']"/>
        </async>
    </flow>
    
    <!-- Enricher -->
    
    <flow name="flowStaticWithEnricher">
        <enricher source="#[mel:payload]" target="#[mel:flowVars.enriched]">
            <flow-ref name="flow"/>
        </enricher>
    </flow>

    <flow name="subFlowStaticWithEnricher">
        <enricher source="#[mel:payload]" target="#[mel:flowVars.enriched]">
            <flow-ref name="subFlow"/>
        </enricher>
    </flow>

    <flow name="flowDynamicWithEnricher">
        <enricher source="#[mel:payload]" target="#[mel:flowVars.enriched]">
            <flow-ref name="#[mel:'flow']"/>
        </enricher>
    </flow>

    <flow name="subFlowDynamicWithEnricher">
        <enricher source="#[mel:payload]" target="#[mel:flowVars.enriched]">
            <flow-ref name="#[mel:'subFlow']"/>
        </enricher>
    </flow>
    
    <!-- Choice -->
    
    <flow name="flowStaticWithChoice">
        <choice>
            <when expression="#[mel:true]">
                <flow-ref name="flow"/>
            </when>
            <otherwise>
                <test:component throwException="true"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="subFlowStaticWithChoice">
        <choice>
            <when expression="#[mel:true]">
                <flow-ref name="subFlow"/>
            </when>
            <otherwise>
                <test:component throwException="true"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="flowDynamicWithChoice">
        <choice>
            <when expression="#[mel:true]">
                <flow-ref name="#[mel:'flow']"/>
            </when>
            <otherwise>
                <test:component throwException="true"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="subFlowDynamicWithChoice">
        <choice>
            <when expression="#[mel:true]">
                <flow-ref name="#[mel:'subFlow']"/>
            </when>
            <otherwise>
                <test:component throwException="true"/>
            </otherwise>
        </choice>
    </flow>
    
    <!-- Scatter Gather single -->
    
    <flow name="flowStaticWithScatterGather">
        <scatter-gather>
            <test:component/>
            <flow-ref name="flow"/>
        </scatter-gather>
    </flow>

    <flow name="subFlowStaticWithScatterGather">
        <scatter-gather>
            <test:component/>
            <flow-ref name="subFlow"/>
        </scatter-gather>
    </flow>

    <flow name="flowDynamicWithScatterGather">
        <scatter-gather>
            <test:component/>
            <flow-ref name="#[mel:'flow']"/>
        </scatter-gather>
    </flow>

    <flow name="subFlowDynamicWithScatterGather">
        <scatter-gather>
            <test:component/>
            <flow-ref name="#[mel:'subFlow']"/>
        </scatter-gather>
    </flow>
    
    <!-- Scatter Gather chain -->
    
    <flow name="flowStaticWithScatterGatherChain">
        <scatter-gather>
            <test:component/>
            <processor-chain>
                <flow-ref name="flow"/>
            </processor-chain>
        </scatter-gather>
    </flow>

    <flow name="subFlowStaticWithScatterGatherChain">
        <scatter-gather>
            <test:component/>
            <processor-chain>
                <flow-ref name="subFlow"/>
            </processor-chain>
        </scatter-gather>
    </flow>

    <flow name="flowDynamicWithScatterGatherChain">
        <scatter-gather>
            <test:component/>
            <processor-chain>
                <flow-ref name="#[mel:'flow']"/>
            </processor-chain>
        </scatter-gather>
    </flow>

    <flow name="subFlowDynamicWithScatterGatherChain">
        <scatter-gather>
            <test:component/>
            <processor-chain>
                <flow-ref name="#[mel:'subFlow']"/>
            </processor-chain>
        </scatter-gather>
    </flow>
    
</mule>
