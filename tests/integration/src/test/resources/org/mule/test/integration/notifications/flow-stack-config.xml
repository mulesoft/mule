<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:spring="http://www.springframework.org/schema/beans" 
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
               http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <spring:beans>
        <spring:bean id="flowStackAsserter" name="flowStackAsserter" class="org.mule.tck.util.FlowTraceUtils$FlowStackAsserter" scope="prototype" />
        <spring:bean id="flowStackAsyncAsserter" name="flowStackAsyncAsserter" class="org.mule.tck.util.FlowTraceUtils$FlowStackAsyncAsserter" scope="prototype" />
    </spring:beans>


    <sub-flow name="subFlow">
        <processor ref="flowStackAsserter"/>
    </sub-flow>

    <sub-flow name="subFlowSubRef1">
        <flow-ref name="subFlow"/>
    </sub-flow>

    <sub-flow name="subFlowSubRef2">
        <flow-ref name="subFlow"/>
    </sub-flow>
    
    <flow name="flow">
        <processor ref="flowStackAsserter"/>
    </flow>

    <flow name="flowStatic">
        <vm:inbound-endpoint path="in-flowStatic" exchange-pattern="request-response"/>
        <flow-ref name="flow"/>
    </flow>

    <flow name="subFlowStatic">
        <vm:inbound-endpoint path="in-subFlowStatic" exchange-pattern="request-response"/>
        <flow-ref name="subFlow"/>
    </flow>

    <flow name="flowDynamic">
        <vm:inbound-endpoint path="in-flowDynamic" exchange-pattern="request-response"/>
        <flow-ref name="#['flow']"/>
    </flow>

    <flow name="subFlowDynamic">
        <vm:inbound-endpoint path="in-subFlowDynamic" exchange-pattern="request-response"/>
        <flow-ref name="#['subFlow']"/>
    </flow>

    <flow name="secondFlowStatic">
        <vm:inbound-endpoint path="in-secondFlowStatic" exchange-pattern="request-response"/>
        <flow-ref name="flow"/>
        <flow-ref name="flow"/>
    </flow>

    <flow name="secondSubFlowStatic">
        <vm:inbound-endpoint path="in-secondSubFlowStatic" exchange-pattern="request-response"/>
        <flow-ref name="subFlow"/>
        <flow-ref name="subFlow"/>
    </flow>

    <flow name="secondFlowDynamic">
        <vm:inbound-endpoint path="in-secondFlowDynamic" exchange-pattern="request-response"/>
        <flow-ref name="#['flow']"/>
        <flow-ref name="#['flow']"/>
    </flow>

    <flow name="secondSubFlowDynamic">
        <vm:inbound-endpoint path="in-secondSubFlowDynamic" exchange-pattern="request-response"/>
        <flow-ref name="#['subFlow']"/>
        <flow-ref name="#['subFlow']"/>
    </flow>

    <sub-flow name="recursiveSubFlow">
        <set-payload value="#[payload - 1]"/>
        <flow-ref name="#[payload == 0? 'subFlow' : 'recursiveSubFlow']"/>
    </sub-flow>

    <flow name="recursiveSubFlowDynamic">
        <vm:inbound-endpoint path="in-recursiveSubFlowDynamic" exchange-pattern="request-response"/>
        <flow-ref name="recursiveSubFlow"/>
    </flow>

    <flow name="subSubFlowDynamic">
        <vm:inbound-endpoint path="in-subSubFlowDynamic" exchange-pattern="request-response"/>
        <flow-ref name="#['subFlowSubRef' + payload]"/>
    </flow>

    <!-- Async -->
    
    <sub-flow name="subFlowInAsync">
        <processor ref="flowStackAsyncAsserter"/>
    </sub-flow>
    
    <flow name="flowInAsync">
        <processor ref="flowStackAsyncAsserter"/>
    </flow>
    
    <flow name="flowStaticWithAsync">
        <vm:inbound-endpoint path="in-flowStaticWithAsync" exchange-pattern="request-response"/>
        <async>
            <flow-ref name="flowInAsync"/>
        </async>
    </flow>

    <flow name="subFlowStaticWithAsync">
        <vm:inbound-endpoint path="in-subFlowStaticWithAsync" exchange-pattern="request-response"/>
        <async>
            <flow-ref name="subFlowInAsync"/>
        </async>
    </flow>

    <flow name="flowDynamicWithAsync">
        <vm:inbound-endpoint path="in-flowDynamicWithAsync" exchange-pattern="request-response"/>
        <async>
            <flow-ref name="#['flowInAsync']"/>
        </async>
    </flow>

    <flow name="subFlowDynamicWithAsync">
        <vm:inbound-endpoint path="in-subFlowDynamicWithAsync" exchange-pattern="request-response"/>
        <async>
            <flow-ref name="#['subFlowInAsync']"/>
        </async>
    </flow>
    
    <!-- Enricher -->
    
    <flow name="flowStaticWithEnricher">
        <vm:inbound-endpoint path="in-flowStaticWithEnricher" exchange-pattern="request-response"/>
        <enricher source="#[payload]" target="#[flowVars.enriched]">
            <flow-ref name="flow"/>
        </enricher>
    </flow>

    <flow name="subFlowStaticWithEnricher">
        <vm:inbound-endpoint path="in-subFlowStaticWithEnricher" exchange-pattern="request-response"/>
        <enricher source="#[payload]" target="#[flowVars.enriched]">
            <flow-ref name="subFlow"/>
        </enricher>
    </flow>

    <flow name="flowDynamicWithEnricher">
        <vm:inbound-endpoint path="in-flowDynamicWithEnricher" exchange-pattern="request-response"/>
        <enricher source="#[payload]" target="#[flowVars.enriched]">
            <flow-ref name="#['flow']"/>
        </enricher>
    </flow>

    <flow name="subFlowDynamicWithEnricher">
        <vm:inbound-endpoint path="in-subFlowDynamicWithEnricher" exchange-pattern="request-response"/>
        <enricher source="#[payload]" target="#[flowVars.enriched]">
            <flow-ref name="#['subFlow']"/>
        </enricher>
    </flow>
    
    <!-- Choice -->
    
    <flow name="flowStaticWithChoice">
        <vm:inbound-endpoint path="in-flowStaticWithChoice" exchange-pattern="request-response"/>
        <choice>
            <when expression="#[true]">
                <flow-ref name="flow"/>
            </when>
            <otherwise>
                <test:component throwException="true"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="subFlowStaticWithChoice">
        <vm:inbound-endpoint path="in-subFlowStaticWithChoice" exchange-pattern="request-response"/>
        <choice>
            <when expression="#[true]">
                <flow-ref name="subFlow"/>
            </when>
            <otherwise>
                <test:component throwException="true"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="flowDynamicWithChoice">
        <vm:inbound-endpoint path="in-flowDynamicWithChoice" exchange-pattern="request-response"/>
        <choice>
            <when expression="#[true]">
                <flow-ref name="#['flow']"/>
            </when>
            <otherwise>
                <test:component throwException="true"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="subFlowDynamicWithChoice">
        <vm:inbound-endpoint path="in-subFlowDynamicWithChoice" exchange-pattern="request-response"/>
        <choice>
            <when expression="#[true]">
                <flow-ref name="#['subFlow']"/>
            </when>
            <otherwise>
                <test:component throwException="true"/>
            </otherwise>
        </choice>
    </flow>

    <sub-flow name="recursiveSubFlowChoice">
        <set-payload value="#[payload - 1]"/>
        <choice>
            <when expression="#[payload == 0]">
                <flow-ref name="#['recursiveSubFlowChoice']"/>
            </when>
            <otherwise>
                <flow-ref name="subFlow"/>
            </otherwise>
        </choice>
    </sub-flow>

    <flow name="recursiveSubFlowWithChoice">
        <vm:inbound-endpoint path="in-recursiveSubFlowWithChoice" exchange-pattern="request-response"/>
        <flow-ref name="recursiveSubFlowChoice"/>
    </flow>
    
    <!-- Scatter Gather single -->
    
    <flow name="flowStaticWithScatterGather">
        <vm:inbound-endpoint path="in-flowStaticWithScatterGather" exchange-pattern="request-response"/>
        <scatter-gather>
            <test:component/>
            <flow-ref name="flow"/>
        </scatter-gather>
    </flow>

    <flow name="subFlowStaticWithScatterGather">
        <vm:inbound-endpoint path="in-subFlowStaticWithScatterGather" exchange-pattern="request-response"/>
        <scatter-gather>
            <test:component/>
            <flow-ref name="subFlow"/>
        </scatter-gather>
    </flow>

    <flow name="flowDynamicWithScatterGather">
        <vm:inbound-endpoint path="in-flowDynamicWithScatterGather" exchange-pattern="request-response"/>
        <scatter-gather>
            <test:component/>
            <flow-ref name="#['flow']"/>
        </scatter-gather>
    </flow>

    <flow name="subFlowDynamicWithScatterGather">
        <vm:inbound-endpoint path="in-subFlowDynamicWithScatterGather" exchange-pattern="request-response"/>
        <scatter-gather>
            <test:component/>
            <flow-ref name="#['subFlow']"/>
        </scatter-gather>
    </flow>
    
    <!-- Scatter Gather chain -->
    
    <flow name="flowStaticWithScatterGatherChain">
        <vm:inbound-endpoint path="in-flowStaticWithScatterGatherChain" exchange-pattern="request-response"/>
        <scatter-gather>
            <test:component/>
            <processor-chain>
                <flow-ref name="flow"/>
            </processor-chain>
        </scatter-gather>
    </flow>

    <flow name="subFlowStaticWithScatterGatherChain">
        <vm:inbound-endpoint path="in-subFlowStaticWithScatterGatherChain" exchange-pattern="request-response"/>
        <scatter-gather>
            <test:component/>
            <processor-chain>
                <flow-ref name="subFlow"/>
            </processor-chain>
        </scatter-gather>
    </flow>

    <flow name="flowDynamicWithScatterGatherChain">
        <vm:inbound-endpoint path="in-flowDynamicWithScatterGatherChain" exchange-pattern="request-response"/>
        <scatter-gather>
            <test:component/>
            <processor-chain>
                <flow-ref name="#['flow']"/>
            </processor-chain>
        </scatter-gather>
    </flow>

    <flow name="subFlowDynamicWithScatterGatherChain">
        <vm:inbound-endpoint path="in-subFlowDynamicWithScatterGatherChain" exchange-pattern="request-response"/>
        <scatter-gather>
            <test:component/>
            <processor-chain>
                <flow-ref name="#['subFlow']"/>
            </processor-chain>
        </scatter-gather>
    </flow>

    <!-- Filter -->

    <flow name="flowChainedFilter">
        <vm:inbound-endpoint path="in-flowChainedFilter" exchange-pattern="request-response"/>
        <processor-chain>
            <expression-filter expression="#[true]"/>
            <flow-ref name="flow"/>
        </processor-chain>
    </flow>

    <flow name="flowChainedFilterManyProcessors">
        <vm:inbound-endpoint path="in-flowChainedFilterManyProcessors" exchange-pattern="request-response"/>
        <processor-chain>
            <expression-filter expression="#[true]"/>
            <test:component/>
            <flow-ref name="flow"/>
        </processor-chain>
    </flow>

    <!-- For Each -->

    <flow name="flowForEach">
        <vm:inbound-endpoint path="in-flowForEach" exchange-pattern="request-response"/>
        <foreach collection="#[['foo', 'bar']]">
            <test:component/>
            <flow-ref name="flow"/>
        </foreach>
    </flow>

    <!-- For Each + Filter -->

    <flow name="flowForEachFilter">
        <vm:inbound-endpoint path="in-flowForEachFilter" exchange-pattern="request-response"/>
        <foreach collection="#[['foo', 'bar']]">
            <expression-filter expression="#[true]"/>
            <flow-ref name="flow"/>
        </foreach>
    </flow>
    
</mule>
