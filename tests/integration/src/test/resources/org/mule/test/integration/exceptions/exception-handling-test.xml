<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:file="http://www.mulesoft.org/schema/mule/file"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <spring:bean id="objectStore" class="org.mule.runtime.core.util.store.PartitionedPersistentObjectStore" />
    <spring:bean id="objectStore2" class="org.mule.runtime.core.util.store.PartitionedPersistentObjectStore" />

    <flow name="customProcessorInFlow">
        <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
    </flow>

    <flow name="asyncInFlow">
        <async>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            <test:component throwException="true"/>
        </async>
        <error-handler>
            <on-error-continue>
                <test:queue name="outFlow4"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="untilSuccessfulInFlow">
        <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
        </until-successful>
        <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
            <test:component throwException="true"/>
        </until-successful>
        <error-handler>
            <on-error-continue>
                <test:queue name="outFlow5"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="customProcessorInScope">
        <foreach>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
        </foreach>
        <error-handler>
            <on-error-propagate/>
        </error-handler>
    </flow>

    <flow name="customProcessorInTransactionalScope">
        <try>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            <test:component throwException="true"/>
            <error-handler>
                <on-error-continue>
                    <test:assert expression="#[mel:flowVars.expectedHandler == false]"/>
                    <test:queue name="outTransactional1"/>
                </on-error-continue>
            </error-handler>
        </try>
    </flow>

    <flow name="asyncInTransactionalScope">
        <try>
            <async>
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
                <test:component throwException="true"/>
            </async>
            <error-handler>
                <on-error-continue>
                    <test:queue name="outTransactional4"/>
                </on-error-continue>
            </error-handler>
        </try>
    </flow>

    <flow name="untilSuccessfulInTransactionalScope">
        <try>
            <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            </until-successful>
            <until-successful objectStore-ref="objectStore2" maxRetries="1" millisBetweenRetries="1000">
                <test:component throwException="true"/>
            </until-successful>
            <error-handler>
                <on-error-continue>
                    <test:queue name="outTransactional5"/>
                </on-error-continue>
            </error-handler>
        </try>
    </flow>

    <flow name="customProcessorInExceptionStrategy">
        <test:component throwException="true"/>
        <error-handler>
            <on-error-continue>
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
                <test:assert expression="#[mel:flowVars.expectedHandler == false]"/>
                <test:queue name="outStrategy1"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="asyncInExceptionStrategy">
        <test:component throwException="true"/>
        <error-handler>
            <on-error-continue>
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExecutionCountProcessor" />
                <async>
                    <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
                    <test:component throwException="true"/>
                </async>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="untilSuccessfulInExceptionStrategy">
        <test:component throwException="true"/>
        <error-handler>
            <on-error-continue>
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExecutionCountProcessor" />
                <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
                    <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
                </until-successful>
                <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
                    <test:component throwException="true"/>
                </until-successful>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="untilSuccessfulInExceptionStrategyRollback">
        <test:component throwException="true"/>
        <error-handler>
            <on-error-propagate>
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExecutionCountProcessor" />
                <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
                    <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
                </until-successful>
                <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
                    <test:component throwException="true"/>
                </until-successful>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="errorThrownByOperationInForeach">
        <foreach>
            <file:write path="#[Â£$invalid]">
                <file:content>#[payload]</file:content>
            </file:write>
        </foreach>
    </flow>

</mule>
