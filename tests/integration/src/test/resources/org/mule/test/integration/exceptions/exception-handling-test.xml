<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

    <spring:bean id="objectStore" class="org.mule.runtime.core.util.store.PartitionedPersistentObjectStore" />
    <spring:bean id="objectStore2" class="org.mule.runtime.core.util.store.PartitionedPersistentObjectStore" />

    <flow name="customProcessorInFlow">
        <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
    </flow>

    <flow name="outboundEndpointInFlow" processingStrategy="asynchronous">
        <test:component throwException="true"/>
        <catch-exception-strategy>
            <test:queue name="outFlow2"/>
        </catch-exception-strategy>
    </flow>

    <flow name="outboundDynamicEndpointInFlow">
        <test:component throwException="true"/>
        <catch-exception-strategy>
            <test:queue name="outFlow3"/>
        </catch-exception-strategy>
    </flow>

    <flow name="asyncInFlow">
        <async>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            <test:component throwException="true"/>
        </async>
        <catch-exception-strategy>
            <test:queue name="outFlow4"/>
        </catch-exception-strategy>
    </flow>

    <flow name="untilSuccessfulInFlow">
        <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
        </until-successful>
        <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
            <test:component throwException="true"/>
        </until-successful>
        <catch-exception-strategy>
            <test:queue name="outFlow5"/>
        </catch-exception-strategy>
    </flow>

    <flow name="customProcessorInScope">
        <foreach>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
        </foreach>
        <rollback-exception-strategy/>
    </flow>

    <flow name="outboundEndpointInScope">
        <foreach>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            <test:component throwException="true"/>
        </foreach>
        <rollback-exception-strategy>
            <test:assert expression="#[flowVars.expectedHandler == true]"/>
            <test:queue name="outScope2"/>
        </rollback-exception-strategy>
    </flow>

    <flow name="outboundDynamicEndpointInScope">
        <foreach>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            <test:component throwException="true"/>
        </foreach>
        <rollback-exception-strategy>
            <test:assert expression="#[flowVars.expectedHandler == true]"/>
            <test:queue name="outScope3"/>
        </rollback-exception-strategy>
    </flow>

    <flow name="customProcessorInTransactionalScope">
        <transactional>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            <test:component throwException="true"/>
            <catch-exception-strategy>
                <test:assert expression="#[flowVars.expectedHandler == false]"/>
                <test:queue name="outTransactional1"/>
            </catch-exception-strategy>
        </transactional>
    </flow>

    <flow name="outboundEndpointInTransactionalScope">
        <transactional>
            <test:component throwException="true"/>
            <catch-exception-strategy>
                <test:queue name="outTransactional2"/>
            </catch-exception-strategy>
        </transactional>
    </flow>

    <flow name="outboundDynamicEndpointInTransactionalScope">
        <transactional>
            <test:component throwException="true"/>
            <catch-exception-strategy>
                <test:queue name="outTransactional3"/>
            </catch-exception-strategy>
        </transactional>
    </flow>

    <flow name="asyncInTransactionalScope">
        <transactional>
            <async>
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
                <test:component throwException="true"/>
            </async>
            <catch-exception-strategy>
                <test:queue name="outTransactional4"/>
            </catch-exception-strategy>
        </transactional>
    </flow>

    <flow name="untilSuccessfulInTransactionalScope">
        <transactional>
            <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            </until-successful>
            <until-successful objectStore-ref="objectStore2" maxRetries="1" millisBetweenRetries="1000">
                <test:component throwException="true"/>
            </until-successful>
            <catch-exception-strategy>
                <test:queue name="outTransactional5"/>
            </catch-exception-strategy>
        </transactional>
    </flow>

    <flow name="customProcessorInExceptionStrategy">
        <test:component throwException="true"/>
        <catch-exception-strategy>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            <test:assert expression="#[flowVars.expectedHandler == false]"/>
            <test:queue name="outStrategy1"/>
        </catch-exception-strategy>
    </flow>

    <flow name="outboundEndpointInExceptionStrategy">
        <test:component throwException="true"/>
        <catch-exception-strategy>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExecutionCountProcessor" />
            <test:component throwException="true"/>
        </catch-exception-strategy>
    </flow>

    <flow name="outboundDynamicEndpointInExceptionStrategy">
        <test:component throwException="true"/>
        <catch-exception-strategy>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExecutionCountProcessor" />
            <test:component throwException="true"/>
        </catch-exception-strategy>
    </flow>

    <flow name="asyncInExceptionStrategy">
        <test:component throwException="true"/>
        <catch-exception-strategy>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExecutionCountProcessor" />
            <async>
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
                <test:component throwException="true"/>
            </async>
        </catch-exception-strategy>
    </flow>

    <flow name="untilSuccessfulInExceptionStrategy">
        <test:component throwException="true"/>
        <catch-exception-strategy>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExecutionCountProcessor" />
            <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            </until-successful>
            <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
                <test:component throwException="true"/>
            </until-successful>
        </catch-exception-strategy>
    </flow>

    <flow name="untilSuccessfulInExceptionStrategyRollback">
        <test:component throwException="true"/>
        <rollback-exception-strategy>
            <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExecutionCountProcessor" />
            <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
                <custom-processor class="org.mule.test.integration.exceptions.ExceptionHandlingTestCase$ExceptionHandlerVerifierProcessor" />
            </until-successful>
            <until-successful objectStore-ref="objectStore" maxRetries="1" millisBetweenRetries="1000">
                <test:component throwException="true"/>
            </until-successful>
        </rollback-exception-strategy>
    </flow>

</mule>
