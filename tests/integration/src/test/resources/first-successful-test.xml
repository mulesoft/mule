<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <flow name="test-router">
        <first-successful>
            <processor-chain>
                <message-filter throwOnUnaccepted="true">
                    <payload-type-filter expectedType="java.lang.String"/>
                </message-filter>
                <test:component appendString=" is a string"/>
            </processor-chain>
            <processor-chain>
                <message-filter throwOnUnaccepted="true">
                    <payload-type-filter expectedType="java.lang.Integer"/>
                </message-filter>
                <test:component appendString=" is an integer"/>
            </processor-chain>
            <processor-chain>
                <message-filter throwOnUnaccepted="true">
                    <payload-type-filter expectedType="java.lang.Number"/>
                </message-filter>
                <test:component appendString=" is a number"/>
            </processor-chain>
        </first-successful>
    </flow>

    <flow name="test-router2">
        <first-successful failureExpression="#[payload.contains('is a number')]">
            <test:component appendString=" is a number" />
            <test:component appendString=" is a string" />
        </first-successful>
    </flow>

    <flow name="test-router3">
        <first-successful failureExpression="#[payload.contains('is a ')]">
            <test:component appendString=" is a number" />
            <test:component appendString=" is a string" />
        </first-successful>
    </flow>

    <flow name="test-router4">
        <first-successful>
            <outbound-endpoint address="test://AlwaysFail"/>
            <flow-ref name="test-router4-handler"/>
        </first-successful>
    </flow>

    <flow name="test-router4-handler">
        <test:queue name="output4.out"/>
    </flow>
</mule>
