<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.mule.tests.archetypes</groupId>
        <artifactId>mule-tests-archetypes</artifactId>
        <version>3.9.0-SNAPSHOT</version>
    </parent>
    <groupId>org.mule.tests.archetypes</groupId>
    <artifactId>module-archetype</artifactId>
    <packaging>jar</packaging>
    <name>Test for Mule Module Archetype</name>

    <!-- the following properties are needed by the groovy script that we inherit from our parent pom -->
    <properties>
        <!-- this is the name of the directory that's crated by the archetype -->
        <outputDir>foo</outputDir>
        <!-- this is the groupId:artifactId of the archetype that we want to invoke -->
        <archetype>org.mule.tools:mule-module-archetype</archetype>
        <!-- this string will be appended to the archetype's commandline -->
        <archetypeParams>-DartifactId=foo -DhasCustomSchema=y</archetypeParams>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.mule.tools</groupId>
            <artifactId>mule-module-archetype</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mule</groupId>
            <artifactId>mule-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-spring-config</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
        	<plugins>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.codehaus.gmaven
        								</groupId>
        								<artifactId>
        									gmaven-plugin
        								</artifactId>
        								<versionRange>
        									[1.4,)
        								</versionRange>
        								<goals>
        									<goal>execute</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.apache.maven.plugins
        								</groupId>
        								<artifactId>
        									maven-enforcer-plugin
        								</artifactId>
        								<versionRange>
        									[1.0-alpha-4,)
        								</versionRange>
        								<goals>
        									<goal>enforce</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
    </build>
</project>
