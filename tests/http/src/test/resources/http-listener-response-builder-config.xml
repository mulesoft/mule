<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xsi:schemaLocation="
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
               http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

    <http:listener-config name="listenerConfig">
        <http:listener-connection host="localhost" port="${port}"/>
    </http:listener-config>

    <flow name="emptyResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${emptyResponseBuilderPath}">
            <http:response />
        </http:listener>
        <echo-component/>
    </flow>

    <flow name="twoHeadersResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${twoHeadersResponseBuilderPath}">
            <http:response>
                <http:headers>
                    #[mel:['content-type' : 'text/x-javascript', 'Content-Type' : 'application/json']]
                </http:headers>
            </http:response>
        </http:listener>
        <echo-component/>
    </flow>

    <flow name="statusResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${statusResponseBuilderPath}">
            <http:response statusCode="201" reasonPhrase="everything works!"/>
        </http:listener>
        <echo-component/>
        <logger level="ERROR" message="#[mel:payload]"/>
    </flow>

    <flow name="headerResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${headerResponseBuilderPath}">
            <http:response>
                <http:headers>
                    #[mel:['User-Agent' : 'Mule 4.0.0', 'Date' : '2016-06-08T13:34:41.080-03:00']]
                </http:headers>
            </http:response>
        </http:listener>
        <echo-component/>
    </flow>

    <flow name="headersResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${headersResponseBuilderPath}">
            <http:response>
                <http:headers>#[mel:['User-Agent': 'Mule 4.0.0','Date': server.dateTime.toString()]]</http:headers>
            </http:response>
        </http:listener>
        <echo-component/>
    </flow>

    <flow name="headersOverrideResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${headersOverrideResponseBuilderPath}">
            <http:response>
                <http:headers>
                    #[mel:['User-Agent': 'Mule 4.0.0','Date': server.dateTime.toString()]]
                </http:headers>
            </http:response>
        </http:listener>
        <echo-component/>
    </flow>

    <flow name="defaultReasonPhraseResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${defaultReasonPhraseResponseBuilderPath}">
            <http:response statusCode="200"/>
        </http:listener>
        <echo-component/>
    </flow>

    <flow name="noReasonPhraseUnknownStatusCodeResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${noReasonPhraseUnknownStatusCodeResponseBuilderPath}">
            <http:response statusCode="1001"/>
        </http:listener>
        <echo-component/>
    </flow>

    <flow name="errorEmptyResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${errorEmptyResponseBuilderPath}">
            <http:error-response />
        </http:listener>
        <test:component throwException="true"/>
    </flow>

    <flow name="errorStatusResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${errorStatusResponseBuilderPath}">
            <http:error-response statusCode="201" reasonPhrase="everything works!"/>
        </http:listener>
        <logger level="ERROR" message="#[mel:payload]"/>
        <test:component throwException="true"/>
    </flow>

    <flow name="errorHeaderResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${errorHeaderResponseBuilderPath}">
            <http:error-response>
                <http:headers>#[mel:['User-Agent': 'Mule 4.0.0','Date': server.dateTime.toString()]]</http:headers>
            </http:error-response>
        </http:listener>
        <test:component throwException="true"/>
    </flow>

    <flow name="errorHeadersResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${errorHeadersResponseBuilderPath}">
            <http:error-response>
                <http:headers>
                    #[mel:['User-Agent': 'Mule 4.0.0','Date': server.dateTime.toString()]]
                </http:headers>
            </http:error-response>
        </http:listener>
        <test:component throwException="true"/>
    </flow>

    <flow name="errorHeadersOverrideResponseBuilderFlow">
        <http:listener config-ref="listenerConfig" path="${errorHeadersOverrideResponseBuilderPath}">
            <http:error-response>
                <http:headers>
                    #[mel:['User-Agent': 'Mule 4.0.0','Date': server.dateTime.toString()]]
                </http:headers>
            </http:error-response>
        </http:listener>
        <test:component throwException="true"/>
    </flow>

    <flow name="responseBuilderAndErrorResponseBuilderNotTheSame">
        <http:listener config-ref="listenerConfig" path="${responseBuilderAndErrorResponseBuilderNotTheSamePath}">
            <http:response statusCode="202"/>
            <http:error-response statusCode="505"/>
        </http:listener>
        <message-filter throwOnUnaccepted="true">
            <expression-filter
                    expression="#[mel:message.getAttributes().getHeaders().get('fail') == null]"/>
        </message-filter>
    </flow>

</mule>
