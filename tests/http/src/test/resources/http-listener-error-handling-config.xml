<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:httpn="http://www.mulesoft.org/schema/mule/httpn"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <configuration>
        <expression-language>
            <import class="org.mule.test.module.http.functional.listener.AbstractHttpListenerErrorHandlingTestCase"/>
            <alias name="inputStreamPayload" expression="AbstractHttpListenerErrorHandlingTestCase.stream"/>
        </expression-language>
    </configuration>

    <httpn:listener-config name="listenerConfig">
        <httpn:listener-connection host="localhost" port="${port}"/>
    </httpn:listener-config>

    <flow name="exceptionBuildingResponseParameters">
        <httpn:listener config-ref="listenerConfig" path="/exceptionBuildingResponseParameters">
            <httpn:response>
                <httpn:headers>
                    #[{ Content-Type: contentType}]
                </httpn:headers>
            </httpn:response>
        </httpn:listener>
        <set-payload value="#[mel:inputStreamPayload]"/>
        <error-handler>
            <on-error-continue type="EXPRESSION">
                <custom-processor class="org.mule.test.module.http.functional.listener.AbstractHttpListenerErrorHandlingTestCase$TrackPassageMessageProcessor"/>
                <set-payload value="#['Exception Handled']"/>
            </on-error-continue>
            <on-error-continue>
                <set-payload value="Error."/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="exceptionPropagationFlow">
        <httpn:listener config-ref="listenerConfig" path="/exceptionPropagation">
            <httpn:error-response>
                <httpn:headers>#[{'headerName':myHeader}]</httpn:headers>
            </httpn:error-response>
        </httpn:listener>
        <test:component throwException="true"/>
        <error-handler>
            <on-error-propagate>
                <set-payload value="#['An error occurred: ' ++ error.description]"/>
                <set-variable variableName="myHeader" value="headerValue"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="exceptionBuildingResponse">
        <httpn:listener config-ref="listenerConfig" path="/exceptionBuildingResponse" responseStreamingMode="NEVER"/>
        <set-payload value="#[mel:inputStreamPayload]"/>
        <error-handler>
            <on-error-continue type="ANY">
                <custom-processor class="org.mule.test.module.http.functional.listener.AbstractHttpListenerErrorHandlingTestCase$TrackPassageMessageProcessor"/>
                <set-payload value="#['Exception Handled']"/>
            </on-error-continue>
        </error-handler>
    </flow>

</mule>
