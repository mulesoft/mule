<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:db="http://www.mulesoft.org/schema/mule/db"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
      xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
      xmlns:sockets="http://www.mulesoft.org/schema/mule/sockets"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd http://www.mulesoft.org/schema/mule/sockets http://www.mulesoft.org/schema/mule/sockets/current/mule-sockets.xsd http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd">

    <db:config name="dbConfig">
      <db:derby-connection create="true"
                           database="target/muleEmbeddedDB"
                           subsubProtocol="directory"
                           transactionIsolation="NOT_CONFIGURED"
                           useXaTransactions="false">
         <db:pooling-profile acquireIncrement="1"
                             maxPoolSize="10"
                             maxWait="0"
                             maxWaitUnit="SECONDS"
                             minPoolSize="0"
                             preparedStatementCacheSize="5"/>
            <db:connection-properties>
                <db:connection-property key="first" value="propertyOne"/>
                <db:connection-property key="second" value="propertyTwo"/>
            </db:connection-properties>
        </db:derby-connection>
    </db:config>
   <http:listener-config basePath="/"
                          interpretRequestErrors="false"
                          name="httpListener"
                          parseRequest="true">
      <http:listener-connection connectionIdleTimeout="30000"
                                 disableValidation="true"
                                 host="localhost"
                                 port="49019"
                                 protocol="HTTPS"
                                 usePersistentConnections="true">
            <tls:context>
            <tls:key-store keyPassword="changeit"
                           password="changeit"
                           path="ssltest-keystore.jks"/>
            </tls:context>
        </http:listener-connection>
    </http:listener-config>
   <http:request-config basePath="/"
                         enableCookies="true"
                         followRedirects="true"
                         name="httpRequester"
                         parseResponse="true"
                         requestStreamingMode="AUTO"
                         sendBodyMode="AUTO">
      <http:request-connection connectionIdleTimeout="30000"
                                host="localhost"
                                maxConnections="-1"
                                port="49020"
                                protocol="HTTP"
                                responseBufferSize="10240"
                                usePersistentConnections="true">
            <http:authentication>
            <http:basic-authentication password="pass" preemptive="true" username="user"/>
            </http:authentication>
            <http:client-socket-properties>
            <sockets:tcp-client-socket-properties clientTimeout="1000"
                                                  connectionTimeout="1000"
                                                  failOnUnresolvedHost="true"
                                                  keepAlive="true"
                                                  linger="1000"
                                                  receiveBufferSize="1024"
                                                  reuseAddress="true"
                                                  sendBufferSize="1024"
                                                  sendTcpNoDelay="true"/>
            </http:client-socket-properties>
        </http:request-connection>
    </http:request-config>
   <flow initialState="stopped" name="testFlow">
      <http:listener config-ref="httpListener"
                      path="testBuilder"
                      responseStreamingMode="AUTO">
            <redelivery-policy maxRedeliveryCount="2" useSecureHash="true"/>
            <reconnect blocking="true" count="1" frequency="0"/>
            <http:response>
                <http:body>#[{'my': 'map'}]</http:body>
                <http:headers>
                    #[{{'content-type' : 'text/plain'}}]
                </http:headers>
            </http:response>
        </http:listener>
      <db:bulk-insert queryTimeout="0" queryTimeoutUnit="SECONDS">
            <db:sql>INSERT INTO PLANET(POSITION, NAME) VALUES (:position, :name)</db:sql>
            <db:parameter-types>
                <db:parameter-type key="name" type="VARCHAR" />
                <db:parameter-type key="position" type="INTEGER" />
            </db:parameter-types>
        </db:bulk-insert>
      <http:request config-ref="httpRequester"
                     method="POST"
                     outputType="ANY"
                     path="/nested"/>
      <db:insert autoGenerateKeys="false"
                 config-ref="dbConfig"
                 queryTimeout="0"
                 queryTimeoutUnit="SECONDS">
            <db:sql>INSERT INTO PLANET(POSITION, NAME, DESCRIPTION) VALUES (777, 'Pluto', :description)</db:sql>
            <db:parameter-types>
                <db:parameter-type key="description" type="CLOB"/>
            </db:parameter-types>
            <db:input-parameters>
                #[{{'description' : payload}}]
            </db:input-parameters>
        </db:insert>

        <sockets:send-and-receive target="myVar">
            <repeatable-in-memory-stream bufferSizeIncrement="8"
                                         bufferUnit="KB"
                                         initialBufferSize="51"
                                         maxBufferSize="1000"/>
        </sockets:send-and-receive>

        <wsc:consume operation="GetCitiesByCountry">
            <wsc:message>
                <wsc:body>#[payload]</wsc:body>
                <wsc:headers>#[{"headers": {con#headerIn: "Header In Value",con#headerInOut: "Header In Out Value"}]</wsc:headers>
                <wsc:attachments>#[{}]</wsc:attachments>
            </wsc:message>
        </wsc:consume>

    </flow>

</mule>
