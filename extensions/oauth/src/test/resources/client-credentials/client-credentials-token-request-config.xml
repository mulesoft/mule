<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:oauth="http://www.mulesoft.org/schema/mule/oauth"
      xmlns:httpn="http://www.mulesoft.org/schema/mule/httpn"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/oauth http://www.mulesoft.org/schema/mule/oauth/current/mule-oauth.xsd
       http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd">

    <oauth:token-manager-config name="tokenManagerConfig"/>

    <oauth:client-credentials-grant-type
            name="grantTypeWithOauth1"
            clientId="${client.id}"
            clientSecret="${client.secret}"
            tokenManager="tokenManagerConfig"
            scopes="${scopes}"
            tokenUrl="${token.url}"
            encodeClientCredentialsInBody="true"
            refreshTokenWhen="#[attributes.statusCode == 500]"
            responseAccessToken="#[payload['access_token']]"
            responseExpiresIn="#[payload['expires_in']]">
    </oauth:client-credentials-grant-type>

    <httpn:request-config name="requestConfigWithOAuth1">
        <httpn:request-connection host="localhost" port="${oauth.server.port}" authentication="grantTypeWithOauth1"/>
    </httpn:request-config>

    <flow name="credentialsInBody">
        <httpn:request path="/resource" method="POST" config-ref="requestConfigWithOAuth1"/>
    </flow>

    <oauth:client-credentials-grant-type
            name="grantTypeWithOauth2"
            clientId="${client.id}"
            clientSecret="${client.secret}"
            tokenManager="tokenManagerConfig"
            scopes="${scopes}"
            tokenUrl="${token.url}"
            encodeClientCredentialsInBody="false"
            refreshTokenWhen="#[attributes.statusCode == 500]"
            responseAccessToken="#[payload['access_token']]"
            responseExpiresIn="#[payload['expires_in']]">
    </oauth:client-credentials-grant-type>

    <httpn:request-config name="requestConfigWithOAuth2">
        <httpn:request-connection host="localhost" port="${oauth.server.port}" authentication="grantTypeWithOauth2"/>
    </httpn:request-config>

    <flow name="credentialsInHeader">
        <httpn:request path="/resource" method="POST" config-ref="requestConfigWithOAuth2"/>
    </flow>

</mule>
