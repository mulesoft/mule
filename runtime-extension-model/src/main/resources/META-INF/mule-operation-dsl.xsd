<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/operation-dsl"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            targetNamespace="http://www.mulesoft.org/schema/mule/operation-dsl"
            elementFormDefault="qualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="http://www.mulesoft.org/schema/mule/core/current/mule.xsd"/>
    
    <xsd:element name="parameter" type="parameterType">
        <xsd:annotation>
            <xsd:documentation>
                Defines an operation parameter
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="parameterType">
        <xsd:complexContent>
            <xsd:extension base="mule:annotatedType">
                <xsd:sequence>
                    <xsd:element name="description" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                Detailed description of the parameter, it's semantics, usage and effects
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="mule:nonBlankString">
                    <xsd:annotation>
                        <xsd:documentation>
                            The parameter's name. It must be unique in the context of the owning operation.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="type" use="required" type="type">
                    <xsd:annotation>
                        <xsd:documentation>
                            The parameter's type. Can be either a standard type, a custom defined complex type or a reference to
                            a top level element defined in another extension or application.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="optional" default="false" type="xsd:boolean">
                    <xsd:annotation>
                        <xsd:documentation>
                            Whether the parameter is optional or required.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="expressionSupport" default="NOT_SUPPORTED" type="expressionSupportType">
                    <xsd:annotation>
                        <xsd:documentation>
                            The support level this parameter offers regarding expressions
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="summary" type="mule:nonBlankString">
                    <xsd:annotation>
                        <xsd:documentation>
                            A very brief overview about the parameter.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="configOverride" type="xsd:boolean" default="false">
                    <xsd:annotation>
                        <xsd:documentation>
                            Whether the parameter should act as a Config Override.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="def" type="operationDefType">
        <xsd:annotation>
            <xsd:documentation>
                Defines an operation
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="outputType">
        <xsd:annotation>
            <xsd:documentation>
                Defines a single output type. A component's output will typically be comprised of two of these definitions,
                one for the output payload and another one for the attributes (see: ResultType)
            </xsd:documentation>
        </xsd:annotation>
        <xsd:extension base="mule:annotatedType">
            <xsd:attribute name="type" type="type" use="required">
                <xsd:annotation>
                    <xsd:documentation>
                        The output payload's type.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:extension>
    </xsd:complexType>

    <xsd:complexType name="resultType">
        <xsd:annotation>
            <xsd:documentation>
                Defines a component's result. A Result is comprised of an output payload and an associated attributes
                object which contains metadata about it.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="payload-type" type="outputType">
                <xsd:annotation>
                    <xsd:documentation>
                        Type definition for the component's output payload
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="attributes-type" type="outputType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Type definition for the component's output attributes
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="operationDefType">
        <xsd:complexContent>
            <xsd:extension base="mule:annotatedType">
                <xsd:sequence>
                    <xsd:sequence>
                        <xsd:element name="description" type="xsd:string" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The operation's description
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                    <xsd:element name="parameters" type="type" maxOccurs="unbounded" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                The operation's input parameters.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="output" type="resultType" />
                    <xsd:group ref="mule:messageProcessorOrMixedContentMessageProcessor" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="mule:nonBlankString">
                    <xsd:annotation>
                        <xsd:documentation>
                            The operation's name. It must be unique in the context of the owning artifact.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="public" type="xsd:boolean" default="false">
                    <xsd:annotation>
                        <xsd:documentation>
                            Whether the operation is public and should be usable by third party components
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="summary" type="mule:nonBlankString">
                    <xsd:annotation>
                        <xsd:documentation>
                            A very brief overview about the operation.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType name="type">
        <xsd:union memberTypes="basicTypes mule:nonBlankString" />
    </xsd:simpleType>

    <xsd:simpleType name="basicTypes">
        <xsd:annotation>
            <xsd:documentation>
                The basic types for input parameters or component's output
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <!--            TODO: HOW TO REPRESENT ARRAYS?-->
            <xsd:enumeration value="STRING"/>
            <xsd:enumeration value="NUMBER"/>
            <xsd:enumeration value="STREAM"/>
            <xsd:enumeration value="DATE"/>
            <xsd:enumeration value="DATE_TIME"/>
            <xsd:enumeration value="OBJECT"/>
            <xsd:enumeration value="BOOLEAN"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="expressionSupportType">
        <xsd:annotation>
            <xsd:documentation>
                Enumerates the different types of support that a given component can provide regarding expressions
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="SUPPORTED"/>
            <xsd:enumeration value="NOT_SUPPORTED"/>
            <xsd:enumeration value="REQUIRED"/>
        </xsd:restriction>
    </xsd:simpleType>

</xsd:schema>
