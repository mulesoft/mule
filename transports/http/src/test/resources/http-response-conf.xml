<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:http="http://www.mulesoft.org/schema/mule/transport/http"
      xmlns:httpc="http://www.mulesoft.org/schema/mule/http"
      xmlns:transports="http://www.mulesoft.org/schema/mule/transports"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/transport/http http://www.mulesoft.org/schema/mule/transport/http/current/mule-transport-http.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
       http://www.mulesoft.org/schema/mule/transports http://www.mulesoft.org/schema/mule/transports/current/mule-transports.xsd">

    <configuration>
        <transports:config useTransportForUris="true"/>
    </configuration>

    <flow name="testResponseError" processingStrategy="synchronous">
        <http:inbound-endpoint address="http://localhost:${port1}/resources/error" exchange-pattern="request-response"/>
        <http:response-builder status="500" contentType="text/html">
            <parse-template location="error.html" />
        </http:response-builder>
        <echo-component/>
    </flow>

    <flow name="testResponseMove" processingStrategy="synchronous">
        <http:inbound-endpoint address="http://localhost:${port1}/resources/move" exchange-pattern="request-response"/>
        <http:response-builder status="301">
            <http:location value="http://localhost:9090/resources/moved"/>
        </http:response-builder>
        <echo-component/>
    </flow>

    <flow name="testResponseAll" processingStrategy="synchronous">
        <http:inbound-endpoint address="http://localhost:${port1}/resources/all" exchange-pattern="request-response"/>
        <http:response-builder status="404" contentType="text/html">
            <http:cache-control directive="public" noCache="true" mustRevalidate="true" maxAge="3600"/>
            <http:expires value="Thu, 01 Dec 2014 16:00:00 GMT" />
            <http:location value="http://localhost:9090"/>
            <http:set-cookie name="cookie1" value="value1" domain="localhost" path="/" expiryDate="Fri, 12 Dec 2014 17:00:00 GMT" secure="true"/>
            <http:set-cookie name="cookie2" value="value2" maxAge="1000"/>
            <http:header name="Cache-Control" value="no-transform"/>
            <http:header name="header1" value="value1"/>
            <http:header name="header2" value="value2"/>
            <custom-transformer class="org.mule.runtime.core.transformer.simple.SetPayloadTransformer">
                <spring:property name="value" value="Custom body"/>
            </custom-transformer>
        </http:response-builder>
        <echo-component/>
    </flow>

     <flow name="testResponseAllExpressions" processingStrategy="synchronous">
        <http:inbound-endpoint address="http://localhost:${port1}/resources/allExpressions" exchange-pattern="request-response"/>
        <http:response-builder status="#[message.inboundProperties.status]" contentType="#[message.inboundProperties.contentType]">
            <http:cache-control maxAge="#[message.inboundProperties.cacheControl]"/>
            <http:expires value="Thu, 01 Dec 2014 16:00:00 GMT" />
            <http:location value="http://localhost:9090"/>
            <http:set-cookie name="#[message.inboundProperties.cookie1]" value="#[message.inboundProperties.value1]" domain="#[message.inboundProperties.domain]" path="#[message.inboundProperties.path]" expiryDate="#[message.inboundProperties.expiryDate]" secure="#[message.inboundProperties.secure]"/>
            <http:set-cookie name="#[message.inboundProperties.cookie2]" value="#[message.inboundProperties.value2]" maxAge="#[message.inboundProperties.maxAge]"/>
            <http:header name="#[message.inboundProperties.header1]" value="#[message.inboundProperties.value1]"/>
            <http:header name="#[message.inboundProperties.header2]" value="#[message.inboundProperties.value2]"/>
        </http:response-builder>
        <echo-component/>
    </flow>


    <!-- Flow that uses the header element inside the response-builder element of the HTTP module to check
         that there is no conflict with the header of the response-builder of the transport when parsing. -->

    <httpc:listener-config name="httpConfig" host="localhost" port="${port2}" />

    <flow name="httpListenerFlowNestedBuilder">
        <httpc:listener config-ref="httpConfig" path="/nested">
            <httpc:response-builder>
                <httpc:header headerName="testHeader" value="testValue" />
            </httpc:response-builder>
        </httpc:listener>
        <echo-component />
    </flow>

    <flow name="httpListenerFlowNestedErrorBuilder">
        <httpc:listener config-ref="httpConfig" path="/nestedError">
            <httpc:error-response-builder statusCode="200">
                <httpc:header headerName="testHeader" value="testValue" />
            </httpc:error-response-builder>
        </httpc:listener>
        <test:component throwException="true" />
    </flow>

    <httpc:response-builder name="globalResponseBuilder">
        <httpc:header headerName="testHeader" value="testValue" />
    </httpc:response-builder>

    <flow name="httpListenerFlowGlobalBuilder">
        <httpc:listener config-ref="httpConfig" path="/global">
            <httpc:response-builder>
                <httpc:builder ref="globalResponseBuilder" />
            </httpc:response-builder>
        </httpc:listener>
        <echo-component />
    </flow>

    <flow name="httpListenerFlowGlobalErrorBuilder">
        <httpc:listener config-ref="httpConfig" path="/globalError">
            <httpc:error-response-builder statusCode="200">
                <httpc:builder ref="globalResponseBuilder" />
            </httpc:error-response-builder>
        </httpc:listener>
        <test:component throwException="true" />
    </flow>


</mule>