<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/rmi"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:schemadoc="http://www.mulesoft.org/schema/mule/schemadoc"
            xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            targetNamespace="http://www.mulesoft.org/schema/mule/rmi"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="http://www.mulesoft.org/schema/mule/core/3.9/mule.xsd" />
    <xsd:import namespace = "http://www.mulesoft.org/schema/mule/schemadoc"
                schemaLocation = "http://www.mulesoft.org/schema/mule/schemadoc/3.9/mule-schemadoc.xsd"/>

    <xsd:annotation>
            <xsd:documentation>The RMI transport can be used to send and receive Mule events over JRMP. This transport has a dispatcher that invokes an RMI method and a polling receiver that repeatedly does the same.
            </xsd:documentation>
        <xsd:appinfo>
            <schemadoc:short-name>RMI</schemadoc:short-name>
            <schemadoc:page-title>RMI Transport</schemadoc:page-title>
            <schemadoc:transport-features receiveEvents="true" dispatchEvents="true"
        requestEvents="true" transactions="false" streaming="false">
                <schemadoc:MEPs supported="one-way, request-response" default="request-response"/>
            </schemadoc:transport-features>
        </xsd:appinfo>
    </xsd:annotation>

    <xsd:element name="connector" type="rmiConnectorType" substitutionGroup="mule:abstract-connector">
        <xsd:annotation>
            <xsd:documentation>
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="rmiConnectorType">
        <xsd:complexContent>
            <xsd:extension base="mule:jndiConnectorType">
                <xsd:attribute name="pollingFrequency" type="mule:substitutableLong">
                    <xsd:annotation>
                        <xsd:documentation>
                            Period (ms) between polling connections.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="securityManager-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            Bean reference to the security manager that should be used.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="securityPolicy" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The security policy (file name) used to enable connections.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="serverClassName" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The target class name.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="serverCodebase" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            <!-- is this correct?! serverCodebase is an odd name to identify a method! -->
                            The target method.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="inbound-endpoint" type="inboundEndpointType" substitutionGroup="mule:abstract-inbound-endpoint"/>
    <xsd:complexType name="inboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:inboundEndpointType">
                <xsd:attributeGroup ref="addressAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="outbound-endpoint" type="outboundEndpointType" substitutionGroup="mule:abstract-outbound-endpoint"/>
    <xsd:complexType name="outboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:outboundEndpointType">
                <xsd:attributeGroup ref="addressAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="endpoint" type="globalEndpointType" substitutionGroup="mule:abstract-global-endpoint"/>
    <xsd:complexType name="globalEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:globalEndpointType">
                <xsd:attributeGroup ref="addressAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:attributeGroup name="addressAttributes">
        <xsd:attribute name="host" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The endpoint host name.
                </xsd:documentation>
            </xsd:annotation>
         </xsd:attribute>
        <xsd:attribute name="port" type="mule:substitutablePortNumber">
            <xsd:annotation>
                <xsd:documentation>
                    The port number to use when a connection is made.
                </xsd:documentation>
            </xsd:annotation>
         </xsd:attribute>
        <xsd:attribute name="object" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The class name of the object that is being invoked over RMI.
                </xsd:documentation>
            </xsd:annotation>
         </xsd:attribute>
        <xsd:attribute name="method" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The name of the method to invoke.
                </xsd:documentation>
            </xsd:annotation>
         </xsd:attribute>
        <xsd:attribute name="methodArgumentTypes" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    Comma separated argument types of the method to invoke. For example, "java.lang.String".
                </xsd:documentation>
            </xsd:annotation>
         </xsd:attribute>
    </xsd:attributeGroup>

</xsd:schema>
