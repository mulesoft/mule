<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/servlet"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            xmlns:schemadoc="http://www.mulesoft.org/schema/mule/schemadoc"
            xmlns:http="http://www.mulesoft.org/schema/mule/http"
            targetNamespace="http://www.mulesoft.org/schema/mule/servlet"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="http://www.mulesoft.org/schema/mule/core/3.9/mule.xsd" />
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/http"
                schemaLocation="http://www.mulesoft.org/schema/mule/http/3.9/mule-http.xsd"/>
    <xsd:import namespace = "http://www.mulesoft.org/schema/mule/schemadoc"
                schemaLocation = "http://www.mulesoft.org/schema/mule/schemadoc/3.9/mule-schemadoc.xsd"/>
    
   <xsd:annotation>
        <xsd:documentation>
            The Servlet transport allows Mule components to listen for events received via a servlet request. 
        </xsd:documentation>
        <xsd:appinfo>
            <schemadoc:short-name>Servlet</schemadoc:short-name>
            <schemadoc:page-title>Servlet Transport</schemadoc:page-title>
            <schemadoc:transport-features receiveEvents="true" dispatchEvents="true"
                                          requestEvents="true"
                                          transactions="false" streaming="true">
                <schemadoc:MEPs supported="request-response" default="request-response"/>                
            </schemadoc:transport-features>
        </xsd:appinfo>
    </xsd:annotation>

    <xsd:element name="connector" type="servletConnectorType" substitutionGroup="mule:abstract-connector">
        <xsd:annotation>
            <xsd:documentation>
                Servlet connector is a channel adapter between Mule and a servlet engine. It allows the MuleReceiverServlet to look up components interested in requests it receives via the servlet container.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="servletConnectorType">
        <xsd:complexContent>
            <xsd:extension base="mule:connectorType">
                <xsd:attribute name="servletUrl">
                    <xsd:annotation>
                        <xsd:documentation>
                            The real URL on which the servlet container is bound. If this is not set, the WSDL may not be generated correctly when using CXF bound to a servlet endpoint.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="useCachedHttpServletRequest" default="false" type="mule:substitutableBoolean">
                    <xsd:annotation>
                        <xsd:documentation>
                            Whether to use a cached http servlet request
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="inbound-endpoint" type="inboundEndpointType" substitutionGroup="mule:abstract-inbound-endpoint"/>
    <xsd:complexType name="inboundEndpointType">
        <xsd:complexContent>
            <!-- 
                The only valid exchange-pattern is request-response which is the default. No need to 
                make  the exchange-pattern attribute configurable.  
            -->
            <xsd:extension base="mule:inboundEndpointTypeWithoutExchangePattern">
                <xsd:attribute name="path" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            the servlett path to bind the service to.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="endpoint" type="globalEndpointType" substitutionGroup="mule:abstract-global-endpoint"/>
    <xsd:complexType name="globalEndpointType">
        <xsd:complexContent>
            <!-- 
                The only valid exchange-pattern is request-response which is the default. No need to 
                make  the exchange-pattern attribute configurable.  
            -->
            <xsd:extension base="mule:globalEndpointTypeWithoutExchangePattern">
                <xsd:attribute name="path" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            the servlett path to bind the service to.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="http-request-to-parameter-map" type="mule:abstractTransformerType"
                 substitutionGroup="mule:abstract-transformer">
        <xsd:annotation>
            <xsd:documentation>
            The &lt;http-request-to-parameter-map&gt; transformer returns a simple Map of the parameters sent with the HTTP Request. If the same parameter is given more than once, only the first value for it will be in the Map.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="http-request-to-input-stream" type="mule:abstractTransformerType"
                 substitutionGroup="mule:abstract-transformer">
        <xsd:annotation>
            <xsd:documentation>
            The &lt;http-request-to-input-stream&gt; transformer converts an HttpServletRequest into an InputStream.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="http-request-to-byte-array" type="mule:abstractTransformerType"
                 substitutionGroup="mule:abstract-transformer">
        <xsd:annotation>
            <xsd:documentation>
            The &lt;http-request-to-byte-array&gt; transformer converts an HttpServletRequest into an array of bytes by extracting the payload of the request.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
</xsd:schema>
