<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/tls"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            xmlns:schemadoc="http://www.mulesoft.org/schema/mule/schemadoc"
            xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp"
            targetNamespace="http://www.mulesoft.org/schema/mule/tls"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="http://www.mulesoft.org/schema/mule/core/3.9/mule.xsd" />
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/tcp"
                schemaLocation="http://www.mulesoft.org/schema/mule/tcp/3.9/mule-tcp.xsd"/>
    <xsd:import namespace = "http://www.mulesoft.org/schema/mule/schemadoc"
                schemaLocation = "http://www.mulesoft.org/schema/mule/schemadoc/3.9/mule-schemadoc.xsd"/>

    <xsd:annotation>
        <xsd:documentation>
        The SSL transport can be used for secure socket communication using SSL or TLS.

        The Javadoc for this transport can be found {javadoc:mule/transport/ssl}here{javadoc}. The Javadoc for the TLS connector can be found {javadoc:mule/transport/ssl|TlsConnector}here{javadoc}.
        </xsd:documentation>    
    <xsd:appinfo>
        <schemadoc:short-name>TLS</schemadoc:short-name>
        <schemadoc:page-title>TLS Connector</schemadoc:page-title>
        <schemadoc:artifact-name>ssl</schemadoc:artifact-name>
        <schemadoc:transport-features receiveEvents="true" dispatchEvents="true"
                                          requestEvents="true"
                                          transactions="false" streaming="true">
            <schemadoc:MEPs supported="one-way, request-response" default="request-response"/>
        </schemadoc:transport-features>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:element name="connector" substitutionGroup="mule:abstract-connector">
        <xsd:annotation>
            <xsd:documentation>
                The TLS connector extends the TCP connector.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="tcp:tcpConnectorType">
                    <xsd:sequence>
                        <xsd:element minOccurs="0" maxOccurs="1" name="client" type="mule:tlsClientKeyStoreType">
                            <xsd:annotation>
                                <xsd:documentation>
                                The client key store. TLS connections are made on behalf of an entity, which can be anonymous or identified by a certificate. This interface specifies how a keystore can be used to provide the certificates (and associated private keys) necessary for identification. 
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element minOccurs="0" maxOccurs="1" name="key-store" type="mule:tlsKeyStoreType">
                            <xsd:annotation>
                                <xsd:documentation>
                                The key store information, including location, key store type, and algorithm.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element minOccurs="0" maxOccurs="1" name="server" type="mule:tlsServerTrustStoreType">
                            <xsd:annotation>
                                <xsd:documentation>
                                The server trust store. TLS connections are made to trusted systems - the public certificates of trusted systems are stored in a keystore (called a trust store) and used to verify that the connection made to a remote system really is the expected identity.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element minOccurs="0" maxOccurs="1" name="protocol-handler" type="mule:tlsProtocolHandler">
                            <xsd:annotation>
                                <xsd:documentation>
                                Configures the global Java protocol handler by setting the java.protocol.handler.pkgs system property.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="inbound-endpoint" type="inboundEndpointType" substitutionGroup="mule:abstract-inbound-endpoint"/>
    <xsd:complexType name="inboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:inboundEndpointType">
                <xsd:attributeGroup ref="addressAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="outbound-endpoint" type="outboundEndpointType" substitutionGroup="mule:abstract-outbound-endpoint"/>
    <xsd:complexType name="outboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:outboundEndpointType">
                <xsd:attributeGroup ref="addressAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="endpoint" type="globalEndpointType" substitutionGroup="mule:abstract-global-endpoint"/>
    <xsd:complexType name="globalEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:globalEndpointType">
                <xsd:attributeGroup ref="addressAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:attributeGroup name="addressAttributes">
        <xsd:attribute name="host" type="xsd:string"/>
        <xsd:attribute name="port" type="mule:substitutablePortNumber"/>
    </xsd:attributeGroup>


    <xsd:element name="context" type="tlsContextType" substitutionGroup="mule:abstract-shared-extension">
        <xsd:annotation>
            <xsd:documentation>
                Reusable configuration element for TLS. A TLS context optionally defines a key store and a trust store.
                The key store contains the private and public keys of this server/client. The trust store contains
                certificates of the trusted servers/clients.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="trust-store" type="tlsContextTrustStoreType">
        <xsd:annotation>
            <xsd:documentation>
                Trust store configuration. If used client side, the trust store contains the certificates of the
                trusted servers. If used server side, it contains the certificates of the trusted clients.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="key-store" type="tlsContextKeyStoreType">
        <xsd:annotation>
            <xsd:documentation>
                Key store configuration. The key store contains the keys of this server/client.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="tlsContextType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractExtensionType">
                <xsd:sequence>
                    <xsd:choice minOccurs="1">
                        <xsd:sequence>
                            <xsd:element ref="trust-store" minOccurs="1" maxOccurs="1" />
                            <xsd:element ref="key-store" minOccurs="0" maxOccurs="1" />
                        </xsd:sequence>
                        <xsd:sequence>
                            <xsd:element ref="trust-store" minOccurs="0" maxOccurs="1" />
                            <xsd:element ref="key-store" minOccurs="1" maxOccurs="1" />
                        </xsd:sequence>
                        <xsd:sequence>
                            <xsd:element ref="trust-store" minOccurs="1" maxOccurs="1" />
                            <xsd:element ref="key-store" minOccurs="1" maxOccurs="1" />
                        </xsd:sequence>
                    </xsd:choice>
                    <xsd:element name="revocation-check" type="rcWrapperElement" minOccurs="0" maxOccurs="1">
                        <xsd:annotation>
                            <xsd:documentation>
                                Enable certificate revocation checking.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The name of this context, so that it can be referenced from other configuration elements.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="enabledProtocols" type="mule:substitutableString" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            A comma separated list of protocols enabled for this context.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="enabledCipherSuites" type="mule:substitutableString" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            A comma separated list of cipher suites enabled for this context.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>


    <xsd:complexType name="tlsContextTrustStoreType">
        <xsd:attribute name="path" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="password" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The password used to protect the trust store.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="type" type="mule:keystoreType">
            <xsd:annotation>
                <xsd:documentation>
                    The type of store used.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="algorithm" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The algorithm used by the trust store.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="insecure" type="mule:substitutableBoolean" default="false">
            <xsd:annotation>
                <xsd:documentation>
                    If true, no certificate validations will be performed.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>


    <xsd:complexType name="tlsContextKeyStoreType">
        <xsd:attribute name="path" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The location (which will be resolved relative to the current classpath and file system, if possible) of the key store.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="type" type="mule:keystoreType">
            <xsd:annotation>
                <xsd:documentation>
                    The type of key store used.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="alias" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    When the key store contains many private keys, this attribute indicates the alias of the key that
                    should be used. If not defined, the first key in the file will be used by default.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="keyPassword" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The password used to protect the private key.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="password" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The password used to protect the key store.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="algorithm" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The algorithm used by the key store.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="rcWrapperElement">
        <xsd:choice minOccurs="1" maxOccurs="1">
            <xsd:element name="standard-revocation-check" type="rcStandardType">
                <xsd:annotation>
                    <xsd:documentation>
                        Standard Java certificate revocation checking.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="crl-file" type="rcCrlFileType">
                <xsd:annotation>
                    <xsd:documentation>
                        Revocation checking from a local CRL (Certificate Revocation List) file.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="custom-ocsp-responder" type="rcCustomOcspType">
                <xsd:annotation>
                    <xsd:documentation>
                        Revocation checking against a custom OCSP provider.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
    </xsd:complexType>

    <xsd:complexType name="rcStandardType">
        <xsd:attribute name="onlyEndEntities" type="xsd:boolean">
            <xsd:annotation>
                <xsd:documentation>
                    Only check the revocation status of end-entity certificates. Defaults to false.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="preferCrls" type="xsd:boolean">
            <xsd:annotation>
                <xsd:documentation>
                    Prefer CRLs to OCSP. The default behavior is to prefer OCSP. Defaults to false.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="noFallback" type="xsd:boolean">
            <xsd:annotation>
                <xsd:documentation>
                    Disable the fallback mechanism (the alternative algorithm, for instance if CRLs are
                    selected it would be OCSP). Defaults to false.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="softFail" type="xsd:boolean">
            <xsd:annotation>
                <xsd:documentation>
                    Allow revocation check to succeed if the revocation status cannot be determined because of
                    network or server errors. This is a possible security risk. Defaults to false.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="rcCrlFileType">
        <xsd:attribute name="path" type="mule:substitutableString">
            <xsd:annotation>
                <xsd:documentation>
                    The path to a CRL (Certificate Revocation List) file to be used for this trust store.
                    A certificate mentioned there will not be accepted for authentication.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="rcCustomOcspType">
        <xsd:attribute name="url" type="mule:substitutableString">
            <xsd:annotation>
                <xsd:documentation>
                    URL that identifies the location of the OCSP responder. This is used instead of the corresponding field
                    in the certificate extension.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="certAlias" type="mule:substitutableString">
            <xsd:annotation>
                <xsd:documentation>
                    Alias of the certificate that signs the OCSP response, instead of the corresponding CA.
                    Must be present in the trust store.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
</xsd:schema>
