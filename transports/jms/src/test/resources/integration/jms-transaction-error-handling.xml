<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:context="http://www.springframework.org/schema/context"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:amq="http://activemq.apache.org/schema/core"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
    http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
    http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
    http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
    http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
    http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

  <flow name="queue-usescase-with-exception-handler">
    <jms:inbound-endpoint connector-ref="connector1" queue="test-queue-in">
      <jms:transaction action="BEGIN_OR_JOIN" />
    </jms:inbound-endpoint>
    <jms:outbound-endpoint connector-ref="connector1" queue="queued-before-flow-transformer">
      <jms:transaction action="BEGIN_OR_JOIN" />
    </jms:outbound-endpoint>
    <append-string-transformer message=", world!"/>
    <custom-transformer class="org.mule.transport.jms.FlowTransformer"/>
    <jms:outbound-endpoint connector-ref="connector1" queue="test-queue-out">
      <jms:transaction action="BEGIN_OR_JOIN" />
    </jms:outbound-endpoint>
    <catch-exception-strategy>
      <set-payload value="An error occurred!"/>
      <custom-transformer class="org.mule.transport.jms.ErrorTransformer"/>
      <jms:outbound-endpoint connector-ref="connector1" queue="test-queue-error">
        <jms:transaction action="BEGIN_OR_JOIN" />
      </jms:outbound-endpoint>
    </catch-exception-strategy>
  </flow>

  <flow name="queue-usescase">
    <jms:inbound-endpoint connector-ref="connector1" queue="test-queue-in-simple">
      <jms:transaction action="BEGIN_OR_JOIN" />
    </jms:inbound-endpoint>
    <jms:outbound-endpoint connector-ref="connector1" queue="queued-before-flow-transformer">
      <jms:transaction action="BEGIN_OR_JOIN" />
    </jms:outbound-endpoint>
    <append-string-transformer message=", world!"/>
    <custom-transformer class="org.mule.transport.jms.FlowTransformer"/>
    <jms:outbound-endpoint connector-ref="connector1" queue="test-queue-out-simple">
      <jms:transaction action="BEGIN_OR_JOIN" />
    </jms:outbound-endpoint>
  </flow>

  <flow name="queue-flowref-usescase">
    <jms:inbound-endpoint queue="test-queue-in-flowref" connector-ref="connector1">
      <jms:transaction action="BEGIN_OR_JOIN" />
    </jms:inbound-endpoint>
    <jms:outbound-endpoint connector-ref="connector1" queue="queued-before-flow-transformer">
      <jms:transaction action="BEGIN_OR_JOIN" />
    </jms:outbound-endpoint>
    <append-string-transformer message=", world!"/>
    <flow-ref name="flowref-usecase"/>
    <jms:outbound-endpoint queue="test-queue-out-simple" connector-ref="connector1">
      <jms:transaction action="BEGIN_OR_JOIN" />
    </jms:outbound-endpoint>
  </flow>

  <flow name="flowref-usecase">
    <custom-transformer class="org.mule.transport.jms.FlowTransformer"/>
    <catch-exception-strategy>
      <set-payload value="An error occurred!"/>
      <custom-transformer class="org.mule.transport.jms.ErrorTransformer"/>
      <jms:outbound-endpoint connector-ref="connector1" queue="test-queue-error">
        <jms:transaction action="BEGIN_OR_JOIN" />
      </jms:outbound-endpoint>
    </catch-exception-strategy>
  </flow>

  <!-- Test flows -->

  <flow name="write-to-queue">
    <vm:inbound-endpoint exchange-pattern="one-way" path="in" />
    <jms:outbound-endpoint connector-ref="connector1" queue="test-queue-in" />
  </flow>

  <flow name="write-to-flowref-queue">
    <vm:inbound-endpoint exchange-pattern="one-way" path="in-flowref" />
    <jms:outbound-endpoint connector-ref="connector1" queue="test-queue-in-flowref" />
  </flow>

  <flow name="read-from-out-queue">
    <jms:inbound-endpoint connector-ref="connector1" queue="test-queue-out" />
    <vm:outbound-endpoint exchange-pattern="one-way" path="out"/>
  </flow>

  <flow name="read-from-error-queue">
    <jms:inbound-endpoint connector-ref="connector1" queue="test-queue-error" />
    <set-property propertyName="error" value="#[message.inboundProperties.error]"/>
    <vm:outbound-endpoint exchange-pattern="one-way" path="error"/>
  </flow>

  <flow name="read-from-dead-letter-queue">
    <jms:inbound-endpoint connector-ref="connector1" queue="dlq" />
    <vm:outbound-endpoint exchange-pattern="one-way" path="dead-letter"/>
  </flow>

  <flow name="write-to-queue-simple">
    <vm:inbound-endpoint exchange-pattern="one-way" path="in-simple"/>
    <jms:outbound-endpoint connector-ref="connector1" queue="test-queue-in-simple" />
  </flow>

  <flow name="read-from-out-queue-simple">
    <jms:inbound-endpoint connector-ref="connector1" queue="test-queue-out-simple" />
    <vm:outbound-endpoint exchange-pattern="one-way" path="out-simple"/>
  </flow>

  <flow name="transacted-queue">
    <jms:inbound-endpoint connector-ref="connector1" queue="queued-before-flow-transformer" />
    <vm:outbound-endpoint exchange-pattern="one-way" path="check-transacted" />
  </flow>

</mule>
