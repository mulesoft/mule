<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/jdbc"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:mule="http://www.mulesoft.org/schema/mule/core"
        xmlns:schemadoc="http://www.mulesoft.org/schema/mule/schemadoc"
    targetNamespace="http://www.mulesoft.org/schema/mule/jdbc"
    elementFormDefault="qualified" attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
        schemaLocation="http://www.mulesoft.org/schema/mule/core/3.9/mule.xsd"/>
    <xsd:import namespace = "http://www.mulesoft.org/schema/mule/schemadoc"
                schemaLocation = "http://www.mulesoft.org/schema/mule/schemadoc/3.9/mule-schemadoc.xsd"/>

    <xsd:annotation>
            <xsd:documentation>The JDBC transport allows data to be retrieved from and written to any database that supports a JDBC driver. It also supports invoking stored precedures.
            </xsd:documentation>
            <xsd:appinfo>
                <schemadoc:short-name>JDBC</schemadoc:short-name>
                <schemadoc:page-title>JDBC Transport</schemadoc:page-title>
                <schemadoc:transport-features receiveEvents="true" dispatchEvents="true"
                        requestEvents="true" transactions="true" streaming="false" transactionTypes="local, XA"
                        retries="true">
                    <schemadoc:MEPs supported="one-way, request-response" default="one-way"/>
                </schemadoc:transport-features>
            </xsd:appinfo>
    </xsd:annotation>

    <xsd:element name="connector" type="jdbcConnectorType" substitutionGroup="mule:abstract-connector"/>

    <xsd:complexType name="jdbcConnectorType">
        <xsd:annotation>
            <xsd:documentation>
                            The JDBC connector is used to configure the shared behavior for JDBC endpoints that reference the connector. DataSources, Queries, and Polling Intervals are some of the key properties configured on the JDBC connector.
                        </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="mule:transactedConnectorType">
                <xsd:sequence>
                    <xsd:element ref="abstract-sqlStatementStrategyFactory" minOccurs="0" maxOccurs="1">
                        <xsd:annotation>
                            <xsd:documentation>The factory that determines the
                execution strategy based on the SQL provided.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="abstract-query" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>Defines a set of queries. Each query has a key
                                and a value (SQL statement). Queries are later referenced by
                                key.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="pollingFrequency"
                    type="mule:substitutableLong">
                    <xsd:annotation>
                        <xsd:documentation>
                        The delay in milliseconds that will be used during two subsequent polls to the database. This is only applied to queries configured on inbound endpoints.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="dataSource-ref" type="xsd:string"
                    use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                        Reference to the JDBC DataSource object. This object is typically created using Spring. When using XA transactions, an XADataSource object must be provided.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="queryRunner-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                        Reference to the QueryRunner object, which is the object that actually runs the Query. This object is typically created using Spring. Default is org.apache.commons.dbutils.QueryRunner.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="resultSetHandler-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                        Reference to the ResultSetHandler object, which is the object that determines which java.sql.ResultSet gets handled. This object is typically created using Spring. Default is org.apache.commons.dbutils.handlers.MapListHandler, which steps through the ResultSet and stores records as Map objects on a List.
                                                </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="transactionPerMessage" type="mule:substitutableBoolean">
                    <xsd:annotation>
                        <xsd:documentation>
                        Whether each database record should be received in a separate transaction. If false, there will be a single transaction for the entire result set. Default is true.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="queryTimeout" type="mule:substitutableInt" default="-1">
                    <xsd:annotation>
                        <xsd:documentation>
                        The timeout in seconds that will be used as a query timeout for the SQL statement
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="inbound-endpoint" type="inboundEndpointType"
        substitutionGroup="mule:abstract-inbound-endpoint">
        <xsd:annotation>
            <xsd:documentation>
                Receives or fetches data from a database. You can reference SQL select statements or call stored procedures on inbound endpoints. Statements on the inbound endpoint get invoked periodically according to the pollingInterval. Statements that contain an insert, update, or delete are not allowed.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="inboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:inboundEndpointWithXaType">
                <xsd:sequence>
                    <xsd:element ref="abstract-query" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attributeGroup ref="addressAttributes"/>
                <xsd:attribute name="pollingFrequency" type="mule:substitutableLong">
                        <xsd:annotation>
                                <xsd:documentation>The delay in milliseconds that will be used during two subsequent polls to the database.</xsd:documentation>
                        </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="queryTimeout" type="mule:substitutableInt" default="-1">
                    <xsd:annotation>
                        <xsd:documentation>
                        The timeout in seconds that will be used as a query timeout for the SQL statement
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="outbound-endpoint" type="outboundEndpointType"
        substitutionGroup="mule:abstract-outbound-endpoint">
        <xsd:annotation>
            <xsd:documentation>
                You can reference any SQL statement or call a stored procedure on outbound endpoints. Statements on the outbound endpoint get invoked synchronously. SQL select statements or stored procedures may return output that is handled by the ResultSetHandler and then attached to the message as the payload.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="outboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:outboundEndpointWithXaType">
                <xsd:sequence>
                    <xsd:element ref="abstract-query" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attributeGroup ref="addressAttributes"/>
                <xsd:attribute name="queryTimeout" type="mule:substitutableInt" default="-1">
                    <xsd:annotation>
                        <xsd:documentation>
                        The timeout in seconds that will be used as a query timeout for the SQL statement
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="endpoint" type="globalEndpointType"
        substitutionGroup="mule:abstract-global-endpoint"/>
    <xsd:complexType name="globalEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:globalEndpointWithXaType">
                <xsd:sequence>
                    <xsd:element ref="abstract-query" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attributeGroup ref="addressAttributes"/>
                <xsd:attribute name="pollingFrequency" type="mule:substitutableLong">
                        <xsd:annotation>
                                <xsd:documentation>The delay in milliseconds that will be used during two subsequent polls to the database.</xsd:documentation>
                        </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="queryTimeout" type="mule:substitutableInt" default="-1">
                    <xsd:annotation>
                        <xsd:documentation>
                        The timeout in seconds that will be used as a query timeout for the SQL statement
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- Define a type hierarchy so that the EE transport can re-define the "query" element. -->
    <xsd:element name="abstract-query" abstract="true" type="abstractQueryType"/>
    <xsd:complexType name="abstractQueryType">
        <xsd:complexContent>
            <xsd:extension base="mule:keyValueType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="query" type="queryType" substitutionGroup="abstract-query">
        <xsd:annotation>
            <xsd:documentation>
                Assigns a name (key) to a query (value). Queries
                are then referenced by key, such as jdbc://myQuery for
                <![CDATA[<jdbc:query key="myQuery" value="select * from table"/>]]>
                </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="queryType">
        <xsd:complexContent>
            <xsd:extension base="abstractQueryType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:attributeGroup name="addressAttributes">
        <xsd:attribute name="queryKey" type="xsd:string">
                <xsd:annotation>
                        <xsd:documentation>The key of the query to use.</xsd:documentation>
                </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>

    <xsd:element name="transaction" type="transactionType" substitutionGroup="mule:abstract-transaction">
        <xsd:annotation>
            <xsd:documentation>
                            Standard Mule transaction configuration. See [Transaction Management] for usage details.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="transactionType">
        <xsd:complexContent>
            <xsd:extension base="mule:baseTransactionType"/>
        </xsd:complexContent>
    </xsd:complexType>


    <!--
        sqlStatementStrategyFactory element
    -->
    <xsd:element name="abstract-sqlStatementStrategyFactory" abstract="true" type="abstractSqlStatementStrategyFactoryType"/>
    <xsd:complexType name="abstractSqlStatementStrategyFactoryType"/>

    <xsd:element name="sqlStatementStrategyFactory" type="sqlStatementStrategyFactoryType" substitutionGroup="abstract-sqlStatementStrategyFactory">
        <xsd:annotation>
            <xsd:documentation>
                Override the default SqlStatementStrategyFactory. Determines the
                execution strategy based on the SQL provided.</xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="sqlStatementStrategyFactoryType">
        <xsd:complexContent>
            <xsd:extension base="abstractSqlStatementStrategyFactoryType">
                <xsd:attributeGroup ref="sqlStatementStrategyFactoryAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:attributeGroup name="sqlStatementStrategyFactoryAttributes">
        <xsd:attribute name="class" type="mule:substitutableClass" use="optional"/>
        <xsd:attribute name="ref" use="optional" type="xsd:string"/>
    </xsd:attributeGroup>

    <xsd:element name="object-store" type="jdbcObjectStoreType" substitutionGroup="mule:abstract-object-store"/>

    <xsd:complexType name="jdbcObjectStoreType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractObjectStoreType">
                <xsd:sequence>
                    <xsd:element ref="mule:abstract-transaction" minOccurs="0" maxOccurs="1"/>
                </xsd:sequence>
                <xsd:attribute name="jdbcConnector-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The reference to the jdbcConnector
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="name" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The name of the store
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="insertQueryKey" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The key for the insert query in the connector
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="selectQueryKey" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The key for the select query in the connector
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="deleteQueryKey" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The key for the delete query in the connector
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="clearQueryKey" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The key for the clear query in the connector. Unlike the others, this operation won't take parameters
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="baseDataSourceType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractExtensionType">
                <xsd:attribute name="name" type="mule:substitutableName" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            Identifies the pool so that the connector can reference it.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="url" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The JDBC URL that is used for connecting the database.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="loginTimeout" type="xsd:int" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Maximum time in seconds that this data source will wait while attempting to connect to a database.  A value of zero specifies that the timeout is the default system timeout if there is one; otherwise, it specifies that there is no timeout.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="transactionIsolation" default="UNSPECIFIED">
                    <xsd:annotation>
                        <xsd:documentation>
                            The transaction isolation level to set on the driver when connecting the database.
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:NMTOKEN">
                            <xsd:enumeration value="UNSPECIFIED"/>
                            <xsd:enumeration value="NONE"/>
                            <xsd:enumeration value="READ_COMMITTED"/>
                            <xsd:enumeration value="READ_UNCOMMITTED"/>
                            <xsd:enumeration value="REPEATABLE_READ"/>
                            <xsd:enumeration value="SERIALIZABLE"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="abstractDataSourceMandatoryUserAndPasswordType">
        <xsd:complexContent>
            <xsd:extension base="baseDataSourceType">
                <xsd:attribute name="user" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The user that is used for authentication against the database.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="password" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The password that is used for authentication against the database.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="abstractDataSourceOptionalUserAndPasswordType">
        <xsd:complexContent>
            <xsd:extension base="baseDataSourceType">
                <xsd:attribute name="user" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The user that is used for authentication against the database.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="password" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The password that is used for authentication against the database.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="oracle-data-source" type="oracleDataSourceType" substitutionGroup="mule:abstract-extension"/>

    <xsd:complexType name="oracleDataSourceType">
        <xsd:complexContent>
            <xsd:extension base="abstractDataSourceMandatoryUserAndPasswordType">
                <xsd:attribute name="host" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the host part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="port" type="xsd:int" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the port part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="instance" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the instance part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="mysql-data-source" type="mysqlDataSourceType" substitutionGroup="mule:abstract-extension"/>

    <xsd:complexType name="mysqlDataSourceType">
        <xsd:complexContent>
            <xsd:extension base="abstractDataSourceMandatoryUserAndPasswordType">
                <xsd:attribute name="database" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The name of the database. Must be configured unless a full JDBC URL is configured.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="host" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the host part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="port" type="xsd:int" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the port part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="postgresql-data-source" type="postgresqlDataSourceType" substitutionGroup="mule:abstract-extension"/>

    <xsd:complexType name="postgresqlDataSourceType">
        <xsd:complexContent>
            <xsd:extension base="abstractDataSourceMandatoryUserAndPasswordType">
                <xsd:attribute name="database" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The name of the database. Must be configured unless a full JDBC URL is configured.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="host" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the host part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="port" type="xsd:int" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the port part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="derby-data-source" type="derbyDataSourceType" substitutionGroup="mule:abstract-extension"/>

    <xsd:complexType name="derbyDataSourceType">
        <xsd:complexContent>
            <xsd:extension base="abstractDataSourceOptionalUserAndPasswordType">
                <xsd:attribute name="database" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The name of the database. Must be configured unless a full JDBC URL is configured.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="create" type="xsd:boolean" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            If true, the database will be created upon first access to the database. See <a href="http://db.apache.org/derby/docs/10.6/ref/rrefattrib26867.html">the derby documentation</a>.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="db2-data-source" type="db2DataSourceType" substitutionGroup="mule:abstract-extension"/>

    <xsd:complexType name="db2DataSourceType">
        <xsd:complexContent>
            <xsd:extension base="abstractDataSourceMandatoryUserAndPasswordType">
                <xsd:attribute name="host" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the host part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="port" type="xsd:int" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the port part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="database" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the database part of the JDBC URL (and leave the rest of the default JDBC URL untouched). When no server/port are defined, database points to a native component and requires native libraries.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="mssql-data-source" type="mssqlDataSourceType" substitutionGroup="mule:abstract-extension"/>

    <xsd:complexType name="mssqlDataSourceType">
        <xsd:complexContent>
            <xsd:extension base="abstractDataSourceMandatoryUserAndPasswordType">
                <xsd:attribute name="host" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the host part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="port" type="xsd:int" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the port part of the JDBC URL (and leave the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="instance" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Allows to configure just the instance part of the JDBC URL (and leave the rest of the default JDBC URL untouched). If not specified, the default instance is used
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
</xsd:schema>
