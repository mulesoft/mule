<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/jetty"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            xmlns:http="http://www.mulesoft.org/schema/mule/http"
            xmlns:schemadoc="http://www.mulesoft.org/schema/mule/schemadoc"
            targetNamespace="http://www.mulesoft.org/schema/mule/jetty"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="http://www.mulesoft.org/schema/mule/core/3.9/mule.xsd"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/http"
                schemaLocation="http://www.mulesoft.org/schema/mule/http/3.9/mule-http.xsd"/>
    <xsd:import namespace = "http://www.mulesoft.org/schema/mule/schemadoc"
                schemaLocation = "http://www.mulesoft.org/schema/mule/schemadoc/3.9/mule-schemadoc.xsd"/>

    <xsd:annotation>
        <xsd:documentation>The Jetty transport provides support for exposing services over HTTP by embedding a light-weight Jetty server. You can only define inbound endpoints with this transport.
        </xsd:documentation>
        <xsd:appinfo>
            <schemadoc:short-name>Jetty</schemadoc:short-name>
            <schemadoc:page-title>Jetty Transport</schemadoc:page-title>
            <schemadoc:transport-features receiveEvents="true" dispatchEvents="false"
                                          requestEvents="true" transactions="false" streaming="true">
                <schemadoc:MEPs supported="one-way, request-response" default="request-response"/>
            </schemadoc:transport-features>
        </xsd:appinfo>
    </xsd:annotation>

    <xsd:element name="connector" type="jettyConnectorType" substitutionGroup="mule:abstract-connector">
        <xsd:annotation>
            <xsd:documentation>
                Allows Mule to expose Mule Services over HTTP using a Jetty HTTP server. A single Jetty server is created for each connector instance. One connector can serve many endpoints. Users should rarely need to have more than one Jetty connector. The Jetty connector can be configured using a Jetty XML config file, but the default configuration is sufficient for most scenarios.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="jettyConnectorType">
        <xsd:complexContent>
            <xsd:extension base="mule:connectorType">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="webapps" type="webappsType">
                        <xsd:annotation>
                            <xsd:documentation>
                                Allows configuring of a directory which contains WAR files to be
                                served out by Jetty.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="configFile" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The location of the Jetty config file to configure this connector with.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="acceptors" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            The number of Jetty "acceptor" threads to use. May be increased for improved throughput. Defaults: 1
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="useContinuations" type="mule:substitutableBoolean">
                    <xsd:annotation>
                        <xsd:documentation>
                            Whether to use continuations to free up connections in high load situations.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="resourceBase" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Specifies a local path where files will be served from. The local path gets mapped directly to the path on the 'serverUrl'.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="webappsType">
        <xsd:attribute name="port" type="mule:substitutablePortNumber">
            <xsd:annotation>
                <xsd:documentation>
                    The port of the Jetty instance. Default: 8585
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The host of the Jetty instance. Default: 0.0.0.0 (all network interfaces)
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="directory" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The directory where webapps can be found. Default: ${app.home}/webapps
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="serverClasses" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                A comma delimited list of classes which cannot be seen by webapp context classloaders but can be overridden by the webapp.
                Defaults to all classes in org.eclipse.jetty., except: org.eclipse.jetty.continuation., org.eclipse.jetty.jndi., org.eclipse.jetty.plus.jaas.,
                org.eclipse.jetty.websocket.WebSocket, org.eclipse.jetty.websocket.WebSocketFactory, org.eclipse.jetty.websocket.WebSocketServlet,
                org.eclipse.jetty.servlet.DefaultServlet., org.eclipse.jetty.servlet.listener.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="systemClasses" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                A comma delimited list of classes which cannot be overridden by webapp classloaders.
                Defaults to: java., javax., org.xml., org.w3c., org.apache.commons.logging., org.eclipse.jetty.continuation., org.eclipse.jetty.jndi.,
                org.eclipse.jetty.plus.jaas., org.eclipse.jetty.websocket.WebSocket, org.eclipse.jetty.websocket.WebSocketFactory,
                org.eclipse.jetty.websocket.WebSocketServlet, org.eclipse.jetty.servlet.DefaultServlet.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:element name="inbound-endpoint" type="inboundEndpointType" substitutionGroup="mule:abstract-inbound-endpoint">
        <xsd:annotation>
            <xsd:documentation>
                Allows a Mule service to receive requests over HTTP using a Jetty server.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="inboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="http:inboundEndpointType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="endpoint" type="globalEndpointType" substitutionGroup="mule:abstract-global-endpoint">
        <xsd:annotation>
            <xsd:documentation>
                Allows users to configure a global Jetty HTTP endpoint. Note that this can only be used as an inbound-endpoint reference.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="globalEndpointType">
        <xsd:complexContent>
            <xsd:extension base="http:globalEndpointType"/>
        </xsd:complexContent>
    </xsd:complexType>

</xsd:schema>
