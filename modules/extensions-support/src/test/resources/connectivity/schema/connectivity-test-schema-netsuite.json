{
  "groupId": "com.mulesoft.schemas",
  "artifactId": "mule-netsuite-connector-token-authentication",
  "version": "1.0",
  "labels": {
    "type": "ApiKeyAuthenticationConnection",
    "system": "Netsuite",
    "connectionProvider": "token-authentication"
  },
  "assets": [
    {
      "groupId": "com.mulesoft.connectors",
      "assetId": "citizen-netsuite-connector",
      "version": "1.0.0-alpha-005"
    }
  ],
  "definition": {
    "documents": {
      "root": {
        "encodes": "Connection"
      }
    },
    "uses": {
      "connectivity": "anypoint://semantics/connectivity"
    },
    "external": {
      "core": "anypoint://semantics/core",
      "apiContract": "anypoint://semantics/api-contract"
    },
    "nodeMappings": {
      "Connection": {
        "classTerm": "connectivity.ApiKeyAuthenticationConnection",
        "mapping": {
          "account": {
            "propertyTerm": "connectivity.accountId",
            "range": "string",
            "mandatory": true
          },
          "consumerKey": {
            "propertyTerm": "connectivity.clientId",
            "range": "string",
            "mandatory": true
          },
          "consumerSecret": {
            "propertyTerm": "connectivity.clientSecret",
            "range": "string",
            "mandatory": true
          },
          "tokenId": {
            "propertyTerm": "connectivity.tokenId",
            "range": "string",
            "mandatory": true
          },
          "tokenSecret": {
            "propertyTerm": "connectivity.tokenSecret",
            "range": "string",
            "mandatory": true
          },
          "endpoint": {
            "propertyTerm": "apiContract.endpoint",
            "range": "string",
            "mandatory": false
          },
          "proxy": {
            "propertyTerm": "connectivity.proxyConfiguration",
            "range": "ProxyConfiguration",
            "mandatory": false
          },
          "tlsContext": {
            "propertyTerm": "connectivity.tlsContext",
            "range": "TlsContext",
            "mandatory": false
          }
        }
      },
      "ProxyConfiguration": {
        "classTerm": "connectivity.ProxyConfiguration",
        "mapping": {
          "proxyHost": {
            "propertyTerm": "connectivity.host",
            "range": "string",
            "mandatory": false
          },
          "proxyPort": {
            "propertyTerm": "connectivity.port",
            "range": "number",
            "mandatory": false
          },
          "proxyUsername": {
            "propertyTerm": "connectivity.username",
            "range": "string",
            "mandatory": false
          },
          "proxyPassword": {
            "propertyTerm": "connectivity.password",
            "range": "string",
            "mandatory": false
          }
        }
      },
      "TlsContext": {
        "classTerm": "connectivity.TlsContext",
        "mapping": {
          "enabledProtocols": {
            "propertyTerm": "connectivity.tlsContextEnabledProtocols",
            "range": "string",
            "mandatory": false
          },
          "enabledCipherSuites": {
            "propertyTerm": "connectivity.tlsContextEnabledCipherSuites",
            "range": "string",
            "mandatory": false
          },
          "trust-store": {
            "propertyTerm": "connectivity.trustStore",
            "range": "TrustStore",
            "mandatory": false
          },
          "key-store": {
            "propertyTerm": "connectivity.keyStore",
            "range": "KeyStore",
            "mandatory": false
          },
          "revocation-check": {
            "propertyTerm": "connectivity.revocationCheck",
            "range": "RevocationCheckUnion",
            "mandatory": false
          }
        }
      },
      "TrustStore": {
        "classTerm": "connectivity.TrustStore",
        "mapping": {
          "path": {
            "propertyTerm": "apiContract.path",
            "range": "string",
            "mandatory": false
          },
          "password": {
            "propertyTerm": "connectivity.password",
            "range": "string",
            "mandatory": false
          },
          "type": {
            "propertyTerm": "connectivity.sslType",
            "range": "string",
            "mandatory": false
          },
          "algorithm": {
            "propertyTerm": "connectivity.sslAlgorithm",
            "range": "string",
            "mandatory": false
          },
          "insecure": {
            "propertyTerm": "connectivity.trustStoreInsecure",
            "range": "boolean",
            "mandatory": false
          }
        }
      },
      "KeyStore": {
        "classTerm": "connectivity.KeyStore",
        "mapping": {
          "path": {
            "propertyTerm": "apiContract.path",
            "range": "string",
            "mandatory": false
          },
          "type": {
            "propertyTerm": "connectivity.sslType",
            "range": "string",
            "mandatory": false
          },
          "alias": {
            "propertyTerm": "connectivity.keyStoreAlias",
            "range": "string",
            "mandatory": false
          },
          "keyPassword": {
            "propertyTerm": "connectivity.keyStoreKeyPassword",
            "range": "string",
            "mandatory": false
          },
          "password": {
            "propertyTerm": "connectivity.password",
            "range": "string",
            "mandatory": false
          },
          "algorithm": {
            "propertyTerm": "connectivity.sslAlgorithm",
            "range": "string",
            "mandatory": false
          }
        }
      },
      "RevocationCheckUnion": {
        "union": [
          "StandardRevocationCheck",
          "CustomOcspResponder",
          "CrlFile"
        ],
        "typeDiscriminatorName": "typeId",
        "typeDiscriminator": {
          "standard-revocation-check": "StandardRevocationCheck",
          "custom-ocsp-responder": "CustomOcspResponder",
          "crl-file": "CrlFile"
        }
      },
      "StandardRevocationCheck": {
        "classTerm": "connectivity.StandardRevocationCheck",
        "mapping": {
          "onlyEndEntities": {
            "propertyTerm": "connectivity.standardRevocationCheckOnlyEndEntities",
            "range": "boolean",
            "mandatory": false
          },
          "preferCrls": {
            "propertyTerm": "connectivity.standardRevocationCheckPreferCrls",
            "range": "boolean",
            "mandatory": false
          },
          "noFallback": {
            "propertyTerm": "connectivity.standardRevocationCheckNoFallback",
            "range": "boolean",
            "mandatory": false
          },
          "softFail": {
            "propertyTerm": "connectivity.standardRevocationCheckSoftFail",
            "range": "boolean",
            "mandatory": false
          }
        }
      },
      "CustomOcspResponder": {
        "classTerm": "connectivity.CustomOcspResponderRevocationCheck",
        "mapping": {
          "url": {
            "propertyTerm": "core.urlTemplate",
            "range": "string",
            "mandatory": false
          },
          "certAlias": {
            "propertyTerm": "connectivity.customOcspResponderRevocationCheckCertAlias",
            "range": "string",
            "mandatory": false
          }
        }
      },
      "CrlFile": {
        "classTerm": "connectivity.CrlFileRevocationCheck",
        "mapping": {
          "path": {
            "propertyTerm": "apiContract.path",
            "range": "string",
            "mandatory": false
          }
        }
      }
    }
  }
}
