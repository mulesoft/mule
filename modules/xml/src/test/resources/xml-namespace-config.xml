<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <mulexml:namespace-manager includeConfigNamespaces="true">
        <mulexml:namespace prefix="foo" uri="http://foo.com"/>
    </mulexml:namespace-manager>

    <endpoint name="test.ep1" address="test://ep1">
        <mulexml:jxpath-filter pattern="/bar:foo/bar:bar">
            <mulexml:namespace prefix="bar" uri="http://bar.com"/>
        </mulexml:jxpath-filter>
    </endpoint>

    <endpoint name="test.ep2" address="test://ep2">
        <mulexml:jaxen-filter pattern="/car:foo/car:bar">
            <mulexml:namespace prefix="car" uri="http://car.com"/>
        </mulexml:jaxen-filter>
    </endpoint>

    <mulexml:jxpath-extractor-transformer name="jxpath-extractor">
        <mulexml:namespace prefix="bar" uri="http://bar.com"/>
    </mulexml:jxpath-extractor-transformer>

    <mulexml:jaxb-object-to-xml-transformer name="ObjectToXml" jaxbContext-ref="myJaxb"/>

    <mulexml:jaxb-xml-to-object-transformer name="XmlToObject" jaxbContext-ref="myJaxb" returnClass="org.mule.jaxb.model.Person"/>

    <mulexml:jaxb-context name="myJaxb" packageNames="org.mule.jaxb.model"/>

    <!-- The above is equivalent to the following Spring config
    <spring:bean name="myJaxb" class="javax.xml.bind.JAXBContext" factory-method="newInstance">
         <!- comma-separated list of package names where JAXB classes exist ->
        <spring:constructor-arg value="org.mule.jaxb.model"/>
    </spring:bean>
    -->
    
    <spring:bean name="resourceResolver" class="org.mule.module.xml.config.XmlNamespaceTestCase$MockResourceResolver"/>
    <spring:bean name="errorHandler" class="org.mule.module.xml.config.XmlNamespaceTestCase$MockErrorHandler"/>
    
    <mulexml:schema-validation-filter name="SchemaValidationWithResourceResolver" 
        schemaLocations="schema/schema1.xsd" resourceResolver-ref="resourceResolver"
        errorHandler-ref="errorHandler" returnResult="false"/>
    
	<mulexml:schema-validation-filter name="SchemaValidationWithResourceAndCustomSecurityResolver"
		schemaLocations="schema/schema1.xsd" resourceResolver-ref="resourceResolver" errorHandler-ref="errorHandler"
		returnResult="false" acceptExternalEntities="true" expandInternalEntities="true"
		/>
	</mule>
