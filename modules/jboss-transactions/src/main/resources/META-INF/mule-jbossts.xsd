<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/jbossts"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:spring="http://www.springframework.org/schema/beans"
            xmlns:schemadoc="http://www.mulesoft.org/schema/mule/schemadoc"
            xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            targetNamespace="http://www.mulesoft.org/schema/mule/jbossts"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.springframework.org/schema/beans"
                schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.1.xsd"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="http://www.mulesoft.org/schema/mule/core/3.8/mule.xsd"/>

    <xsd:annotation>
        <xsd:documentation>This module enables Mule to use the JBoss transaction manager (previously Arjuna) to configure [XA transactions|Transaction Management#XA Transactions]. Developers can configure one Transaction Manger per Mule instance. For more information, see [JBoss Transactions|http://www.jboss.org/jbosstm/].
        </xsd:documentation>
        <xsd:appinfo>
            <schemadoc:short-name>jbossts</schemadoc:short-name>
            <schemadoc:page-title>JBoss Transaction Manager</schemadoc:page-title>
        </xsd:appinfo>
    </xsd:annotation>

    <xsd:element name="transaction-manager" type="transactionManagerType"
                 substitutionGroup="mule:abstract-shared-transaction-manager">
        <xsd:annotation>
            <xsd:documentation>
                To configure an instance of the JBoss transaction manager within Mule, add this element to your Mule XML config file. You can configure arbitrary properties on the transaction manager that will be passed on to the underlying transaction manager. For example: 
{code:xml}
&lt;jbossts:transaction-manager&gt;
   &lt;property key="test" value="TEST"/&gt;
&lt;/jbossts:transaction-manager&gt;
{code}

You can then declare XA transactions on endpoints supporting XA transactions, and all those transactions will be managed by the JBoss transaction manager.

Mule auto-generates the transaction manager XA node ID. To specify the ID yourself, add the following property:

{code:xml}
&lt;jbossts:transaction-manager&gt;
   &lt;properties&gt;
      &lt;spring:entry key="com.arjuna.ats.arjuna.xa.nodeIdentifier" value="SomeUserNodeId"/&gt;
   &lt;/properties&gt;
&lt;/jbossts:transaction-manager&gt;
{code}
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="transactionManagerType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractTransactionManagerType">
                <xsd:sequence>
                    <xsd:group ref="mule:propertiesGroup"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>


</xsd:schema>
