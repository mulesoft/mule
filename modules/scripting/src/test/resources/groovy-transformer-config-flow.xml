<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:spring="http://www.springframework.org/schema/beans" xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
    xmlns:test="http://www.mulesoft.org/schema/mule/test"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <script:transformer name="stringReplace">
        <script:script engine="groovy">
            return src.toString().replaceAll("l", "x")
        </script:script>
    </script:transformer>

    <!--// START SNIPPET: transformer-config -->
    <script:transformer name="stringReplaceWithParams">
        <script:script engine="groovy">
            <script:property key="oldStr" value="l" />
            <script:property key="newStr" value="x" />
            <script:text>
                return payload.toString().replaceAll("$oldStr", "$newStr")
            </script:text>
        </script:script>
    </script:transformer>
    <!--// END SNIPPET: transformer-config -->


    <flow name="inlineScript">
        <script:transformer>
            <script:script engine="groovy">
                return src.toString().replaceAll("l", "x")
            </script:script>
        </script:transformer>
        <test:queue name="inlineScriptTestOut"/>
    </flow>

    <flow name="fileBasedScript">
        <script:transformer>
            <script:script file="simple-transformer.groovy" />
        </script:transformer>
        <test:queue name="fileBasedScriptTestOut"/>
    </flow>

    <flow name="referencedTransformer">
        <transformer ref="stringReplace" />
        <test:queue name="referencedTransformerTestOut"/>
    </flow>

    <flow name="referencedTransformerWithParameters">
        <transformer ref="stringReplaceWithParams" />
        <test:queue name="referencedTransformerWithParametersTestOut"/>
    </flow>

    <flow name="transformByAssigningPayload">
        <script:transformer>
            <script:script engine="groovy">
                payload = 'bar'
            </script:script>
        </script:transformer>
    </flow>

     <flow name="transformByAssigningProperty">
        <script:transformer>
            <script:script engine="groovy">
                message = org.mule.runtime.core.internal.message.InternalMessage.builder(message).addOutboundProperty('foo',
                'bar').build()
                return message
            </script:script>
        </script:transformer>
    </flow>

</mule>
