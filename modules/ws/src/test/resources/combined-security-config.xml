<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:ws="http://www.mulesoft.org/schema/mule/ws"
      xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
               http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
               http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
               http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
               http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd">

    <configuration>
        <http:config useTransportForUris="${useTransportForUris}"/>
    </configuration>

    <tls:context name="tlsContextSignature">
        <tls:trust-store path="trustStore" password="mulepassword" type="jks" />
        <tls:key-store path="clientKeystore" keyPassword="mulepassword" password="mulepassword" alias="muleclient" type="jks" />
    </tls:context>

    <tls:context name="tlsContextEncryption">
        <tls:trust-store path="ssltest-cacerts.jks" password="changeit" type="jks" />
        <tls:key-store path="ssltest-keystore.jks" keyPassword="changeit" password="changeit" alias="s1as" type="jks" />
    </tls:context>

    <ws:consumer-config serviceAddress="http://localhost:${port}/services/Test" wsdlLocation="Test.wsdl"
                        service="TestService" port="TestPort" name="consumerConfig">
        <ws:security>
            <ws:wss-username-token username="admin" password="textPassword" passwordType="TEXT" addCreated="true" addNonce="true"/>
            <ws:wss-timestamp expires="60" />
            <ws:wss-sign tlsContext-ref="tlsContextSignature" />
            <ws:wss-verify-signature tlsContext-ref="tlsContextSignature" />
            <ws:wss-encrypt tlsContext-ref="tlsContextEncryption" alias="s1as" />
            <ws:wss-decrypt tlsContext-ref="tlsContextEncryption" />
        </ws:security>
    </ws:consumer-config>


    <flow name="request">
        <inbound-endpoint address="vm://request" exchange-pattern="request-response"/>
        <ws:consumer operation="echo" config-ref="consumerConfig" />
    </flow>


    <flow name="server">
        <inbound-endpoint address="http://localhost:${port}/services/Test"
                          exchange-pattern="request-response">
            <cxf:jaxws-service serviceClass="org.mule.module.ws.consumer.TestService">
                <cxf:inInterceptors>
                    <spring:bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
                        <spring:constructor-arg>
                            <spring:map>
                                <spring:entry key="action" value="UsernameToken Timestamp Signature Encrypt" />
                                <spring:entry key="passwordCallbackClass" value="org.mule.module.ws.functional.CombinedSecurityFunctionalTestCase$ServerPasswordCallback" />
                                <spring:entry key="signaturePropRefId" value="signatureProperties" />
                                <spring:entry key="signatureProperties">
                                    <spring:props>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.truststore.type">jks</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.truststore.password">mulepassword</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.truststore.file">trustStore</spring:prop>
                                    </spring:props>
                                </spring:entry>
                                <spring:entry key="decryptionPropRefId" value="decryptionProperties" />
                                <spring:entry key="decryptionProperties">
                                    <spring:props>
                                        <spring:prop key="org.apache.ws.security.crypto.provider">org.apache.ws.security.components.crypto.Merlin</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.type">jks</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.password">changeit</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.private.password">changeit</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.alias">s1as</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.file">ssltest-keystore.jks</spring:prop>
                                    </spring:props>
                                </spring:entry>
                            </spring:map>
                        </spring:constructor-arg>
                    </spring:bean>
                </cxf:inInterceptors>
                <cxf:outInterceptors>
                    <spring:bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
                        <spring:constructor-arg>
                            <spring:map>
                                <spring:entry key="action" value="Signature Encrypt" />
                                <spring:entry key="signatureUser" value="muleserver" />
                                <spring:entry key="passwordCallbackClass" value="org.mule.module.ws.functional.CombinedSecurityFunctionalTestCase$ServerPasswordCallback" />
                                <spring:entry key="signaturePropRefId" value="signatureProperties" />
                                <spring:entry key="signatureProperties">
                                    <spring:props>
                                        <spring:prop key="org.apache.ws.security.crypto.provider">org.apache.ws.security.components.crypto.Merlin</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.type">jks</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.password">mulepassword</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.private.password">mulepassword</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.alias">muleserver</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.file">serverKeystore</spring:prop>
                                    </spring:props>
                                </spring:entry>
                                <spring:entry key="encryptionUser" value="s1as" />
                                <spring:entry key="encryptionPropRefId" value="encryptionProperties" />
                                <spring:entry key="encryptionProperties">
                                    <spring:props>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.truststore.type">jks</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.truststore.password">changeit</spring:prop>
                                        <spring:prop key="org.apache.ws.security.crypto.merlin.truststore.file">ssltest-cacerts.jks</spring:prop>
                                    </spring:props>
                                </spring:entry>
                            </spring:map>
                        </spring:constructor-arg>
                    </spring:bean>
                </cxf:outInterceptors>
            </cxf:jaxws-service>
        </inbound-endpoint>
        <component class="org.mule.module.ws.consumer.TestService"/>
    </flow>

</mule>