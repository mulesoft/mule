<?xml version="1.0" encoding="UTF-8"?>
<module name="module-simple"
        prefix="simple-prefix"
        namespace="http://www.mulesoft.org/schema/a/different/path/mule/module-simple"
        xmlns="http://www.mulesoft.org/schema/mule/module"
        xmlns:mule="http://www.mulesoft.org/schema/mule/core"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
           http://www.mulesoft.org/schema/mule/module http://www.mulesoft.org/schema/mule/module/current/mule-module.xsd
           http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <operation name="set-payload-hardcoded-value">
        <body>
            <mule:set-payload value="hardcoded value"/>
        </body>
        <output type="string"/>
    </operation>

    <operation name="set-payload-param-value">
        <parameters>
            <parameter name="value" type="string"/>
        </parameters>
        <body>
            <mule:set-payload value="#[parameters.value]"/>
        </body>
        <output type="string"/>
    </operation>

    <operation name="set-payload-param-default-value">
        <parameters>
            <parameter name="value" type="string" defaultValue="15"/>
        </parameters>
        <body>
            <mule:set-payload value="#[parameters.value]"/>
        </body>
        <output type="string"/>
    </operation>

    <operation name="set-payload-param-default-value-use-optional">
        <parameters>
            <parameter name="value" type="string" use="OPTIONAL" defaultValue="15"/>
        </parameters>
        <body>
            <mule:set-payload value="#[parameters.value]"/>
        </body>
        <output type="string"/>
    </operation>

    <operation name="set-payload-no-side-effect">
        <body>
            <mule:set-payload value="10"/>
            <mule:set-variable variableName="testVar" value="inside the operation value changed"/>
        </body>
        <output type="string"/>
    </operation>

    <operation name="do-nothing">
        <body>
            <mule:set-variable variableName="variableBeforeCalling" value="this value will be written within this scope, but won't be propagated" />
            <mule:set-payload value="despite writing the payload, it won't be propagated because of the void return type" />
        </body>
    </operation>

    <operation name="set-payload-param-value-appender">
        <parameters>
            <parameter name="value" type="string"/>
        </parameters>
        <body>
            <mule:set-payload value="#[parameters.value ++ ' from module']"/>
        </body>
        <output type="string"/>
    </operation>

    <operation name="set-payload-concat-params-values">
        <parameters>
            <parameter name="value1" type="string"/>
            <parameter name="value2" type="string"/>
        </parameters>
        <body>
            <mule:set-payload value="#[parameters.value1 ++ parameters.value2]"/>
        </body>
        <output type="string"/>
        <output-attributes type="string"/>
    </operation>

    <operation name="set-payload-using-undefined-param">
        <body>
            <mule:set-payload value="#[parameters.value1]"/>
        </body>
        <output type="string"/>
    </operation>

    <operation name="set-payload-using-optional-param">
        <parameters>
            <parameter name="value1" type="string" use="OPTIONAL" />
        </parameters>
        <body>
            <mule:set-payload value="a value"/>
            <!-- will override payload with the null 'value1' parameter-->
            <mule:set-payload value="#[parameters.value1]"/>
        </body>
        <output type="string"/>
    </operation>

    <operation name="set-payload-using-param-value-more-than-once">
        <parameters>
            <parameter name="value" type="string"/>
        </parameters>
        <body>
            <mule:set-payload value="#[parameters.value]"/>
            <mule:set-payload value="#[parameters.value]"/>
        </body>
        <output type="string"/>
    </operation>
</module>
