<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/bpm"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            xmlns:schemadoc="http://www.mulesoft.org/schema/mule/schemadoc"
            targetNamespace="http://www.mulesoft.org/schema/mule/bpm"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">
            
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="http://www.mulesoft.org/schema/mule/core/3.9/mule.xsd" />
    <xsd:import namespace = "http://www.mulesoft.org/schema/mule/schemadoc"
                schemaLocation = "http://www.mulesoft.org/schema/mule/schemadoc/3.9/mule-schemadoc.xsd"/>
    
    <xsd:annotation>
        <xsd:documentation>
            Support for BPM allows you to send/receive messages to/from a running process. A message from Mule can start or advance a process, the message can be stored as a process variable, and a running process can send messages to any endpoint in your Mule application.
        </xsd:documentation>
        <xsd:appinfo>
            <schemadoc:short-name>BPM</schemadoc:short-name>
            <schemadoc:page-title>BPM Support</schemadoc:page-title>
        </xsd:appinfo>
    </xsd:annotation>

    <xsd:element name="process" type="processComponentType" substitutionGroup="mule:abstract-component">
        <xsd:annotation>
            <xsd:documentation>
                A process backed by a BPMS such as jBPM.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="processComponentType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractComponentType">
                <xsd:attribute name="bpms-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            An optional reference to the underlying BPMS.  This is used to disambiguate in the case where more than one BPMS is available.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="processName" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The logical name of the process.  This is used to look up the running process instance from the BPMS.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="processDefinition" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The resource containing the process definition, this will be used to deploy the process to the BPMS.  The resource type depends on the BPMS being used. 
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="processIdField" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            This field will be used to correlate Mule messages with processes.  If not specified, it will default to MULE_BPM_PROCESS_ID.  
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="jbpm" type="jbpmType" substitutionGroup="mule:abstract-extension" />
 
    <xsd:complexType name="jbpmType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractExtensionType">
                 <xsd:attribute name="name" type="mule:substitutableName">
                     <xsd:annotation>
                         <xsd:documentation>
                              An optional name for this BPMS.  Refer to this from the "bpms-ref" field of your process in case you have more than one BPMS available.
                         </xsd:documentation>
                     </xsd:annotation>
                 </xsd:attribute>
                 <xsd:attribute name="configurationResource" type="xsd:string">
                     <xsd:annotation>
                         <xsd:documentation>
                             The configuration file for jBPM, default is "jbpm.cfg.xml" if not specified.
                         </xsd:documentation>
                     </xsd:annotation>
                 </xsd:attribute>
                 <xsd:attribute name="processEngine-ref" type="xsd:string">
                     <xsd:annotation>
                         <xsd:documentation>
                             A reference to the already-initialized jBPM ProcessEngine.  This is useful if you use Spring to configure your jBPM instance.  Note that the "configurationResource" attribute will be ignored in this case.
                         </xsd:documentation>
                     </xsd:annotation>
                 </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="rules" type="rulesComponentType" substitutionGroup="mule:abstract-component">
        <xsd:annotation>
            <xsd:documentation>
                A service backed by a rules engine such as Drools.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="rulesComponentType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractComponentType">
                <xsd:attribute name="rulesEngine-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            A reference to the underlying Rules Engine.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="rulesDefinition" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The resource containing the rules definition.  This will be used to deploy the ruleset to the Rules Engine.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="initialFacts-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            A reference to a collection of initial facts to be asserted at startup.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="cepMode" type="xsd:boolean">
                    <xsd:annotation>
                        <xsd:documentation>
                            Are we using the knowledge base for CEP (Complex Event Processing)? (default = false)
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="entryPoint" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            Entry point for event stream (used by CEP).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="drools" type="droolsType" substitutionGroup="mule:abstract-extension" />

    <xsd:complexType name="droolsType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractExtensionType">
                 <xsd:attribute name="name" type="mule:substitutableName">
                     <xsd:annotation>
                         <xsd:documentation>
                             An optional name for this Rules Engine.  Refer to this from the "rulesEngine-ref" field of your component in case you have more than one Rules Engine configured.
                         </xsd:documentation>
                     </xsd:annotation>
                 </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
</xsd:schema>

