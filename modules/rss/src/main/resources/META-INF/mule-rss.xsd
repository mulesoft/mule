<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/rss"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            xmlns:schemadoc="http://www.mulesoft.org/schema/mule/schemadoc"
            xmlns:beans="http://www.springframework.org/schema/beans"
            targetNamespace="http://www.mulesoft.org/schema/mule/rss"
            elementFormDefault="qualified" attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.springframework.org/schema/beans"
                schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.1.xsd"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="http://www.mulesoft.org/schema/mule/core/3.9/mule.xsd"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/schemadoc"
                schemaLocation="http://www.mulesoft.org/schema/mule/schemadoc/3.9/mule-schemadoc.xsd"/>

    <xsd:annotation>
        <xsd:documentation>
            RSS is a popular syndication format used by many websites to provide a feed of data such
            as news or updates.
        </xsd:documentation>

        <xsd:appinfo>
            <schemadoc:short-name>RSS</schemadoc:short-name>
            <schemadoc:page-title>RSS Module</schemadoc:page-title>
        </xsd:appinfo>
    </xsd:annotation>

    <xsd:element name="feed-splitter" type="mule:baseSplitterType"
                 substitutionGroup="mule:abstract-intercepting-message-processor">
        <xsd:annotation>
            <xsd:documentation>
                Will split the entries of a feed into single entry objects. Each entry will be a separate message in Mule.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="entry-last-updated-filter" type="entryLastUpdateFilterType"
                 substitutionGroup="mule:abstract-filter">
        <xsd:annotation>
            <xsd:documentation>
                Will filter RSS entry objects based on their last update date. This is useful for filtering older entries from the feed. This filter works only on RSS SyndEntry objects not SyndFeed objects.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="entryLastUpdateFilterType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractFilterType">
                <xsd:attribute name="lastUpdate" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The date from which to filter events from. Any entries that were last updated before this date will not be accepted. The date format is: yyyy-MM-dd hh:mm:ss, for example 2008-12-25 13:00:00. If only the date is important you can omit the time part. You can set the value to 'now' to set the date and time that the server is started. Do not set this attribute if you want to receive all available entries then any new entries going forward. This is the default behaviour and suitable for many scenarios.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="acceptWithoutUpdateDate" type="mule:substitutableBoolean" default="true">
                    <xsd:annotation>
                        <xsd:documentation>
                            Whether an entry should be accepted if it doesn't have a Last Update date set.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="feed-last-updated-filter" type="feedLastUpdateFilterType"
                 substitutionGroup="mule:abstract-filter">
        <xsd:annotation>
            <xsd:documentation>
                Will filter the whole RSS Feed based on its last update date. This is useful for processing a feed that has not been updated since a specific date. This filter works only on RSS SyndFeed objects.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="feedLastUpdateFilterType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractFilterType">
                <xsd:attribute name="lastUpdate" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The date from which to filter events from. Any feeds that were last updated before this date will not be accepted. The date format is: yyyy-MM-dd hh:mm:ss, for example 2008-12-25 13:00:00. If only the date is important you can omit the time part. You can set the value to 'now' to set the date and time that the server is started. Do not set this attribute if you want to receive all available entries then any new entries going forward. This is the default behaviour and suitable for many scenarios.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="acceptWithoutUpdateDate" type="mule:substitutableBoolean" default="true">
                    <xsd:annotation>
                        <xsd:documentation>
                            Whether a Feed should be accepted if it doesn't have a Last Update date set.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="object-to-feed-transformer" type="mule:abstractTransformerType" substitutionGroup="mule:abstract-transformer">
        <xsd:annotation>
            <xsd:documentation>
                Transforms the payload of the message to a {{com.sun.syndication.feed.synd.SyndFeed}} instance.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
</xsd:schema>
