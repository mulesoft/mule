<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.mule.runtime</groupId>
        <artifactId>mule-modules</artifactId>
        <version>4.9.0-SNAPSHOT</version>
    </parent>
    <artifactId>mule-module-extensions-mule-support</artifactId>
    <name>Mule SDK Extension Support</name>
    <packaging>jar</packaging>
    <description>
        Extensions API implementation for writing extensions using the Mule language
    </description>

    <properties>
        <surefire.args>
            ${surefire.test.unit.open.args}
        </surefire.args>

        <javaModuleName>org.mule.runtime.extensions.mule.support</javaModuleName>
        <skipExportTests>false</skipExportTests>
        <formatterConfigPath>../../formatter.xml</formatterConfigPath>
        <!-- prevent error with transitive dependency on mule-api -->
        <revapi.checkDependencies>true</revapi.checkDependencies>
    </properties>

    <dependencies>
        <!-- Mule Dependencies -->
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-extensions-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-artifact-ast</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-artifact-ast-xml-parser</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-module-extensions-support</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-module-extensions-spring-support</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-module-dsl-api</artifactId>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <!-- Not really a test dependency per se, but if missing test runner fails to bootstrap -->
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-service-http-api</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Needed for tests to be able to parse test config files -->
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-module-spring-config</artifactId>
            <version>${project.version}</version>
            <!-- provided instead of test so that the test framework doesn't wrongfully assume that this goes in -->
            <!-- the app classpath, this needs to go into the container classloader -->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-allure</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-module-extensions-support</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-unit</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests.plugin</groupId>
            <artifactId>mule-tests-component-plugin</artifactId>
            <version>${project.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-model</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-functional</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-runner</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tx-extension</artifactId>
            <version>${project.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <!-- Excluding as it will be resolved with SNAPSHOT version because test-components
                    is SNAPSHOT to avoid a circular dep within mule and mule-test-artifacts repos -->
                    <groupId>org.mule.sdk</groupId>
                    <artifactId>mule-sdk-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-marvel-extension</artifactId>
            <version>${project.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <!-- Excluding as it will be resolved with SNAPSHOT version because test-components
                    is SNAPSHOT to avoid a circular dep within mule and mule-test-artifacts repos -->
                    <groupId>org.mule.sdk</groupId>
                    <artifactId>mule-sdk-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-heisenberg-extension</artifactId>
            <version>${project.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <!-- Excluding as it will be resolved with SNAPSHOT version because test-components
                    is SNAPSHOT to avoid a circular dep within mule and mule-test-artifacts repos -->
                    <groupId>org.mule.sdk</groupId>
                    <artifactId>mule-sdk-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-subtypes-extension</artifactId>
            <version>${project.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <!-- Excluding as it will be resolved with SNAPSHOT version because test-components
                    is SNAPSHOT to avoid a circular dep within mule and mule-test-artifacts repos -->
                    <groupId>org.mule.sdk</groupId>
                    <artifactId>mule-sdk-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-vegan-extension</artifactId>
            <version>${project.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <!-- Excluding as it will be resolved with SNAPSHOT version because test-components
                    is SNAPSHOT to avoid a circular dep within mule and mule-test-artifacts repos -->
                    <groupId>org.mule.sdk</groupId>
                    <artifactId>mule-sdk-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mule.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>${jsonassert.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-api</artifactId>
            <version>${muleApiVersion}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <!--TODO: MULE-11030 remove dependency-->
        <dependency>
            <groupId>org.mule.services</groupId>
            <artifactId>mule-service-weave</artifactId>
            <classifier>mule-service</classifier>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-dwb-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>${basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-testCompile</id>
                        <configuration>
                            <compilerArgs>
                                <arg>--add-exports=org.mule.runtime.artifact.ast/org.mule.runtime.ast.internal.model=org.mule.runtime.extensions.mule.support</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <mule.experimental.enableMuleSdk>true</mule.experimental.enableMuleSdk>
                        <mule.experimental.enableDynamicConfigRef>true</mule.experimental.enableDynamicConfigRef>
                    </systemPropertyVariables>
                    <!-- Module layer is created by the tests-runner, don't need surefire to config the boot layer for the JVM -->
                    <useModulePath>false</useModulePath>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
