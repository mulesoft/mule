<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xsi:schemaLocation="
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

    <configuration>
        <expression-language>
            <import class="org.mule.module.http.functional.listener.HttpListenerResponseStreamingTestCase"/>
        </expression-language>
    </configuration>

    <http:listener-config name="listenerConfig" host="localhost" port="${port}"/>

    <flow name="defaultFlow">
        <http:listener config-ref="listenerConfig" path="/default"/>
        <expression-component>
            payload = new ByteArrayInputStream(HttpListenerResponseStreamingTestCase.TEST_BODY.getBytes())
        </expression-component>
    </flow>

    <flow name="withHeaderTransferEncodingFlow">
        <http:listener config-ref="listenerConfig" path="/withHeaderTransferEncoding">
            <http:response-builder>
                <http:header headerName="Transfer-Encoding" value="chunked"/>
            </http:response-builder>
        </http:listener>
        <expression-component>
            payload = new ByteArrayInputStream(HttpListenerResponseStreamingTestCase.TEST_BODY.getBytes())
        </expression-component>
    </flow>

    <flow name="withHeaderTransferEncodingAndStringPayload">
        <http:listener config-ref="listenerConfig" path="/withHeaderTransferEncodingAndStringPayload">
            <http:response-builder>
                <http:header headerName="Transfer-Encoding" value="chunked"/>
            </http:response-builder>
        </http:listener>
        <expression-component>
            payload = HttpListenerResponseStreamingTestCase.TEST_BODY
        </expression-component>
    </flow>

    <flow name="withOutboundPropertyTransferEncodingAndStringPayload">
        <http:listener config-ref="listenerConfig" path="/withOutboundPropertyTransferEncodingAndStringPayload"/>
        <set-property propertyName="Transfer-Encoding" value="chunked"/>
        <expression-component>
            payload = HttpListenerResponseStreamingTestCase.TEST_BODY
        </expression-component>
    </flow>

    <flow name="neverStreamWithInputStreamPayload">
        <http:listener config-ref="listenerConfig" path="/neverStreamWithInputStreamPayload" responseStreamingMode="NEVER"/>
        <expression-component>
            payload = new ByteArrayInputStream(HttpListenerResponseStreamingTestCase.TEST_BODY.getBytes())
        </expression-component>
    </flow>

    <flow name="neverStreamWithOutboundPropertyAndInputStreamPayload">
        <http:listener config-ref="listenerConfig" path="/neverStreamWithOutboundPropertyAndInputStreamPayload" responseStreamingMode="NEVER"/>
        <set-property propertyName="Transfer-Encoding" value="chunked"/>
        <expression-component>
            payload = new ByteArrayInputStream(HttpListenerResponseStreamingTestCase.TEST_BODY.getBytes())
        </expression-component>
    </flow>

    <flow name="neverStreamWithHeaderTransferEncodingAndInputStreamPayload">
        <http:listener config-ref="listenerConfig" path="/neverStreamWithHeaderTransferEncodingAndInputStreamPayload" responseStreamingMode="NEVER">
            <http:response-builder>
                <http:header headerName="Transfer-Encoding" value="chunked"/>
            </http:response-builder>
        </http:listener>
        <expression-component>
            payload = new ByteArrayInputStream(HttpListenerResponseStreamingTestCase.TEST_BODY.getBytes())
        </expression-component>
    </flow>

    <flow name="alwaysStreamWithStringPayload">
        <http:listener config-ref="listenerConfig" path="/alwaysStreamWithStringPayload" responseStreamingMode="ALWAYS"/>
        <expression-component>
            payload = HttpListenerResponseStreamingTestCase.TEST_BODY
        </expression-component>
    </flow>

</mule>