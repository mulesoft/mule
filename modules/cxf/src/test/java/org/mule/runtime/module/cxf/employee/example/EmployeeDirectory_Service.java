/*
 * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */
package org.mule.runtime.module.cxf.employee.example;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.7.18
 * 2016-10-21T11:05:29.889-03:00
 * Generated source version: 2.7.18
 * 
 */
@WebServiceClient(name = "EmployeeDirectory",
    wsdlLocation = "file:/Users/juandesi/Workspace/mule-alltogether/mule-ce-4.x/modules/cxf/src/test/resources/employeeDirectory.wsdl",
    targetNamespace = "http://employee.example.mule.org/")
public class EmployeeDirectory_Service extends Service {

  public final static URL WSDL_LOCATION;

  public final static QName SERVICE = new QName("http://employee.example.mule.org/", "EmployeeDirectory");
  public final static QName EmployeeDirectoryPort = new QName("http://employee.example.mule.org/", "EmployeeDirectoryPort");
  static {
    URL url = null;
    try {
      url =
          new URL("file:/Users/juandesi/Workspace/mule-alltogether/mule-ce-4.x/modules/cxf/src/test/resources/employeeDirectory.wsdl");
    } catch (MalformedURLException e) {
      java.util.logging.Logger.getLogger(EmployeeDirectory_Service.class.getName())
          .log(java.util.logging.Level.INFO,
               "Can not initialize the default wsdl from {0}",
               "file:/Users/juandesi/Workspace/mule-alltogether/mule-ce-4.x/modules/cxf/src/test/resources/employeeDirectory.wsdl");
    }
    WSDL_LOCATION = url;
  }

  public EmployeeDirectory_Service(URL wsdlLocation) {
    super(wsdlLocation, SERVICE);
  }

  public EmployeeDirectory_Service(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public EmployeeDirectory_Service() {
    super(WSDL_LOCATION, SERVICE);
  }

  //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
  //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
  //compliant code instead.
  public EmployeeDirectory_Service(WebServiceFeature... features) {
    super(WSDL_LOCATION, SERVICE, features);
  }

  //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
  //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
  //compliant code instead.
  public EmployeeDirectory_Service(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, SERVICE, features);
  }

  //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
  //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
  //compliant code instead.
  public EmployeeDirectory_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }

  /**
   *
   * @return
   *     returns EmployeeDirectory
   */
  @WebEndpoint(name = "EmployeeDirectoryPort")
  public EmployeeDirectory getEmployeeDirectoryPort() {
    return super.getPort(EmployeeDirectoryPort, EmployeeDirectory.class);
  }

  /**
   *
   * @param features
   *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
   * @return
   *     returns EmployeeDirectory
   */
  @WebEndpoint(name = "EmployeeDirectoryPort")
  public EmployeeDirectory getEmployeeDirectoryPort(WebServiceFeature... features) {
    return super.getPort(EmployeeDirectoryPort, EmployeeDirectory.class, features);
  }

}
