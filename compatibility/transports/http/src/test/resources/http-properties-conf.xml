<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:http="http://www.mulesoft.org/schema/mule/transport/http"
      xmlns:transports="http://www.mulesoft.org/schema/mule/transports"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/transport/http http://www.mulesoft.org/schema/mule/transport/http/current/mule-transport-http.xsd
       http://www.mulesoft.org/schema/mule/transports http://www.mulesoft.org/schema/mule/transports/current/mule-transports.xsd">

    <configuration>
        <transports:config useTransportForUris="true"/>
    </configuration>

    <flow name="testProperties" processingStrategy="synchronous">
        <http:inbound-endpoint address="http://localhost:${port1}/resources" exchange-pattern="request-response"/>
        <set-property propertyName="http.relative.path" value="#[mel:message.inboundProperties['http.relative.path']]"/>
        <set-property propertyName="http.context.uri" value="#[mel:message.inboundProperties['http.context.uri']]"/>

        <choice>
            <when expression="#[mel:message.inboundProperties['http.relative.path'] == 'client']">
                <choice>
                    <when expression="#[mel:message.inboundProperties['http.method'] == 'GET']">
                        <expression-transformer>
                            <return-argument expression="#[mel:'Retrieving client with id = ' + message.inboundProperties['http.query.params']['id']]"/>
                        </expression-transformer>
                    </when>
                    <when expression="#[mel:message.inboundProperties['http.method'] == 'POST']">
                        <http:body-to-parameter-map-transformer/>
                        <expression-transformer>
                            <return-argument expression="#[mel:'Storing client with name = ' + payload['name'] + ' and lastname = ' + payload['lastname']]"/>
                        </expression-transformer>
                    </when>
                    <otherwise>
                        <expression-transformer>
                            <return-argument expression="#[mel:'Unknown HTTP method: ' + message.inboundProperties['http.method']]"/>
                        </expression-transformer>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <expression-transformer>
                    <return-argument expression="#[mel:'Unknown resource: ' + message.inboundProperties['http.relative.path']]"/>
                </expression-transformer>
            </otherwise>
        </choice>
        <echo-component/>
    </flow>

    <flow name="testRedirect" processingStrategy="synchronous">
        <http:inbound-endpoint address="http://localhost:${port1}/redirect" exchange-pattern="request-response"/>
        <http:outbound-endpoint address="http://localhost:${port1}/newSite/#[mel:message.inboundProperties['http.relative.path']]?#[mel:message.inboundProperties['http.query.string']]" exchange-pattern="request-response"/>
    </flow>

    <flow name="testRedirection" processingStrategy="synchronous">
        <http:inbound-endpoint address="http://localhost:${port1}/newSite" exchange-pattern="request-response"/>
        <expression-transformer>
            <return-argument expression="#[mel:'Successfully redirected: ' + message.inboundProperties['http.relative.path'] + '?' + message.inboundProperties['http.query.string']]"/>
        </expression-transformer>
    </flow>
</mule>
