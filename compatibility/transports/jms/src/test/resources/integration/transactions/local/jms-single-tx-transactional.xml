<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
    xmlns:test="http://www.mulesoft.org/schema/mule/test" xmlns:jms="http://www.mulesoft.org/schema/mule/transport/jms"
    xmlns:transports="http://www.mulesoft.org/schema/mule/transports"
    xmlns:vm="http://www.mulesoft.org/schema/mule/transport/vm"
    xmlns:spring="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/transport/jms http://www.mulesoft.org/schema/mule/transport/jms/current/mule-transport-jms.xsd
       http://www.mulesoft.org/schema/mule/transports http://www.mulesoft.org/schema/mule/transports/current/mule-transports.xsd
       http://www.mulesoft.org/schema/mule/transport/vm http://www.mulesoft.org/schema/mule/transport/vm/current/mule-transport-vm.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd              
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <flow name="transactional">
        <append-string-transformer message=" a"/>
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <transports:outbound-endpoint ref="out2"/>
        </block>
    </flow>

    <flow name="transactionalFailInTheMiddle">
        <append-string-transformer message=" b"/>
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <test:component throwException="true"/>
            <transports:outbound-endpoint ref="out2"/>
        </block>
    </flow>

    <flow name="transactionalFailAtEnd">
        <append-string-transformer message=" c"/>
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <transports:outbound-endpoint ref="out2"/>
            <test:component throwException="true"/>
        </block>
    </flow>

    <flow name="transactionalFailAfterEnd">
        <append-string-transformer message=" d"/>
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <transports:outbound-endpoint ref="out2"/>
        </block>
        <test:component throwException="true"/>
    </flow>

    <flow name="transactionalFailInTheMiddleWithCatchExceptionStrategy">
        <append-string-transformer message=" e"/>
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <test:component throwException="true"/>
            <transports:outbound-endpoint ref="out2"/>
            <error-handler>
                <on-error-continue/>
            </error-handler>
        </block>
    </flow>

    <flow name="transactionalFailAtEndWithCatchExceptionStrategy">
        <append-string-transformer message=" f"/>
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <transports:outbound-endpoint ref="out2"/>
            <test:component throwException="true"/>
            <error-handler>
                <on-error-continue/>
            </error-handler>
        </block>
    </flow>

    <flow name="transactionalFailsWithAnotherResourceType">
        <append-string-transformer message=" g"/>
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <transports:outbound-endpoint ref="out2"/>
            <transports:outbound-endpoint ref="out3"/>
        </block>
    </flow>

    <flow name="transactionalDoesntFailWithAnotherResourceType">
        <append-string-transformer message=" h"/>
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <transports:outbound-endpoint ref="out2"/>
            <transports:outbound-endpoint ref="out3NotSupported"/>
        </block>
    </flow>

    <flow name="transactionalWithAnotherResourceTypeAndExceptionAtEnd">
        <append-string-transformer message=" i"/>
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <transports:outbound-endpoint ref="out3NotSupported"/>
            <transports:outbound-endpoint ref="out2"/>
            <test:component throwException="true"/>
        </block>
    </flow>


    <flow name="nestedTransactional">
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <block transactionalAction="ALWAYS_BEGIN">
                <transports:outbound-endpoint ref="out2"/>
            </block>
        </block>
    </flow>

    <flow name="nestedTransactionalFail">
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <block transactionalAction="ALWAYS_BEGIN">
                <transports:outbound-endpoint ref="out2"/>
                <test:component throwException="true"/>
            </block>
        </block>
    </flow>

    <flow name="nestedTransactionalFailWithCatch">
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <block transactionalAction="ALWAYS_BEGIN">
                <transports:outbound-endpoint ref="out2"/>
                <test:component throwException="true"/>
                <error-handler>
                    <on-error-continue/>
                </error-handler>
            </block>
        </block>
    </flow>

    <flow name="nestedTransactionalWithBeginOrJoin">
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <block transactionalAction="BEGIN_OR_JOIN">
                <transports:outbound-endpoint ref="out2"/>
            </block>
        </block>
    </flow>

    <flow name="nestedTransactionalWithBeginOrJoinFail">
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <block transactionalAction="BEGIN_OR_JOIN">
                <transports:outbound-endpoint ref="out2"/>
                <test:component throwException="true"/>
            </block>
        </block>
    </flow>

    <flow name="nestedTransactionalWithBeginOrJoinFailWithCatch">
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <block transactionalAction="BEGIN_OR_JOIN">
                <transports:outbound-endpoint ref="out2"/>
                <test:component throwException="true"/>
                <error-handler>
                    <on-error-continue/>
                </error-handler>
            </block>
        </block>
    </flow>

    <flow name="nestedTransactionalWithBeginOrJoinFailWithCatchAndRollback">
        <block transactionalAction="ALWAYS_BEGIN">
            <transports:outbound-endpoint ref="out1"/>
            <block transactionalAction="BEGIN_OR_JOIN">
                <transports:outbound-endpoint ref="out2"/>
                <test:component throwException="true"/>
                <error-handler>
                    <on-error-continue/>
                </error-handler>
            </block>
            <test:component throwException="true"/>
            <error-handler>
                <on-error-propagate/>
            </error-handler>
        </block>
        <error-handler>
            <on-error-continue/>
        </error-handler>
    </flow>

</mule>
