<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:httpn="http://www.mulesoft.org/schema/mule/httpn"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd">

    <custom-transformer name="throwsException" class="org.mule.compatibility.module.cxf.OnErrorContinueTestCase$CxfTransformerThrowsExceptions"/>

    <httpn:listener-config name="listenerConfig">
        <httpn:listener-connection host="localhost" port="${port1}"/>
    </httpn:listener-config>

    <httpn:request-config name="requestConfig">
        <httpn:request-connection host="localhost" port="${port1}"/>
    </httpn:request-config>
    <!-- Test Service -->

    <!-- Jaxws Service with exception thrown by component with catch exception strategy -->
    <flow name="FlowServiceFaultWithCatchException">
        <httpn:listener path="testServiceWithFaultCatchException" config-ref="listenerConfig"/>
        <cxf:jaxws-service serviceClass="org.mule.compatibility.module.cxf.TestServiceFaultImpl"/>
        <component class="org.mule.compatibility.module.cxf.TestServiceFaultImpl" />
        <error-handler>
            <on-error-continue>
                <object-to-string-transformer/>
                <append-string-transformer message=" Anonymous"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <!-- Jaxws Service with exception thrown by component with catch exception strategy and Fault rethrown-->
    <flow name="FlowServiceFaultWithCatchExceptionRethrown">
        <httpn:listener path="testServiceWithFaultCatchExceptionRethrown" config-ref="listenerConfig">
            <httpn:response statusCode="#[mel:message.attributes.statusCode]"/>
        </httpn:listener>
        <cxf:jaxws-service serviceClass="org.mule.compatibility.module.cxf.TestServiceFaultImpl"/>
        <component class="org.mule.compatibility.module.cxf.TestServiceFaultImpl" />
        <custom-exception-strategy class="org.mule.compatibility.module.cxf.OnErrorContinueTestCase$RethrowExceptionStrategy">
            <custom-processor class="org.mule.compatibility.module.cxf.OnErrorContinueTestCase$RethrowFaultProcessor"/>
        </custom-exception-strategy>
    </flow>

    <!-- Jaxws Service with exception thrown by transformer with catch exception strategy -->
    <flow name="FlowWithExceptionThrownInTransformerWithCatchException">
        <httpn:listener path="testTransformerExceptionCatchException" config-ref="listenerConfig"/>
        <cxf:jaxws-service serviceClass="org.mule.compatibility.module.cxf.example.HelloWorldImpl"/>
        <component class="org.mule.compatibility.module.cxf.example.HelloWorldImpl" />
        <object-to-string-transformer/>
        <append-string-transformer message="APPEND"/>
        <transformer ref="throwsException"/>
        <error-handler>
            <on-error-continue/>
        </error-handler>
    </flow>

    <!-- End test service -->

    <!-- Test client -->

    <flow name="helloFaultFlow">
        <httpn:listener path="helloFault" config-ref="listenerConfig"/>
        <cxf:jaxws-service serviceClass="org.mule.compatibility.module.cxf.TestServiceFaultImpl"/>
        <component class="org.mule.compatibility.module.cxf.TestServiceFaultImpl" />
    </flow>

    <flow name="helloFlow">
        <httpn:listener path="hello" config-ref="listenerConfig"/>
        <cxf:jaxws-service serviceClass="org.mule.compatibility.module.cxf.example.HelloWorld"/>
        <component class="org.mule.compatibility.module.cxf.example.HelloWorldImpl" />
    </flow>

    <flow name="FlowWithClientAndSOAPFaultCatchException" processingStrategy="synchronous">
        <cxf:jaxws-client serviceClass="org.mule.compatibility.module.cxf.TestServiceFault" operation="sayHi"/>
        <httpn:request path="helloFault" config-ref="requestConfig"/>
        <error-handler>
            <on-error-continue>
                <custom-processor class="org.mule.compatibility.module.cxf.OnErrorContinueTestCase$ProxyCustomProcessor"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="FlowWithClientAndSOAPFaultCatchExceptionRedirect" processingStrategy="synchronous">
        <cxf:jaxws-client serviceClass="org.mule.compatibility.module.cxf.TestServiceFault" operation="sayHi"/>
        <httpn:request path="helloFault" method="POST" config-ref="requestConfig"/>
        <error-handler>
            <on-error-continue>
                <processor-chain>
                    <cxf:jaxws-client serviceClass="org.mule.compatibility.module.cxf.example.HelloWorld" operation="sayHi"/>
                    <httpn:request path="hello" method="POST" config-ref="requestConfig"/>
                </processor-chain>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="FlowWithClientAndTransformerExceptionCatchException" processingStrategy="synchronous">
        <cxf:jaxws-client serviceClass="org.mule.compatibility.module.cxf.example.HelloWorld" operation="sayHi"/>
        <httpn:request path="hello" method="POST" config-ref="requestConfig"/>
        <object-to-string-transformer/>
        <append-string-transformer message=" Anonymous"/>
        <transformer ref="throwsException"/>
        <error-handler>
            <on-error-continue/>
        </error-handler>
    </flow>

    <!--- End test Client -->

    <!-- Test Proxy -->

    <flow name="FlowProxyWithTransformerExceptionCatchStrategy">
        <httpn:listener path="testProxyWithTransformerExceptionCatchStrategy" config-ref="listenerConfig"/>
        <cxf:proxy-service />
        <cxf:proxy-client />
        <object-to-string-transformer/>
        <transformer ref="throwsException"/>
        <httpn:request path="hello" method="POST" config-ref="requestConfig"/>
        <error-handler>
            <on-error-continue>
                <custom-processor class="org.mule.compatibility.module.cxf.OnErrorContinueTestCase$ProxyCustomProcessor"/>
            </on-error-continue>
        </error-handler>
    </flow>

    <!-- End testing Proxy -->

</mule>
